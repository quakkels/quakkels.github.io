<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Quakkels.com</title>
    <link>https://quakkels.com/</link>
    <description>Recent content on Quakkels.com</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Thu, 11 May 2023 00:00:00 +0000</lastBuildDate><atom:link href="https://quakkels.com/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>What Does Superversive Mean?</title>
      <link>https://quakkels.com/posts/202305_1_whatdoessuperversivemean/</link>
      <pubDate>Thu, 11 May 2023 00:00:00 +0000</pubDate>
      
      <guid>https://quakkels.com/posts/202305_1_whatdoessuperversivemean/</guid>
      <description>&lt;p&gt;According to the science fiction author John C. Wright, the term &amp;ldquo;superversive&amp;rdquo;
was &lt;a target=&#34;_blank&#34; rel=&#34;noopener&#34; 
href=&#34;https://www.scifiwright.com/2015/10/anniversary-of-superversive/&#34;&gt;first
coined by Tom Simon&lt;/a&gt;. The first mention of superversive that I could find on
Simon&amp;rsquo;s blog was from &lt;a target=&#34;_blank&#34; rel=&#34;noopener&#34; 
href=&#34;https://bondwine.com/2003/10/19/superversive/&#34;&gt;all the way back in
2003&lt;/a&gt;. Then, in 2014, the word was used in the title of &lt;a target=&#34;_blank&#34; rel=&#34;noopener&#34; 
href=&#34;https://www.ljagilamplighter.com/superversive-literary-movement/&#34;&gt;The Superversive
Literary Movement&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Tom Simon, and others in the movement, recognized that fiction and storytelling
has been increasingly used as propaganda to undermine virtue and traditional
values. He asserts that a concept that he calls &amp;ldquo;superversion&amp;rdquo; is the solution
to the problem.&lt;/p&gt;
&lt;p&gt;Modern storytelling, whether it be in the form of songs, poems, television
shows, movies, or books has been progressively tearing down our cultural
foundations by trying to convince the audience that lies are truth, ugliness is
beautiful, and evil is good. Superversion is the antidote to such societal
decay.&lt;/p&gt;
&lt;h2 id=&#34;what-is-subversion&#34;&gt;What is Subversion?&lt;/h2&gt;
&lt;p&gt;To help us understand the meaning of Superversion, it is important to understand
that it is used as an antonym to subversion. Therefore, we must understand how
subversion is used in this context.&lt;/p&gt;
&lt;p&gt;I really like how Tom Simon explains it. He writes:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;To subvert a thing literally means ‘to turn from below’: to undermine. In olden
days, men built their forts and castles on high ground, because high ground is
easier to defend. A hilltop fortress can be made almost impregnable. But only
almost: for a fortress can be undermined. The attacking army digs tunnels
underneath the fortifications, scooping out the earth and rock until the walls
cave in from their own unsupported weight. This is the original kind of
subversion.&lt;/p&gt;
&lt;p&gt;― &lt;a target=&#34;_blank&#34; rel=&#34;noopener&#34; href=&#34;https://www.ljagilamplighter.com/2014/10/01/the-art-of-courage-superversive-guest-post-by-tom-simon/&#34;&gt;The Art of Courage Superversive Guest Post (Tom Simon)&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;This kind of subversion isn&amp;rsquo;t talking about subverting expectations like when a
story has a stunning plot twist. This isn&amp;rsquo;t describing a shocking reveal such
as the protagonist being dead the whole time, or the villain being the hero&amp;rsquo;s
father. This subversion is very different and very dangerous. This subversion
undermines the foundational norms that societies rest on. If left unabated,
subversion will spread causing people to stop respecting those essential norms
and society will crumble.&lt;/p&gt;
&lt;h2 id=&#34;subversion-is-widespread&#34;&gt;Subversion is Widespread&lt;/h2&gt;
&lt;p&gt;My culture has been experiencing the onslaught from subversive art for a long
time. Tom Simon recognized the grip that subversion had on the fantasy genre
all the way back in 2003. He wrote:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Subversion is a popular word in literary criticism nowadays, and some persons
have suggested that it is the principal function of fantasy. Not a function,
which may perhaps be true, but the function, the sine qua non of imaginative
literature. John Grant has gone so far as to propose that anything that is not
subversive is therefore not fantasy at all, but a subliterary ersatz that he
derisively dubs Generic Fantasy, ‘this monstrous tide of commercially inspired,
mind-numbingly unimaginative garbage — this loathsome mire’. In Mr Grant’s
taxonomy, virtually everything derived from Tolkien, or showing his influence,
is ‘garbage’ and ‘mire’.&lt;/p&gt;
&lt;p&gt;― &lt;a target=&#34;_blank&#34; rel=&#34;noopener&#34; href=&#34;https://bondwine.com/2003/10/19/superversive/&#34;&gt;Superversive (Tom Simon)&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;I had not heard of John Grant before reading Simon&amp;rsquo;s article. But Simon points
to him as evidence for the general subversive tendencies of fantasy authors and
critics. My own anecdotal experience indicates that it isn&amp;rsquo;t just limited to
fantasy, but extends to all forms of art and entertainment. Books, poems,
comics, movies, television, and music have all embraced subversive themes.&lt;/p&gt;
&lt;h2 id=&#34;subversion-example-the-chicken-by-bo-burnham&#34;&gt;Subversion Example: The Chicken by Bo Burnham&lt;/h2&gt;
&lt;p&gt;You might think I&amp;rsquo;m being overly dramatic. But, there are certain institutions,
like the family, that are essential cornerstones holding up civilization. It&amp;rsquo;s
not hard to see that the family is under attack from all sides. A very short
example is a song by Bo Burnham called The Chicken. It&amp;rsquo;s honestly a beautiful
sounding song. It&amp;rsquo;s a creative play on jokes about why chickens cross roads. He
takes the simple theme and juxtaposes it with sophisticated and beautiful
sounding music. The intersection of which is where absurdity lives―which breeds
humor.&lt;/p&gt;
&lt;p&gt;It&amp;rsquo;s very easy to hear the song and accept the new perspective and even walk
away feeling smarter, but that&amp;rsquo;s the insidious nature of subversion. This song
is not virtuous. It is not telling the truth. It&amp;rsquo;s not promoting goodness.&lt;/p&gt;
&lt;p&gt;Here are the lyrics:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;The chicken wakes up like she does every morning&lt;br&gt;
To the sounds of her husband&amp;rsquo;s screams&lt;br&gt;
Sat in the dark on the eggs she is warming&lt;br&gt;
She closes her eyes and dreams of&lt;br&gt;&lt;/p&gt;
&lt;p&gt;Walking to Memphis, becoming a dentist&lt;br&gt;
Anything but this&lt;br&gt;
I mean, she likes her life as a mother and wife&lt;br&gt;
But is that all she is?&lt;br&gt;
She stares out the window&lt;br&gt;&lt;/p&gt;
&lt;p&gt;The very next morning, the chicken decides to&lt;br&gt;
Makе her escape, gеt a taste of freedom&lt;br&gt;
She runs out the coop that her life’s been confined to&lt;br&gt;
Suddenly sees the thing she&amp;rsquo;s only dreamed of&lt;br&gt;&lt;/p&gt;
&lt;p&gt;Just up ahead, gophers run through a meadow&lt;br&gt;
Deer graze, birds sing&lt;br&gt;
Her future is waiting, right there for the taking&lt;br&gt;
There&amp;rsquo;s just one thing&lt;br&gt;&lt;/p&gt;
&lt;p&gt;The chicken must first cross the road, the road&lt;br&gt;
A sea of trees and green and moss&lt;br&gt;
Waiting just across the road, the road&lt;br&gt;
A life of brighter days, a width of road away&lt;br&gt;&lt;/p&gt;
&lt;p&gt;The road is gigantic, the chicken is little&lt;br&gt;
She moves ahead left-right-left, right-left-right&lt;br&gt;
All of a sudden, she stops in the middle&lt;br&gt;
Frozen in place by a pair of headlights&lt;br&gt;&lt;/p&gt;
&lt;p&gt;It’s anyone&amp;rsquo;s guess what then happened next&lt;br&gt;
But most think she died&lt;br&gt;
But I think we ought to believe that she got to&lt;br&gt;
The other side&lt;br&gt;&lt;/p&gt;
&lt;p&gt;So that&amp;rsquo;s why she did it&lt;br&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;Goodbye&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;If I interpret the chicken character as a human, which I think is fair because
there&amp;rsquo;s a fair bit of anthropomorphizing in the song, then the chicken selfishly
pursues &amp;ldquo;happiness&amp;rdquo; (which is a foolish pursuit), abandons her kids, and
essentially divorces her husband even though she &amp;ldquo;likes her life as a mother and
wife.&amp;rdquo; I think those behaviors are evil, generally speaking. There&amp;rsquo;s a potential
for a redeeming moment when the chicken almost received indirect consequences,
though overly harsh. But the singer decides it&amp;rsquo;s good to believe the chicken
succeeds, which nullifies what could have been a moral to this tragic story.
Instead of lamenting the family&amp;rsquo;s pain for losing their wife and mother, this
song celebrates behavior that results in a broken family. Broken families
undermine the entire workings of society. This song is an example of subversion.&lt;/p&gt;
&lt;h2 id=&#34;once-you-recognize-subversion-move-on&#34;&gt;Once You Recognize Subversion, Move On&lt;/h2&gt;
&lt;p&gt;Don&amp;rsquo;t dwell on subversive art. It&amp;rsquo;s not good for you.&lt;/p&gt;
&lt;p&gt;Many noble hearted people would say to shine a light on it. To draw attention to
the subversion through critique and analysis. To them I say, &amp;ldquo;yes!&amp;rdquo; It is good
to help people understand the danger that subversion poses. But, don&amp;rsquo;t get stuck
in a loop of analyzing subversiveness. Recognizing the problem is certainly the
first step, but then look away. Subversion can only undermine, it cannot build
up. So subversion doesn&amp;rsquo;t need your constant attention to defeat it. The art
will eventually collapse under the weight of it&amp;rsquo;s own evil, ugliness, and lies.
Subversive art simply isn&amp;rsquo;t good art.&lt;/p&gt;
&lt;p&gt;Do pay attention to enough criticism of subversive entertainment so that you can
recognize the real world destructive effects of it. But, don&amp;rsquo;t consume so much
that you fall into despair. All that subversion needs to work is attention. And
even criticism is giving it attention. The subversion will work on you even
though you recognize the evil. It&amp;rsquo;s almost like Medusa, if you gaze on her face
for too long, you&amp;rsquo;ll be defeated.&lt;/p&gt;
&lt;p&gt;Be like Perseus, who defeated Medusa. He had to look in order to fight her, but
he limited his exposure by only viewing her reflection. In a similar way,
keep subversion at a distance so it doesn&amp;rsquo;t overcome you.&lt;/p&gt;
&lt;h2 id=&#34;superversion-is-the-antidote-to-the-destruction&#34;&gt;Superversion is the Antidote to the Destruction&lt;/h2&gt;
&lt;p&gt;How do we address this problem? If our culture&amp;rsquo;s foundations are being
undermined, how do we stop it?&lt;/p&gt;
&lt;p&gt;Well, how should we respond when anything of value has been destroyed? We build
it again. The antidote for destruction is to build. This is fundamentally what
the word &amp;ldquo;superversive&amp;rdquo; means. L. Jagi Lamplighter describes it this way:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;If subversion is changing something by undercutting it from below, superversion is change by inspiring from above.&lt;/p&gt;
&lt;p&gt;― &lt;a target=&#34;_blank&#34; rel=&#34;noopener&#34; href=&#34;https://www.ljagilamplighter.com/superversive-literary-movement/&#34;&gt;Superversive (L. Jagi Lamplighter)&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;We need to restore our societal norms, but how does that work?&lt;/p&gt;
&lt;p&gt;Our norms come from our culture. Our culture comes from our art. Our art must be
based on truth. Truth comes from God. This is how superversive works.&lt;/p&gt;
&lt;p&gt;At it&amp;rsquo;s heart, superversive stories teach and inspire. They show what our
culture should be. They build up our cultural foundations by sharing goodness,
showing beauty, and speaking truth. The subversive lies will crumble on their
own because they do nothing but undermine. A story that is built on the rock
will withstand the onslaught. Simon pointed out that this principle, building on
a solid foundation, is Biblical. It&amp;rsquo;s a principle that&amp;rsquo;s been told through
parables.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Before the subversives dug their mines under the churches, there was a parable
that used to be widely known. The gist of it was that a house built on rock
will stand firm, but a house built on sand will soon fall down. High ground is
usually rocky ground, and from that perspective, ideal for us to build on.&lt;/p&gt;
&lt;p&gt;― &lt;a target=&#34;_blank&#34; rel=&#34;noopener&#34; href=&#34;https://www.ljagilamplighter.com/2014/10/01/the-art-of-courage-superversive-guest-post-by-tom-simon/&#34;&gt;The Art of Courage Superversive Guest Post (Tom Simon)&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;The actual passage reads like this:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Matthew 7:24-25&lt;/p&gt;
&lt;p&gt;24 “Everyone then who hears these words of mine and does them will be like a
wise man who built his house on the rock. 25 And the rain fell, and the floods
came, and the winds blew and beat on that house, but it did not fall, because
it had been founded on the rock.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;In that verse, Jesus was talking about hearing and following the sermon that he
just preached. His sermon was full of truth.&lt;/p&gt;
&lt;p&gt;That&amp;rsquo;s not the only Biblical passage that can be applied to our situation
today. In a war against evil (and that&amp;rsquo;s what subversion is, evil) the Bible
describes weapons for us to use.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;2 Corinthians 6:3-7&lt;/p&gt;
&lt;p&gt;3 We put no obstacle in anyone&amp;rsquo;s way, so that no fault may be found with our
ministry, 4 but as servants of God we commend ourselves in every way: by great
endurance, in afflictions, hardships, calamities, 5 beatings, imprisonments,
riots, labors, sleepless nights, hunger; 6 by purity, knowledge, patience,
kindness, the Holy Spirit, genuine love; 7 &lt;strong&gt;by truthful speech&lt;/strong&gt;, and the
power of God; with the weapons of righteousness for the right hand and for the
left;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;I also find Ephesians 6:11-20 to be relevant to the superversive effort.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Ephesians 6:11-20&lt;/p&gt;
&lt;p&gt;11 Put on the whole armor of God, that you may be able to stand against the
schemes of the devil. 12 For we do not wrestle against flesh and blood, but
against the rulers, against the authorities, against the cosmic powers over
this present darkness, against the spiritual forces of evil in the heavenly
places. 13 Therefore take up the whole armor of God, that you may be able to
withstand in the evil day, and having done all, to stand firm. 14 Stand
therefore, having fastened on the &lt;strong&gt;belt of truth&lt;/strong&gt;, and having put on the
breastplate of righteousness, 15 and, as shoes for your feet, having put on the
readiness given by the gospel of peace. 16 In all circumstances take up the
shield of faith, with which you can extinguish all the flaming darts of the
evil one; 17 and take the helmet of salvation, and the sword of the Spirit,
which is the word of God, 18 praying at all times in the Spirit, with all
prayer and supplication. To that end, keep alert with all perseverance, making
supplication for all the saints, 19 and also for me, that words may be given to
me in opening my mouth boldly to proclaim the mystery of the gospel, 20 for
which I am an ambassador in chains, that I may declare it boldly, as I ought to
speak.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;A story can&amp;rsquo;t be superversive unless it&amp;rsquo;s telling the truth. Truth does not get
torn down, it can only be hidden. Art that is true can also be beautiful and
good. It can inspire people. It builds our culture and by building our culture
it counteracts subversion.&lt;/p&gt;
&lt;h2 id=&#34;further-reading&#34;&gt;Further Reading&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a target=&#34;_blank&#34; rel=&#34;noopener&#34; href=&#34;https://www.scifiwright.com/2015/10/anniversary-of-superversive/&#34;&gt;Anniversary
of Superversive (John C. Wright)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a target=&#34;_blank&#34; rel=&#34;noopener&#34; href=&#34;https://bondwine.com/2003/10/19/superversive/&#34;&gt;Superversive (Tom Simon)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a target=&#34;_blank&#34; rel=&#34;noopener&#34; href=&#34;https://www.ljagilamplighter.com/2014/10/01/the-art-of-courage-superversive-guest-post-by-tom-simon/&#34;&gt;The Art of Courage (Tom Simon)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34; href=&#34;https://www.ljagilamplighter.com/superversive-literary-movement/&#34;&gt;Superversive (L. Jagi Lamplighter)&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>The Fairy Tale Horror, Little Red Riding Hood</title>
      <link>https://quakkels.com/posts/202404_3_fairy_tale_horror_little_red_riding_hood/</link>
      <pubDate>Fri, 14 Apr 2023 00:00:00 +0000</pubDate>
      
      <guid>https://quakkels.com/posts/202404_3_fairy_tale_horror_little_red_riding_hood/</guid>
      <description>&lt;p&gt;When I decided to analyze Little Red Riding Hood, I was not expecting to find a story that bludgeoned the reader (or listener) over the head with a spiked bat. But that&amp;rsquo;s exactly what this version of the story does. It&amp;rsquo;s a full fledged horror story that has a moral for the kids, but there&amp;rsquo;s also a moral for the adults reading it.&lt;/p&gt;
&lt;p&gt;The version of Little Red Riding Hood featured in the Junior Classics Fairy and Wonder Tales (published in 1918) was originally written down by Charles Perrault in the seventeenth century, though people point out that he&amp;rsquo;s probably not the source of the original idea. He merely preserved this version by writing it down. Some say that he may have heard it from his children&amp;rsquo;s nurse who participated in an oral tradition of storytelling. Stories of a girl meeting a wolf in the forest date back hundreds of years before Perrault.&lt;/p&gt;
&lt;p&gt;Perrault&amp;rsquo;s story is incredibly abrupt. The beginning and middle are unsurprising to anyone who&amp;rsquo;s heard a version of the story before. There&amp;rsquo;s a beautiful girl with a red riding hood. She&amp;rsquo;s loved by her mother and her grandmother.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Once upon a time there lived in a certain village a little country girl, the prettiest creature ever seen. Her mother was very fond of her, and her grandmother doted on her still more. This good woman had made for her a little red riding-hood, which became the girl so well that everybody called her Little Red Riding-Hood.&lt;/p&gt;
&lt;p&gt;― Little Red Riding Hood by Perrault&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Her grandmother becomes sick. Her mother sends Little Red Riding Hood to bring her grandmother some things to eat. Along the way, she shares too much information with a wolf. The wolf takes a fast route to Grandma&amp;rsquo;s and, in the meantime, she takes the long way and stops frequently to smell the flowers.&lt;/p&gt;
&lt;p&gt;Perrault picks up his spiked bat right around when the wolf gains entry to the grandmother&amp;rsquo;s house. Grandma simply gets eaten. She&amp;rsquo;s just gone. Done. Finished.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;The Wolf pulled the bobbin, and the door opened, and he fell upon the good woman and ate her up in a moment, for it was above three days that he had not touched a bit.&lt;/p&gt;
&lt;p&gt;― Little Red Riding Hood by Perrault&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Bam! That hits the reader in the face. More sanitized versions have the wolf hiding her in a closet, but no such thing here. This wolf takes care of loose ends.&lt;/p&gt;
&lt;p&gt;The next beat of the story hits: Little Red Riding Hood arrives at the house and begins her interaction with the wolf, whom she believes to be her grandmother because the wolf is in drag. Red climbs in bed with the wolf and their conversation progresses through the visible clues that something isn&amp;rsquo;t right. The common lists of clues encountered nowadays tend to include the ears, the eyes, and the teeth. But I&amp;rsquo;ve also heard versions that talk about big noses and large hands. Perrault&amp;rsquo;s version forgoes the nose and hands, but includes arms and legs.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;“Grandmamma, what great arms you’ve got!”&lt;br&gt;
“That is the better to hug thee, my dear.”&lt;br&gt;
“Grandmamma, what great legs you’ve got!”&lt;br&gt;
“The better to run, my child.”&lt;br&gt;
“Grandmamma, what great ears you’ve got!”&lt;br&gt;
“The better to hear, my child!”&lt;br&gt;
“Grandmamma, what great eyes you’ve got!”&lt;br&gt;
“The better to see, my child.”&lt;br&gt;
“Grandmamma, what great teeth you’ve got!”&lt;br&gt;
“To eat thee up!”&lt;br&gt;
And saying these words, the wicked Wolf fell upon Little Red Riding-Hood and ate her all up.&lt;/p&gt;
&lt;p&gt;― Little Red Riding Hood by Perrault&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Perrault&amp;rsquo;s final blow with the spiked bat came with the words &amp;ldquo;&amp;hellip;and ate her all up.&amp;rdquo; The end. Yes, really. That is where he ends the story.&lt;/p&gt;
&lt;p&gt;Imagine being a kid and hearing this. No one saves the girl. No one saves Grandma. The wolf wins. This is not a sweet fairy tale wherein everyone lives happily ever after. No. This is a terrifying horror story with anthropomorphized bloodthirsty wolves, and two innocent people die.&lt;/p&gt;
&lt;h2 id=&#34;the-horror-of-little-red-riding-hood&#34;&gt;The Horror Of Little Red Riding Hood&lt;/h2&gt;
&lt;p&gt;Though it may be surprising, apparently this version is sanitized. Other versions have the wolf demanding many terrible things of Little Red Riding Hood. Sometimes the wolf makes Red burn all her clothes before telling her to get in bed with him, and other times the wolf literally tricks Red into eating her own grandmother. To be clear, this isn&amp;rsquo;t merely the threat of cannibalism, like is found in &lt;a href=&#34;https://quakkels.com/posts/202304_2_the_fairy_tale_of_hansel_and_grethel/&#34;&gt;Hansel and Grethel&lt;/a&gt;. Rather, Red engages in actual cannibalism. This is indeed a horror story.&lt;/p&gt;
&lt;p&gt;There were attempts to tell a happier story, but they&amp;rsquo;re not exactly less horrifying. In one version, after the wolf eats the two, he falls asleep and a huntsman comes to the house. Then the huntsman carves open the sleeping wolf&amp;rsquo;s belly, and the grandmother and Red come out alive, like Jonah after getting swallowed by a big fish. So, yay. Red and her grandmother survive. But here comes that bat again: then the wolf meets a horrifying end when they fill his open belly cavity with stones. When the wolf awakes, he&amp;rsquo;s weighed down. He can&amp;rsquo;t run away, and he dies.&lt;/p&gt;
&lt;p&gt;Stories like these will definitely harden a kid&amp;rsquo;s emotions. I&amp;rsquo;m not going to lie, this isn&amp;rsquo;t pleasant. My modern mind is having a tough time thinking this is the best way to teach a kid morals.&lt;/p&gt;
&lt;h2 id=&#34;the-two-morals-of-little-red-riding-hood&#34;&gt;The Two Morals Of Little Red Riding Hood&lt;/h2&gt;
&lt;p&gt;The 1918 Junior Classics book doesn&amp;rsquo;t seem to have included Perrault&amp;rsquo;s moral with the story. But in my research I came across the same story with a moral at the end that reads like this:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Moral: Children, especially attractive, well bred young ladies, should never talk to strangers, for if they should do so, they may well provide dinner for a wolf. I say &amp;ldquo;wolf,&amp;rdquo; but there are various kinds of wolves. There are also those who are charming, quiet, polite, unassuming, complacent, and sweet, who pursue young women at home and in the streets. And unfortunately, it is these gentle wolves who are the most dangerous ones of all.&lt;/p&gt;
&lt;p&gt;― Little Red Riding Hood by Perrault&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;This first moral seems like a solid one to me. Basically, be careful. There are predators out there who disguise themselves as being sweet and gentle. Kids should guard themselves against them, if they can.&lt;/p&gt;
&lt;p&gt;A parent reading this might be wise to take away a second moral: Don&amp;rsquo;t send your kids into the wilderness where wolves will prey on them. We don&amp;rsquo;t have the same forests and wolves lurking about, but we do still have predators. Parents would do well to be mindful of this and not give away their kids so easily to be cared for by strangers. There are plenty of predators disguising their true nature who lure children to destruction.&lt;/p&gt;
&lt;h2 id=&#34;further-reading&#34;&gt;Further Reading&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34; href=&#34;https://www.gutenberg.org/files/3152/3152-h/3152-h.htm#chap74&#34;&gt;Junior Classics (1918) Chapter 74: Little Red Riding Hood&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34; href=&#34;https://sites.pitt.edu/~dash/perrault02.html&#34;&gt;Perrault&amp;rsquo;s Little Red Riding Hood with the moral included at the end&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34; href=&#34;https://www.ranker.com/list/original-little-red-riding-hood-story/genevieve-carlton&#34;&gt;In The Original Little Red Riding Hood, The Wolf Forced Her To Eat Her Grandma, by Genevieve Carlton&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>The Fairy Tale of Hansel and Grethel</title>
      <link>https://quakkels.com/posts/202304_2_the_fairy_tale_of_hansel_and_grethel/</link>
      <pubDate>Wed, 12 Apr 2023 00:00:00 +0000</pubDate>
      
      <guid>https://quakkels.com/posts/202304_2_the_fairy_tale_of_hansel_and_grethel/</guid>
      <description>&lt;p&gt;&lt;em&gt;Hansel and Grethel&lt;/em&gt; is the story about two siblings who survive being abandoned by their guardians, they escape capture by a witch, and they reunite with their father as a happy family in the end. There are many different versions of the story, but I&amp;rsquo;m going to focus on the story by The Brothers Grimm.&lt;/p&gt;
&lt;p&gt;I got my hands on a version that was published in 1918 in an anthology series called Junior Classics. I really enjoyed reading it, and there were several things that stuck out to me. First, I knew the story as Hansel and Gretel, but the 1918 version I found spelled the sister&amp;rsquo;s name with an &amp;lsquo;h&amp;rsquo; in the middle. It&amp;rsquo;s just notable to me that right off the bat this version is probably going to have subtle changes from newer versions. Which is unfortunate because I assume the original became a classic for a reason, and each adaption, copy, and edit watered the story down a little―diluting the message.&lt;/p&gt;
&lt;p&gt;This is a children&amp;rsquo;s story. It&amp;rsquo;s meant to be read to children. The themes of starvation, death, betrayal, murder, and cannibalism might be jarring to modern audiences (it&amp;rsquo;s a long way from If You Give A Mouse A Cookie) but I think it&amp;rsquo;s very important. Children need to grapple with these topics so that they can be inspired to overcome. This story teaches children to have faith in God, to have hope in the face of danger, and to aspire to vanquish dragons.&lt;/p&gt;
&lt;p&gt;Let me share a quote:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;“Fairy tales do not tell children the dragons exist. Children already know that dragons exist. Fairy tales tell children the dragons can be killed.”&lt;/p&gt;
&lt;p&gt;― G.K. Chesterton&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Chesterton is absolutely right. From a very early age kids figure out there are dangerous things in the world. They start having nightmares, they fear the dark, and they need reasurrance that hope is not lost. Scary things, whether it be as benign as a dark closet or as potent as war, can be overcome.&lt;/p&gt;
&lt;p&gt;If you have been exposed to &lt;em&gt;Hansel and Grethel&lt;/em&gt; before, you are probably familiar with the five characters who capture our attention. They are the eponymous brother and sister, their father and stepmother, and the witch who lives in the forest. The story takes place during a time of famine. Food is scarce, and the family is hungry.&lt;/p&gt;
&lt;p&gt;The only characters that are worth emulating are the kids. The brother has faith and is resourceful, and his sister is cunning. The adults in this story are all Chesterton&amp;rsquo;s dragons. There&amp;rsquo;s the selfish and self centered stepmother, the feckless father, and the wicked witch with a penchant for cannibalizing kids.&lt;/p&gt;
&lt;h2 id=&#34;the-first-danger-encounter-victorious-hansel&#34;&gt;The First Danger Encounter; Victorious Hansel&lt;/h2&gt;
&lt;p&gt;Let&amp;rsquo;s be realistic about the dad in this story: he&amp;rsquo;s weak. He succumbs to his wife&amp;rsquo;s selfishness and as a result, he could probably be charged with four counts of attempted murder. However, the story doesn&amp;rsquo;t make it easy on the reader to recognize how terribly the dad behaved. The family is starving, and the dad is shown to have internal conflict and stress about feeding his family. He does care about his kids, but even so, when the selfish stepmother proposes a utilitarian solution to murder the kids lest they all starve, he fecklessly goes along with it. So, he is a dragon.&lt;/p&gt;
&lt;p&gt;The stepmother is certainly a dragon. She clearly has no love for her husband&amp;rsquo;s kids. She berates her husband and uses devious reasoning to break him down to the point that they become a murderous pair. Pay close attention to what she says to her husband.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&amp;ldquo;What will become of us? How can we feed our children when we have no more than we can eat ourselves?&amp;rdquo;&lt;/p&gt;
&lt;p&gt;&amp;ldquo;Know, then, my husband,&amp;rdquo; answered she, &amp;ldquo;we will lead them away quite early in the morning into the thickest part of the wood, and there make them a fire, and give them each a little piece of bread. Then we will go to our work and leave them alone, so they will not find the way home again and we shall be freed from them.&amp;rdquo;&lt;/p&gt;
&lt;p&gt;&amp;ldquo;No, wife,&amp;rdquo; replied he, &amp;ldquo;that I can never do. How can you bring your heart to leave my children all alone in the wood, for the wild beasts will soon come and tear them to pieces?&amp;rdquo;&lt;/p&gt;
&lt;p&gt;&amp;ldquo;Oh, you simpleton!&amp;rdquo; said she, &amp;ldquo;Then we must all four die of hunger. You had better plane the coffins for us.&amp;rdquo; But she left him no peace till he consented saying, &amp;ldquo;Ah, but I shall regret the poor children.&amp;rdquo;&lt;/p&gt;
&lt;p&gt;― Hansel and Grethel (1918)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;I love the setup to this story. A kid listening to this would feel horror at the prospect of being left in the wilderness to die. But there&amp;rsquo;s also a lot there for parents and other adults to ponder too. There&amp;rsquo;s enough here for a deep contemplation of ethics and morality on par with The Trolley Problem. Both scenarios pose the question: does actively killing few people to save many justify killing the few? But under all of the calculation and practicality, this stepmother asserts that it is justified to sacrifice the kids&#39; lives in exchange for the adults. She completely ignores the virtues of self sacrifice.&lt;/p&gt;
&lt;p&gt;The children overhear the adults scheming. Their response is when we, as the readers, are gifted with the first example of virtue.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Grethel wept bitterly and said to Hansel, &amp;ldquo;What will become of us?&amp;rdquo;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;&amp;ldquo;Be quiet, Grethel,&amp;rdquo; said he, &amp;ldquo;Do not cry, I will soon help you.&amp;rdquo; And as soon as their parents had fallen asleep, he got up, put on his coat and, unbarring the back door, slipped out. The moon shone brightly, and the white pebbles which lay before the door seemed like silver pieces, they glittered so brightly. Hansel stooped down and put as many into his pocket as it would hold, and then going back he said to Grethel, &amp;ldquo;Be comforted, dear sister, and sleep in peace. God will not forsake us,&amp;rdquo; and so saying he went to bed again.&lt;/p&gt;
&lt;p&gt;― Hansel and Grethel (1918)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;This kid, Hansel, is great. There&amp;rsquo;s no panic. There&amp;rsquo;s no moaning, whining, or despair. Instead he shows truly masculine virtues. He compartmentalizes his emotions and reassures his sister. He encourages her to find peace knowing God is faithful. And he also takes action! He prepares for the storm that&amp;rsquo;s coming, and he&amp;rsquo;s ready with a pocketful of pebbles when it arrives. When the time comes he leads them out of the wilderness. They return home.&lt;/p&gt;
&lt;h2 id=&#34;the-second-danger-encounter-defeated-hansel&#34;&gt;The Second Danger Encounter: Defeated Hansel&lt;/h2&gt;
&lt;p&gt;The story repeats with a few changes. Lean times return and the stepmother displays her selfishness again. The father caves again. The children are again betrayed, only this time Hansel&amp;rsquo;s efforts to find the way home are thwarted. He&amp;rsquo;s been locked inside, so he can&amp;rsquo;t collect his pocketful of pebbles.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;The children, however, had heard the conversation as they lay awake, and as soon as the old people went to sleep Hansel got up intending’ to pick up some pebbles as before; but the wife had locked the door, so that he could not get out. Nevertheless he comforted Grethel, saying, “Do not cry; sleep in quiet; the good God will not forsake us.”&lt;/p&gt;
&lt;p&gt;― Hansel and Grethel (1918)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;He uses crumbs from his piece of bread to leave a trail. But the attempt at marking a path home fails because all the crumbs get eaten by birds. This gives Grethel an opportunity to show virtue. She shows her nurturing and loving nature when she shares her piece of bread with Hansel who sacrificed his own.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Hansel kept saying to Grethel, “We will soon find the way”; but they did not, and they walked the whole night long and the next day, but still they did not come out of the wood; and they got so hungry, for they had nothing to eat but the berries which they found upon the bushes.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;Soon they got so tired that they could not drag themselves along, so they laid down under a tree and went to sleep.&lt;/p&gt;
&lt;p&gt;― Hansel and Grethel (1918)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;When they wake up things continue to get more desperate for them. They get hungrier and hungrier. They continue to wander.&lt;/p&gt;
&lt;h2 id=&#34;the-third-danger-encounter-victorious-grethel&#34;&gt;The Third Danger Encounter: Victorious Grethel&lt;/h2&gt;
&lt;p&gt;The lost children wander until they find a cottage made of bread, cakes, and sugar panes for windows. Such a house presents an irresistible temptation for them, and they quickly begin stuffing themselves. That&amp;rsquo;s when they encounter the third villain of the story: the old witch who lives in the cottage. The final dragon.&lt;/p&gt;
&lt;p&gt;The witch presents herself as a sweet old woman. She lures the siblings into her cottage with good things to eat and the promise of rest. Then she drops her facade and reveals her nearly blind red eyes and evil intention: cannibalism. She roughly cages Hansel and declares that he will be fattened up to be a good meal, and Grethel becomes a slave who must obey the witch&amp;rsquo;s commands.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Then [the old witch] took up Hansel with her rough hand, and shut him up in a little cage with a lattice door; and although he screamed loudly, it was of no use.&lt;/p&gt;
&lt;p&gt;[&amp;hellip;]&lt;/p&gt;
&lt;p&gt;“Grethel.” she called out in a passion, “get some water quickly; be Hansel fat or lean, this morning I will kill and cook him.” Oh, how the poor little sister grieved, as she was forced to fetch the water, and how fast the tears ran down her cheeks! &amp;ldquo;Dear good God, help us now!&amp;rdquo; she exclaimed. &amp;ldquo;Had we only been eaten by the wild beasts in the wood then we should have died together.&amp;rdquo;&lt;/p&gt;
&lt;p&gt;― Hansel and Grethel (1918)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;These events contrast with the first half of the story. Hansel, the hero who once saved himself and his sister, is now helpless. Grethel, who previously required reassurance and reminders that God is faithful, is now her brother&amp;rsquo;s only hope. When the witch declares it&amp;rsquo;s time to kill and cook Hansel, Grethel remembers to ask God for help. Though she is still terrified, she is also cunning. Grethel takes action when given an opportunity. She saves herself and her brother by locking the witch in her own oven.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Grethel perceived what [the witch&amp;rsquo;s] thoughts were, and said, “I do not know how to do it; how shall I get in?” “You stupid goose,” said she, “the opening is big enough. See, I could even get in myself!” and she got up and put her head into the oven. Then Grethel gave her a push, so that she fell right in, and then shutting the iron door, she bolted it. Oh! how horribly she howled; but Grethel ran away, and left the ungodly witch to burn to ashes.&lt;/p&gt;
&lt;p&gt;― Hansel and Grethel (1918)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;When the situation was the most dire, Grethel manages to trick the witch into climbing into the oven herself. Grethel shuts the door on her, trapping her in the oven. Then she frees her brother. By doing so Grethel becomes a heroine. The children overcome evil.&lt;/p&gt;
&lt;h2 id=&#34;returning-home&#34;&gt;Returning Home&lt;/h2&gt;
&lt;p&gt;The story shows Hansel and Grethel stuffing their pockets with riches which they found in the evil witch&amp;rsquo;s cottage. Then they journey back through the woods and, with the help of a duck, they cross a lake and eventually make their way back to their home. They find their dad who&amp;rsquo;s been unhappy (and he ought to be) ever since he abandoned them to die.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Then they began to run, and, bursting into the house, they fell on their father&amp;rsquo;s neck. He had not had one happy hour since he had left the children in the forest, and his wife was dead. Grethel shook her apron, and the pearls and precious stones rolled out upon the floor, and Hansel threw down one handful after the other out of his pocket. Then all their sorrows were ended, and they lived together in great happiness.&lt;/p&gt;
&lt;p&gt;― Hansel and Grethel (1918)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;The ending of this story bothered me at first. Here are these kids. They have survived multiple betrayals and life and death situations. And here they are joyful to be with their dad again even though their dad repeatedly betrayed them, couldn&amp;rsquo;t feed them, and hasn&amp;rsquo;t had any kind of redemption arch whatsoever. Why the kids kept trying to go home at all after the second time being left in the woods doesn&amp;rsquo;t really make obvious sense. The author arbitrarily declaring that everyone lived happily ever after might merely show an attempt to end on a high note, but there should be a better message there. Though I struggled to see the deeper meaning that gave a foundation for the positivity to rest on.&lt;/p&gt;
&lt;p&gt;After pondering for a while, I started to recognize the deeper meaning. First, though the dad is weak and unable to withstand the negative influence of his evil wife, she&amp;rsquo;s dead and gone. So the immediate threat to the kids is gone. Second, the dad and his kids obviously love each other. So it&amp;rsquo;s teaching a lesson of unconditional love, and honoring parents. Thirdly, when the kids return home, they bring along financial security for the family which is something that the dad wasn&amp;rsquo;t able to provide. So while the dad is right to be happy because he&amp;rsquo;s got a third chance at being a good dad for his kids, the happiness is completely due to the noble actions of his children rather than any contribution from himself.&lt;/p&gt;
&lt;h2 id=&#34;morals-of-the-story&#34;&gt;Morals of the story&lt;/h2&gt;
&lt;p&gt;The man in the story is not masculine. If he were, he would not have been so feckless. The women in the story were not feminine. If they were, they would have been nurturing and compassionate rather than selfish and murderous. The children displayed all the virtues the adults lacked. Children who hear this story will see the incredible challenges and harrowing circumstances endured by Hansel and Grethel. The siblings are  heroes because they did heroic things. The siblings are role models because they demostrated virtue and faith in God. They overcame the dragons and, in the end, restored their family. It is inspiring, and that is why it is such a great story to read to children.&lt;/p&gt;
&lt;h2 id=&#34;further-reading&#34;&gt;Further Reading&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34; href=&#34;https://www.gutenberg.org/files/3152/3152-h/3152-h.htm#chap62&#34;&gt;Junior Classics (1918) Chapter 62: Hansel and Grethel&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>Two Foundational Principles for Dialogue</title>
      <link>https://quakkels.com/posts/202304_essentials_for_healthy_conversation/</link>
      <pubDate>Wed, 05 Apr 2023 00:00:00 +0000</pubDate>
      
      <guid>https://quakkels.com/posts/202304_essentials_for_healthy_conversation/</guid>
      <description>&lt;p&gt;There are two non-negotiable beliefs that are essential to healthy dialogue.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;There is such a thing as truth.&lt;/li&gt;
&lt;li&gt;The truth is available to every reasonable person.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;A healthy dialogue happens when opposing viewpoints articulate and evaluate arguments in a search for the truth.&lt;/p&gt;
&lt;p&gt;Participants in dialogue must agree that truth exists. If there isn&amp;rsquo;t agreement that truth exists, then they are engaged in a futile exercise. It&amp;rsquo;s literally pointless. If a person thinks that the truth changes depending on perspectives then you can safely exit the conversation without worry of missing any opportunities to find the truth. Life is too short. It&amp;rsquo;s okay to skip that conversation because it&amp;rsquo;s not grounded in reality. Actual truth doesn&amp;rsquo;t change based on who&amp;rsquo;s paying attention. If a tree falls in the forest and a person is around and hears it, then it would&amp;rsquo;ve made that same noise if no one was there. Truth exists.&lt;/p&gt;
&lt;p&gt;People might find truth offensive. People might not accept the possibility that their opinions are wrong. If you engage with such a person and claim that truth exists, be prepared for unhinged and irrational tantrums.&lt;/p&gt;
&lt;p&gt;Participants in dialogue must agree that the truth is available to every reasonable person. This is important because people try to tell us that a man cannot comment on women&amp;rsquo;s issues, and people of one race can&amp;rsquo;t comment on people of another race. If you&amp;rsquo;re engaged in dialogue with someone who ignores the validity of your argument and instead doesn&amp;rsquo;t even consider it because you&amp;rsquo;re the wrong sex or race, then you&amp;rsquo;re in an unhealthy dialogue. Who you are and where you come from doesn&amp;rsquo;t change what you are capable of knowing about reality. Truth is available.&lt;/p&gt;
&lt;p&gt;Be warned. If you enter a dialogue, whether it be online, in person, pen pals, chain letters, whatever—if you&amp;rsquo;re engaged with a person who doesn&amp;rsquo;t believe these things then you&amp;rsquo;re in for a rough time. If they&amp;rsquo;re not willing to grow their understanding about the nature of truth, then it&amp;rsquo;s your best bet to pray for them, and kindly exit the conversation.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>The Pilgrim&#39;s Courage</title>
      <link>https://quakkels.com/posts/202108_the_pilgrims_courage/</link>
      <pubDate>Sun, 29 Aug 2021 00:00:00 +0000</pubDate>
      
      <guid>https://quakkels.com/posts/202108_the_pilgrims_courage/</guid>
      <description>&lt;p&gt;I don&amp;rsquo;t remember how old I was when I first read an abridged version of John Bunyan&amp;rsquo;s Christian allegory, The Pilgrim&amp;rsquo;s Progress. It&amp;rsquo;s a great book, and the abridged version (which I&amp;rsquo;ve unfortunately misplaced at some point) had great illustrations and was very approachable when I was a boy.&lt;/p&gt;
&lt;p&gt;John Bunyan lived in England during the 17th century. He witnessed civil war, plague, and he experienced religious persecution. He wrote the first part of The Pilgrim&amp;rsquo;s Progress while in prison for not following the Church of England.&lt;/p&gt;
&lt;p&gt;The Pilgrim&amp;rsquo;s Progress has a particularly inspiring passage about courage. It&amp;rsquo;s when the protagonist, Christian, faces off against evil in the form of Apollyon.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;But now in this Valley of &lt;em&gt;Humiliation&lt;/em&gt;, poor &lt;em&gt;Christian&lt;/em&gt; was hard put to it; for he had gone but a little Way, before he espied a foul &lt;em&gt;Fiend&lt;/em&gt; coming over the field to meet him: His name is &lt;em&gt;Apollyon&lt;/em&gt;. Then did &lt;em&gt;Christian&lt;/em&gt; begin to be afraid, and to cast in his mind whether to go back or to stand his ground. But he considered again, that he had no Armour for his back, and therefore thought that to turn the back to him might give him greater advantage, with ease to pierce him with his Darts; therefore he resolved to venture, and stand his ground: For, thought he, had I no more in Mine Eye than the saving of my life, &amp;lsquo;twould be the best way to stand.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Despite his fear, Christian reasoned through a strategy and advanced against evil. The two proceeded to haggle over where Christian&amp;rsquo;s allegiance should lie. Apollyon declares himself has Christian&amp;rsquo;s king, and demands Christian to turn back, but Christian refuses. When pure evil told him to move, to turn back, Christian essentially said &amp;ldquo;No, you move.&amp;rdquo;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;em&gt;Apol&lt;/em&gt;. Then &lt;em&gt;Apollyon&lt;/em&gt; broke out into a grievous Rage, saying, I am an Enemy to this Prince; I hate his Person, his Laws, and People: I am come out on purpose to withstand thee.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Chr&lt;/em&gt;. &lt;em&gt;Apollyon&lt;/em&gt;, beware what you do; for I am in the King&amp;rsquo;s highway, the Way of Holiness; therefore take heed to yourself.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Apol&lt;/em&gt;. Then &lt;em&gt;Apollyon&lt;/em&gt; straddled quite over the whole breadth of the Way, and said, I am void of Fear in this matter; prepare thyself to die; for I swear by my infernal Den, That though shalt go no further: Here will I spill thy Soul!&lt;/p&gt;
&lt;p&gt;And with that he threw a flaming Dart at his breast; but &lt;em&gt;Christian&lt;/em&gt; had a Shield in his hand, with which he caught it, and so prevented the danger of that.&lt;/p&gt;
&lt;p&gt;Then did &lt;em&gt;Christian&lt;/em&gt; draw; for he saw it was time to bestir him; and &lt;em&gt;Apollyon&lt;/em&gt; as fast made at him, throwing Darts as thick as hail; by the which, notwithstanding all that &lt;em&gt;Christian&lt;/em&gt; could do to avoid it, &lt;em&gt;Apollyon&lt;/em&gt; wounded him in his &lt;em&gt;head&lt;/em&gt;, his &lt;em&gt;hand&lt;/em&gt;, and &lt;em&gt;foot&lt;/em&gt;.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Christian continued to fight for over half a day. Near the end of this great struggle, he lost his sword. Finally, by God&amp;rsquo;s grace Christian caught his sword, and struck against Apollyon right as Apollyon was readying a fatal blow. Apollyon was beaten and he fled with his dragon wings.&lt;/p&gt;
&lt;p&gt;I don&amp;rsquo;t know about you, but that gets my heart racing. Christian&amp;rsquo;s courage is a great example to us, and I pray that I&amp;rsquo;ll have the same courage when I am confronted by such an evil.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://quakkels.com/images/PilgrimsProgress_ChristianApollyon.png&#34; alt=&#34;Christian faces Apollyon, The Pilgrim&amp;rsquo;s Progress&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;further-reading&#34;&gt;Further Reading&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34; href=&#34;https://archive.org/details/bunyanspilgrims00moffgoog/page/n116/mode/2up&#34;&gt;The Pilgrims Progress, Page 74, Line 27&lt;/a&gt; (When Christian encounters Apollyon)&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>Develop an ASP.NET Core Site on Linux</title>
      <link>https://quakkels.com/posts/202108_develop_an_aspnetcore_site_on_linux/</link>
      <pubDate>Sat, 21 Aug 2021 00:00:00 +0000</pubDate>
      
      <guid>https://quakkels.com/posts/202108_develop_an_aspnetcore_site_on_linux/</guid>
      <description>&lt;p&gt;&lt;img src=&#34;https://quakkels.com/images/dotnetOnLinux/csharp_dotnetcore_linux.png&#34; alt=&#34;C#, Dotnet Core, and Linux&#34;&gt;&lt;/p&gt;
&lt;p&gt;There&amp;rsquo;s no doubt about it, C# is my favorite language. It breaks my heart whenever anyone points out that it&amp;rsquo;s basically just Java. (Looking at you, Robert C. Martin.) Though it may be inspired and even derived from Java, I much prefer the C# and .NET ecosystem. I&amp;rsquo;m sure familiarity plays a large part in my preference for it, as well as some old-fashioned nostalgia, and perhaps even a simple convenience factor. Even so, C# is a powerful tool that shouldn&amp;rsquo;t be dismissed lightly. The power doesn&amp;rsquo;t just come from the language. It also comes from the frameworks, libraries, and documentation.&lt;/p&gt;
&lt;p&gt;I also like running open source software. My preference for open source software has led me to use Linux on all my personal computers. Windows is a powerful tool that shouldn&amp;rsquo;t be dismissed lightly. But, I&amp;rsquo;ve decided that running a transparent operating system like Linux is more important to me than Windows features. For most of C#&amp;rsquo;s existence, it only ran on Windows systems. Given the comparisons between C# and Java, Java was clearly beating C# in cross platform compatibility. Mono blazed a trail for C# development on non Windows platforms, but there were a fair number of compatibility issues. That is, until Microsoft &lt;a target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34; href=&#34;https://devblogs.microsoft.com/dotnet/the-next-generation-of-net-asp-net-vnext/&#34;&gt;announced in 2014&lt;/a&gt; that ASP.NET &amp;ldquo;vNext&amp;rdquo; would be Mono compatible, and it would be open source.&lt;/p&gt;
&lt;p&gt;Now we&amp;rsquo;re several years removed from that announcement, and there have been a ton of growing pains. But ASP.NET Core is open source, it&amp;rsquo;s cross platform, and it&amp;rsquo;s proven to be a workhorse. It&amp;rsquo;s the first tool I want to grab when starting a new project.&lt;/p&gt;
&lt;p&gt;So that&amp;rsquo;s why I&amp;rsquo;m writing this blog post. If you&amp;rsquo;re a bit of an idealist, like I am, and you want to run open source software while still leveraging the powerful C# development ecosystem, then this should give a quick glimpse into what it&amp;rsquo;s like to develop C# websites on Linux.&lt;/p&gt;
&lt;p&gt;I&amp;rsquo;ll cover three things:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Creating Solutions with Projects&lt;/li&gt;
&lt;li&gt;Debugging and Intellisense via Omnisharp in VS Code&lt;/li&gt;
&lt;li&gt;Adding project references&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;install-the-tools&#34;&gt;Install the Tools&lt;/h2&gt;
&lt;p&gt;First, you need a copy of Linux to work in. I&amp;rsquo;ve chosen &lt;a target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34; href=&#34;https://linuxmint.com/download.php&#34;&gt;Linux Mint&lt;/a&gt;, and I encourage you to use that, but you can also use just about any other Linux distribution, but you&amp;rsquo;ll have an easier time following along if it&amp;rsquo;s at least based on Debian like Linux Mint and &lt;a target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34; href=&#34;https://ubuntu.com/download&#34;&gt;Ubuntu&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Once you have a copy of Linux running, install the &lt;code&gt;dotnet&lt;/code&gt; SDK and runtime. Microsoft doesn&amp;rsquo;t have installation instructions specific to Linux Mint, but since it&amp;rsquo;s based on Debian I used the instructions on their &amp;ldquo;&lt;a target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34; href=&#34;https://docs.microsoft.com/en-us/dotnet/core/install/linux-debian&#34;&gt;Install the .NET SDK or the .NET Runtime on Debian&lt;/a&gt;&amp;rdquo; page. Install both on your computer. If you&amp;rsquo;re not running Linux Mint, look for the distribution you&amp;rsquo;re running in their &lt;a target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34; href=&#34;https://docs.microsoft.com/en-us/dotnet/core/install/linux&#34;&gt;list of supported Linux distros&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Next, &lt;a target=&#34;_blank&#34; href=&#34;https://quakkels.com/posts/my-favorite-tools-on-linux/#visual-studio-code&#34;&gt;install Visual Studio Code&lt;/a&gt;. If you want you can use JetBrains Rider, which is a full fledged IDE that runs on Linux, Mac, and Windows. It&amp;rsquo;s a proprietary product, but it&amp;rsquo;s a high quality option if you&amp;rsquo;d like a more streamlined development experience. I&amp;rsquo;ll be using VS Code in this walkthrough.&lt;/p&gt;
&lt;h2 id=&#34;create-the-net-5-solution-with-projects&#34;&gt;Create The .NET 5 Solution with Projects&lt;/h2&gt;
&lt;p&gt;Using the &lt;code&gt;dotnet&lt;/code&gt; CLI we&amp;rsquo;ll create a multiple project Solution. It is common for multiple .NET Projects can be associated in a single Solution file. This allows a formal organization for multiple related projects. With a Solution (SLN file) we can designate that a web project and a business domain project are related and meant to exist together. And when they&amp;rsquo;re defined that way, they can be managed together as a single unit instead of as completely separate projects. (For this example, we&amp;rsquo;ll forgo creating a unit testing project. But remember, if this were a real project then you should unit test the code that needs to work.)&lt;/p&gt;
&lt;p&gt;In a terminal, navigate to a directory where the new .NET Solution will be created. I used my user&amp;rsquo;s home folder (&lt;code&gt;/home/quakkels/&lt;/code&gt;.)&lt;/p&gt;
&lt;p&gt;Create a new directory for the Solution, and change directories into it.&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;mkdir DotnetSolution
cd DotnetSolution
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Now we can use the &lt;code&gt;dotnet&lt;/code&gt; CLI command to start. We can first list out all the templates that &lt;code&gt;dotnet&lt;/code&gt; can create for us from &lt;code&gt;new&lt;/code&gt;.&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;dotnet new --list
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;In the results of the &lt;code&gt;--list&lt;/code&gt; flag we can validate that there&amp;rsquo;s an option to create a Solution File (SLN for short.)&lt;/p&gt;
&lt;p&gt;Create a Solution file. For consistency, I recommend naming it to match the solution folder.&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;dotnet new sln --name DotnetSolution
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Then if you&amp;rsquo;re curious, take a peek at the contents of the new SLN file.&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;cat DotnetSolution.sln
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;So far it&amp;rsquo;s just full of a bunch of generic boilerplate. But that will change as we add Dotnet projects to it.&lt;/p&gt;
&lt;p&gt;Create a dotnet web project.&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;dotnet new web --name DotnetSolution.Web
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;If you list the current directories contents with &lt;code&gt;ls&lt;/code&gt;, you should see the SLN file and the new DotnetSolution.Web folder.&lt;/p&gt;
&lt;p&gt;Now add a class library project to handle all the behaviors that aren&amp;rsquo;t specific to the web.&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;dotnet new classlib --name DotnetSolution.Behaviors
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Now that we have these projects, we need to add them to the SLN file. The &lt;code&gt;dotnet&lt;/code&gt; CLI makes a &lt;code&gt;sln&lt;/code&gt; command available so we don&amp;rsquo;t have to manage the contents of that file by hand.&lt;/p&gt;
&lt;p&gt;Add both projects to the Solution.&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;dotnet sln add ./DotnetSolution.Web/DotnetSolution.Web.csproj
dotnet sln add ./DotnetSolution.Behaviors/DotnetSolution.Behaviors.csproj
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;We can verify the Solution has the projects by running:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;dotnet sln list
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;The benefit of having these projects in a Solution is that we can execute commands on the Solution which will affect both projects as a unit. That&amp;rsquo;s better than needing to run the same commands multiple times, once for each project. Some commands available are &lt;code&gt;dotnet clean&lt;/code&gt;, &lt;code&gt;dotnet restore&lt;/code&gt;, &lt;code&gt;dotnet build&lt;/code&gt;, and if we had a unit test project we could run &lt;code&gt;dotnet test&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;To make sure the web project is working, use &lt;code&gt;dotnet&lt;/code&gt; to run the web project.&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;dotnet run --project ./DotnetSolution.Web/
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;You will be able to navigate to the website using https://localhost:5001. But, your browser will tell you the SSL certificate can&amp;rsquo;t be trusted. Microsoft and aspdotnet core 5 automatically configure new websites to use HTTPS, even for local development. So you can either just tell your browser to proceed to the website, since you know it&amp;rsquo;s safe. Or, you can go through the &lt;a target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34; href=&#34;https://docs.microsoft.com/en-us/aspnet/core/security/enforcing-ssl?view=aspnetcore-5.0&amp;tabs=visual-studio#ssl-linux&#34;&gt;steps to trust the dev certificate&lt;/a&gt;. The unfortunate truth of it is: this is a bad dev experience on Linux. There is a command to create dev certs: &lt;code&gt;dotnet dev-certs https -v&lt;/code&gt;. And, there&amp;rsquo;s a command to trust the dev cert: &lt;code&gt;dotnet dev-certs https --trust&lt;/code&gt;, but it&amp;rsquo;s only supported on Mac and Windows. If you run it in Linux, you&amp;rsquo;re given a URL to follow to manually trust development certificates. The simplest way to proceed, for now, is to add a certificate exception to your browser.&lt;/p&gt;
&lt;p&gt;After navigating to https://localhost:5001, verify that you see &amp;ldquo;Hello World!&amp;rdquo;. Then shut down the server by cancelling the process with &lt;code&gt;Ctrl + C&lt;/code&gt; in the terminal.&lt;/p&gt;
&lt;h2 id=&#34;use-the-debugger-and-intellisense-in-vs-code&#34;&gt;Use the Debugger and Intellisense in VS Code&lt;/h2&gt;
&lt;p&gt;Next, we need to set up debugging in Visual Studio Code. Open the DotnetSolution directory in VS Code. It&amp;rsquo;s very quick to use the following command in the terminal that&amp;rsquo;s in the DotnetSolution folder.&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;code .
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;VS Code will probably ask you to install recommended extensions for C#. Go ahead and install extensions. If it doesn&amp;rsquo;t ask, then go to the Extensions tab and install the C# extension by Microsoft. After the extension is installed, I recommend closing VS Code and starting it up again using the same &lt;code&gt;code .&lt;/code&gt; command in the DotnetSolution folder.&lt;/p&gt;
&lt;p&gt;After opening the DotnetSolution folder in VS Code, you should see a popup asking you to add assets for running and debugging.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://quakkels.com/images/dotnetOnLinux/vscode_run_and_debug.png&#34; alt=&#34;Run and debug dialog&#34;&gt;&lt;/p&gt;
&lt;p&gt;Click &amp;ldquo;Yes.&amp;rdquo;&lt;/p&gt;
&lt;p&gt;After clicking &amp;ldquo;Yes&amp;rdquo; you will see another popup dialog asking you to select the project to launch.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://quakkels.com/images/dotnetOnLinux/vscode_select_project_to_launch.png&#34; alt=&#34;Select project to launch dialog&#34;&gt;&lt;/p&gt;
&lt;p&gt;From the list, select the DotnetSolution.Web project.&lt;/p&gt;
&lt;p&gt;Using the left navigation go into the Debug tab, and click the &amp;ldquo;play&amp;rdquo; button to launch the &lt;code&gt;.NET Core Launch (Web)&lt;/code&gt; configuration.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://quakkels.com/images/dotnetOnLinux/vscode_debug_dotnetcore.png&#34; alt=&#34;Play button&#34;&gt;&lt;/p&gt;
&lt;p&gt;Now, when the site is launched with the play button, it will build and open in your browser.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://quakkels.com/images/dotnetOnLinux/helloworld.png&#34; alt=&#34;Hello World!&#34;&gt;&lt;/p&gt;
&lt;p&gt;Then, to check that debugging is working, stop the site using the stop button at the top of VS Code then add a breakpoint in Startup.cs.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://quakkels.com/images/dotnetOnLinux/vscode_add_breakpoint.png&#34; alt=&#34;Add breakpoint&#34;&gt;&lt;/p&gt;
&lt;p&gt;And launch again with the play button under the Debug tab.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://quakkels.com/images/dotnetOnLinux/vscode_hit_breakpoint.png&#34; alt=&#34;Hit breakpoint&#34;&gt;&lt;/p&gt;
&lt;p&gt;Now we have debugging working in our Dotnet Core 5 website on Linux.&lt;/p&gt;
&lt;h2 id=&#34;add-a-project-reference&#34;&gt;Add a Project Reference&lt;/h2&gt;
&lt;p&gt;So far, we&amp;rsquo;ve just installed tools, created a solution with those tools, and configured the development environment. Now, let&amp;rsquo;s do some actual programming in the DotnetSolution.Behaviors and then let&amp;rsquo;s add a project reference so we can use DotnetSolution.Behaviors in the website.&lt;/p&gt;
&lt;p&gt;The website currently just prints &amp;ldquo;Hello World!&amp;rdquo; and that&amp;rsquo;s it. Instead of a generic message like that, I want it to tell me a random joke. The joke delivery mechanism isn&amp;rsquo;t specific to the website. It just delivers a joke. It could be delivering a joke to a console app, to a database, or any other type of application. So, the fact that the joke will be displayed in a website is an implementation detail. We&amp;rsquo;ll keep the implementation details separate by putting the joke behaviors in the DotnetSolution.Behaviors class library.&lt;/p&gt;
&lt;p&gt;Using VS Code, in the DotnetSolution.Behaviors project, rename &lt;code&gt;Class1.cs&lt;/code&gt; to &lt;code&gt;JokeRepository.cs&lt;/code&gt; and put the following code in it:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;using System;

namespace DotnetSolution.Behaviors
{
    public static class JokeRepository
    {
        private static string[] Jokes = new string [] {
            &amp;quot;I’m reading a book about anti-gravity. It’s impossible to put down.&amp;quot;,
            &amp;quot;6:30 is the best time on a clock, hands down.&amp;quot;,
            &amp;quot;I can tell when people are being judgmental just by looking at them.&amp;quot;,
            &amp;quot;I was wondering why the frisbee kept getting bigger and bigger, but then it hit me.&amp;quot;
        };

        public static string GetRandomJoke()
        {
            Random r = new Random();
            var index = r.Next(0, JokeRepository.Jokes.Length);
            return JokeRepository.Jokes[index];
        }
    }
}
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;As you&amp;rsquo;re working in the JokeRepository.cs class, you should notice that there&amp;rsquo;s syntax highlighting and some Intellisense style features popping up.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://quakkels.com/images/dotnetOnLinux/vscode_intellisense_syntax_highlighting.png&#34; alt=&#34;VS Code syntax highlighting examples&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;If you don&amp;rsquo;t see syntax and error highlighting, then you may need to restart VS Code, since the Omnisharp server in the C# extension may have shut down for some reason.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Now, open up &lt;code&gt;Startup.cs&lt;/code&gt; in the DotnetSolution.Web project so we can display jokes instead of the &amp;ldquo;Hello World!&amp;rdquo; message.&lt;/p&gt;
&lt;p&gt;Find this line:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;await context.Response.WriteAsync(&amp;quot;Hello World!&amp;quot;);
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;And replace it with this:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;await context.Response.WriteAsync(JokeRepository.GetRandomJoke());
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Now, if the C# extension is working correctly, you should see error highlighting on that line, and if you hover your mouse over it, you&amp;rsquo;ll see this message:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://quakkels.com/images/dotnetOnLinux/vscode_cant_find_jokerepository.png&#34; alt=&#34;Can&amp;rsquo;t find JokeRepository&#34;&gt;&lt;/p&gt;
&lt;p&gt;Even though DotnetSolution.Behaviors is in the same Solution as DotnetSolution.Web, the web project doesn&amp;rsquo;t have a reference to the behaviors project yet.&lt;/p&gt;
&lt;p&gt;So, making sure you&amp;rsquo;re terminal is working in the DotnetSolution folder, run this command to add a project reference.&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;dotnet add DotnetSolution.Web/ reference DotnetSolution.Behaviors/
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Now if you place your cursor on the error highlighted &lt;code&gt;JokeRespository&lt;/code&gt; in code, and press &lt;code&gt;ctrl+.&lt;/code&gt; then you&amp;rsquo;ll be given the option to add a &lt;code&gt;using&lt;/code&gt; statement for &lt;code&gt;DotnetSolution.Behaviors&lt;/code&gt;. Go ahead and add it to the file, and the errors will go away.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://quakkels.com/images/dotnetOnLinux/vscode_using_package.png&#34; alt=&#34;Add using example&#34;&gt;&lt;/p&gt;
&lt;p&gt;Once the errors are gone, run the site again. You can either launch it with VS Code, or with the &lt;code&gt;dotnet run --project ./DotnetSolution.Web/&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://quakkels.com/images/dotnetOnLinux/joke.png&#34; alt=&#34;Add using example&#34;&gt;&lt;/p&gt;
&lt;p&gt;And there&amp;rsquo;s the random joke.&lt;/p&gt;
&lt;h2 id=&#34;conclusion&#34;&gt;Conclusion&lt;/h2&gt;
&lt;p&gt;There we have it. An ASP.NET Core website developed on Linux. Granted, this is a super simple site. But I hope I was able to show you enough about the C# development experience on Linux to get you to consider trying it for your next project.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>A Framework is an Implementation Detail</title>
      <link>https://quakkels.com/posts/202107_a_framework_is_an_implementation_detail/</link>
      <pubDate>Sat, 31 Jul 2021 00:00:00 +0000</pubDate>
      
      <guid>https://quakkels.com/posts/202107_a_framework_is_an_implementation_detail/</guid>
      <description>&lt;p&gt;I&amp;rsquo;ve previously written about &lt;a href=&#34;https://quakkels.com/posts/dont-take-frameworks-for-granted/&#34;&gt;my opinion of how programmers should consider frameworks&lt;/a&gt;. I was delighted to hear Robert C Martin express a similar point of view in a Q&amp;amp;A session after his Clean Architecture and Design talk at ITkonekt 2019.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Frameworks are wonderful things. You can get a lot done with a framework. You get a framework like Spring or Rails, or JSF, or JPA. Any of those neat little frameworks. Wonderful. Angular. Lovely things. But, the author of the framework does not know you! And does not care about you. &lt;strong&gt;The author of the framework does not understand your problems. He is not writing code to solve your problems. They are writing code to solve their problems.&lt;/strong&gt; When you use a framework you make an enormeous commitment to that framework. You bind your code to it. In the very worst case you derive from base classes in the framework. The framework author makes no such commitment to you. It is a terribly asymmetric relationship. And as an Architect, if you&amp;rsquo;re an Architect, or if you&amp;rsquo;re a Lead Designer, you must be very skeptical of that relationship. Because you should be thinking that this framework is out to screw you. You should be looking very very carefully at how much you bind to it. Read the directions. You know. The documents that the framework author writes. Read those directions but do not follow those directions. Because, the directions that the framework author writes will tell you to couple to the framework intimately. Because he loves the framework. You don&amp;rsquo;t have to. So then what you do is you put the framework behind an architectural boundary. [&amp;hellip;] &lt;strong&gt;You use it in a very careful way so that one day, when that framework no longer satisfies your needs, you will have options.&lt;/strong&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;(Emphasis mine.)&lt;/p&gt;
&lt;p&gt;Let us programmers continually improve in our craft. I think the specific language choice is far less important than the architectural structure of our programs. We&amp;rsquo;re so quick to hitch ourselves to things like the &amp;ldquo;Django Wagon&amp;rdquo; or the &amp;ldquo;React Wagon&amp;rdquo; or the &amp;ldquo;EF Wagon&amp;rdquo; without planning for an eventual time when those frameworks hinder rather than help.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Hand Tool Woodworking</title>
      <link>https://quakkels.com/posts/hand-tool-woodworking/</link>
      <pubDate>Fri, 12 Feb 2021 00:00:00 +0000</pubDate>
      
      <guid>https://quakkels.com/posts/hand-tool-woodworking/</guid>
      <description>&lt;p&gt;I recently took up hand tool woodworking. I&amp;rsquo;m not good at it. But I&amp;rsquo;m having fun.&lt;/p&gt;
&lt;p&gt;These are my favorite resources for learning about it.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34; href=&#34;https://www.theenglishwoodworker.com/&#34;&gt;The English Woodworker&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34; href=&#34;https://www.rexkrueger.com/&#34;&gt;Rex Krueger&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34; href=&#34;https://www.woodbywright.com/&#34;&gt;Wood By Wright&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;a-bench&#34;&gt;A Bench&lt;/h2&gt;
&lt;p&gt;As is the case with many beginners; my first woodworking project was my bench. I decided to build a Low Roman Workbench after seeing what &lt;a target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34; href=&#34;https://www.youtube.com/watch?v=7rOHuC_yuV4&#34;&gt;Rex Krueger&lt;/a&gt; and &lt;a target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34; href=&#34;https://www.popularwoodworking.com/woodworking-blogs/roman-workbenches-high-low/&#34;&gt;Christopher Schwarz&lt;/a&gt; had to say about them.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://quakkels.com/images/hand-tool-woodworking/low-roman-workbench-laminating-top.jpg&#34; alt=&#34;Laminating my bench top&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://quakkels.com/images/hand-tool-woodworking/low-roman-workbench-with-legs.jpg&#34; alt=&#34;Adding legs to my bench&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;a-shooting-board&#34;&gt;A Shooting Board&lt;/h2&gt;
&lt;p&gt;The next useful thing that I made was a &lt;a target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34; href=&#34;https://www.finewoodworking.com/2009/07/07/shooting-board&#34;&gt;shooting board&lt;/a&gt;, which is a jig used with a hand plane to square the ends of hand cut boards.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://quakkels.com/images/hand-tool-woodworking/shooting-board.jpg&#34; alt=&#34;My shooting board is square&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://quakkels.com/images/hand-tool-woodworking/shooting-board-being-used.jpg&#34; alt=&#34;My shooting board being used&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;winding-sticks&#34;&gt;Winding Sticks&lt;/h2&gt;
&lt;p&gt;My next project was another tool build. Winding sticks are important to hand tool woodworkers because they help flatten large surfaces, like bench tops, with hand planes.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://quakkels.com/images/hand-tool-woodworking/winding-sticks.jpg&#34; alt=&#34;Winding Sticks&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://quakkels.com/images/hand-tool-woodworking/winding-sticks-showing-not-flat.jpg&#34; alt=&#34;Winding sticks showing how not flat my bench is&#34;&gt;&lt;/p&gt;
&lt;p&gt;With the aid of the sticks it&amp;rsquo;s really obvious how not-flat my bench is. I was able to plane it down and improve it a lot.&lt;/p&gt;
&lt;h2 id=&#34;desk-organizer&#34;&gt;Desk Organizer&lt;/h2&gt;
&lt;p&gt;Around this time I ended up having a need for a cell phone desk stand. I&amp;rsquo;d been doing more mobile development for work, and need to keep multiple phone ready on my desk for testing.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://quakkels.com/images/hand-tool-woodworking/deskorganizer.jpg&#34; alt=&#34;Desk organizer&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;the-box&#34;&gt;The Box&lt;/h2&gt;
&lt;p&gt;After developing some super basic woodworking knowledge, I wanted to tackle a dovetailed box next. But my results were disastrous. I tried again and again, but tail boards and pin boards would never fit. So I decided to take on the less ambitious task of building a box with rabbet joinery instead of dovetails. But even rabbets were harder than I expected and I ended up producing lots of really ugly boards that ended up in the scrap pile.&lt;/p&gt;
&lt;p&gt;Eventually I found instructions from Richard Maguire of The English Woodworker. His &lt;a target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34; href=&#34;https://www.theenglishwoodworker.com/hand-cutting-rebates-back-to-basics-approach-video/&#34;&gt;very basic rabbet technique&lt;/a&gt; (rebate across the pond) was exactly what I needed to see. He used the simplest of tools that I, as a beginner, actually had access to.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://quakkels.com/images/hand-tool-woodworking/rabbet-joinery.jpg&#34; alt=&#34;Rabbet joinery&#34;&gt;&lt;/p&gt;
&lt;p&gt;Finally a decently tight joint! This inspired me to attempt cutting dados to fit the box&amp;rsquo;s bottom panel into.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://quakkels.com/images/hand-tool-woodworking/dado.jpg&#34; alt=&#34;Rabbet joinery&#34;&gt;&lt;/p&gt;
&lt;p&gt;Here&amp;rsquo;s the completed box:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://quakkels.com/images/hand-tool-woodworking/rabbeted_box_closed.jpg&#34; alt=&#34;Rabbeted box&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://quakkels.com/images/hand-tool-woodworking/rabbeted_box_open.jpg&#34; alt=&#34;Rabbeted box&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;dovetails&#34;&gt;Dovetails&lt;/h2&gt;
&lt;p&gt;After all that work making a rabbeted box, I went back and tried a dovetail joint again. This time I had a lot more time working with wood and I was finally able to pull off a joint that, at the very least, fit together:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://quakkels.com/images/hand-tool-woodworking/dovetails.jpg&#34; alt=&#34;Dovetail&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;further-reading&#34;&gt;Further Reading&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34; href=&#34;https://www.youtube.com/watch?v=7rOHuC_yuV4&#34;&gt;Build a REAL Workbench for $30&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34; href=&#34;https://www.theenglishwoodworker.com/&#34;&gt;The English Woodworker&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34; href=&#34;https://www.theenglishwoodworker.com/hand-cutting-rebates-back-to-basics-approach-video/&#34;&gt;Hand Cutting Rebates – Back To Basics Approach VIDEO&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34; href=&#34;https://www.youtube.com/watch?v=E8SrH6HbDdQ&#34;&gt;How to Cut Dovetails by Hand – A New Approach (2020)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34; href=&#34;https://www.rexkrueger.com/&#34;&gt;Rex Krueger&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34; href=&#34;https://www.popularwoodworking.com/woodworking-blogs/roman-workbenches-high-low/&#34;&gt;Roman Workbenches High And Low&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34; href=&#34;https://www.finewoodworking.com/2009/07/07/shooting-board&#34;&gt;Shooting Board&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34; href=&#34;https://www.woodbywright.com/&#34;&gt;Wood By Wright&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>RSS is Wonderful</title>
      <link>https://quakkels.com/posts/rss-is-wonderful/</link>
      <pubDate>Sun, 07 Feb 2021 00:00:00 +0000</pubDate>
      
      <guid>https://quakkels.com/posts/rss-is-wonderful/</guid>
      <description>&lt;p&gt;I am not a big social media guy anymore. Over the last few years I&amp;rsquo;ve been actively avoiding it. I&amp;rsquo;m not a fan of each platform&amp;rsquo;s privacy concerns, and users need to be very cautious to avoid flamewars and infinite doomscrolling. If we aren&amp;rsquo;t careful, social media&amp;rsquo;s default state seems to devolve into just destroying trust and goodwill. I prefer society in real life.&lt;/p&gt;
&lt;p&gt;However, avoiding social media means that we lose a lot of interesting articles, funny memes, and informative videos that are shared on those platforms. Maybe that&amp;rsquo;s okay since there&amp;rsquo;s a lot of unproductive and even destructive activity happening on social media. But, I still want online communities that allow us to:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Share ideas&lt;/li&gt;
&lt;li&gt;Stay informed&lt;/li&gt;
&lt;li&gt;Discover new sources of information&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;sharing-ideas-with-blogs-instead-of-social-media&#34;&gt;Sharing Ideas with Blogs Instead of Social Media&lt;/h2&gt;
&lt;p&gt;Sharing our own ideas is a fairly solved problem. For years people had their own homepages instead of social media. Does anyone remember &lt;a target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34;  href=&#34;https://web.archive.org/web/19991125045341/http://geocities.yahoo.com/home&#34;&gt;Geocities&lt;/a&gt; and &lt;a target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34;  href=&#34;https://web.archive.org/web/19971211085606/http://angelfire.com/&#34;&gt;Angelfire&lt;/a&gt;? Those services offered web hosting where we could all create our own html &amp;ldquo;homepages&amp;rdquo;. More recently homepages have given way to the blogs like this one. But it&amp;rsquo;s basically the same thing. The main difference is blogs imply continuous posting of longform articles, whereas homepages didn&amp;rsquo;t always receive regular updates.&lt;/p&gt;
&lt;p&gt;A strength of sharing with blogs is they require more effort and thinking to articulate an idea. That&amp;rsquo;s a feature, not a bug. Rather than hastily firing off status updates or &amp;ldquo;micro-blogging&amp;rdquo; our whims that may be misunderstood and end up haunting our future selves, instead blogging encourages us to put work into a long form explanation of the things we care about. It can be far more rewarding for us and also for our readers.&lt;/p&gt;
&lt;h2 id=&#34;stay-informed-with-rss-feeds&#34;&gt;Stay Informed with RSS Feeds&lt;/h2&gt;
&lt;p&gt;With blogs came RSS feeds. RSS stands for Real Simple Syndication. It&amp;rsquo;s a technical specification for a protocol designed to publish content. But over the years RSS became synonymous with other protocols, like Atom, that are designed to do the same thing. With RSS we can curate our own feed of information. We can collect feeds from all the blogs we like, and we can get notified of new posts by subscribing with an RSS Reader. Readers will aggregate posts and list them chronologically for us. When the blog publishes content to their RSS feed, then it will be in our RSS reader without being subject to an invisible ranking algorithm like that which exists in social media. RSS is far more honest in that way.&lt;/p&gt;
&lt;p&gt;To see an example of an RSS feed, take a look at &lt;a href=&#34;https://quakkels.com/index.xml&#34; target=&#34;_blank&#34;&gt;quakkels.com/index.xml&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id=&#34;discover-new-blogs-with-rss-discovery-engine&#34;&gt;Discover New Blogs with RSS Discovery Engine&lt;/h2&gt;
&lt;p&gt;So, blogging and RSS feeds solve two of the three things I&amp;rsquo;m trying to replace. Social media offers really appealing mechanisms for discovering new content. Things like Youtube&amp;rsquo;s Recommended section algorithmically highlights new videos and channels that we might like based on what we&amp;rsquo;ve already watched. Also, sites like Reddit algorithmically highlight user posts based on a combination of user interaction (both upvates and downvotes), rating, and chronology.&lt;/p&gt;
&lt;p&gt;RSS doesn&amp;rsquo;t have those kinds of discoverability features. To get them, typically we need a third party algorithm to help. Many feed readers offer those kinds of categorization and recommendation features. But I&amp;rsquo;m interested in a way to transparently discover related blogs that avoids hidden algorithms.&lt;/p&gt;
&lt;p&gt;I thought back to the days of Geocities and Angelfire. Back when even Google wasn&amp;rsquo;t around. &lt;a target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34;  href=&#34;https://web.archive.org/web/19970329172719/http:/www.webring.org:80/index.html&#34;&gt;Web Rings&lt;/a&gt; were fairly common in those days. The core concept of a web ring was that one site will link to two other sites that were part of the ring. One ahead of themselves and one behind. So users could go forward or backward in the ring and discover related sites.&lt;/p&gt;
&lt;p&gt;Inspired by Web Rings from the 90s, I created a tool for serendipitous discovery of blogs called &lt;a target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34; href=&#34;https://rdengine.herokuapp.com/&#34;&gt;RSS Discovery Engine&lt;/a&gt;. Similar to how web rings work, I make the assumption that interesting blogs will tend to link to other related blogs, and therefore, linked blogs are likely to also be interesting.&lt;/p&gt;
&lt;p&gt;RSS Discovery Engine works by taking the URL to a blog, or any site with an RSS feed, and examining all the posts in the blog&amp;rsquo;s RSS feed for links to other sites. When a link to another site is found, it&amp;rsquo;s inspected to see if it also has an RSS feed. If the new site has an RSS feed, then it&amp;rsquo;s added to the results list. Since the content of RSS feeds change it&amp;rsquo;s common for results to change as time goes on. So returning to RSS Discovery Engine and spidering a URL a week later might show new results.&lt;/p&gt;
&lt;h2 id=&#34;discovery-example&#34;&gt;Discovery Example&lt;/h2&gt;
&lt;p&gt;Here&amp;rsquo;s a quick example of how RSS Discovery Engine works. &lt;em&gt;It&amp;rsquo;s FOSS&lt;/em&gt; is a blog I already enjoy. I&amp;rsquo;ll start by entering it&amp;rsquo;s full URL into the search bar, and clicking &amp;ldquo;Spider&amp;rdquo;.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://quakkels.com/images/rde01.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;Raspberry Pi&amp;rsquo;s site showed up in the results.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://quakkels.com/images/rde02.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;When I clicked the &amp;ldquo;spider&amp;rdquo; button for Raspberry PI, I got a bunch of related and interesting results back.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://quakkels.com/images/rde03.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;As I continue scrolling I find the Arduino blog.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://quakkels.com/images/rde04.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;I can visit all these sites directly to see if they look like the kind of thing I&amp;rsquo;d like to return to. And, all of these sites have their own RSS feeds that I can plug into my reader.&lt;/p&gt;
&lt;h2 id=&#34;rss-discovery-engines-future&#34;&gt;RSS Discovery Engine&amp;rsquo;s Future&lt;/h2&gt;
&lt;p&gt;I think the ideal online community is decentralized and free from secret proprietary algorithms. Blogs, RSS, and tools like RSS Discovery Engine help cultivate such communities.&lt;/p&gt;
&lt;p&gt;RSS Discovery Engine is pre-alpha software. It has a while to go to iron out all the wrinkles and deliver as much transparent and decentralized functionality as it can.&lt;/p&gt;
&lt;p&gt;If you&amp;rsquo;re a Python programmer interested in contributing to the RSS Discovery Engine project, I invite you to take a look at the &lt;a target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34; href=&#34;https://github.com/quakkels/rssdiscoveryengine&#34;&gt;repository&lt;/a&gt; and to contribute via GitHub.&lt;/p&gt;
&lt;h2 id=&#34;further-reading&#34;&gt;Further Reading&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34; href=&#34;http://socialpsychonline.com/2015/09/search-engine-manipulation-effect-election/&#34; target=&#34;_blank&#34;&gt;How Tampering with Search Engines Could Swing an Election (2015)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34; href=&#34;https://rdengine.herokuapp.com/&#34;&gt;RSS Discovery Engine&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34; href=&#34;https://github.com/quakkels/rssdiscoveryengine&#34;&gt;RSS Discovery Engine repository&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34; href=&#34;https://gizmodo.com/rss-is-better-than-twitter-1833624929&#34;&gt;RSS is Better than Twitter&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34; href=&#34;https://www.pnas.org/content/112/33/E4512.abstract&#34;&gt;The search engine manipulation effect (SEME) and its possible impact on the outcomes of elections (2015)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34; href=&#34;https://tedium.co/2020/11/20/webring-history/&#34;&gt;Webring.org (Archived)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34; href=&#34;https://atthis.link/blog/2021/rss.html&#34;&gt;Why I Still Use RSS&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>My Favorite Tools on Linux</title>
      <link>https://quakkels.com/posts/my-favorite-tools-on-linux/</link>
      <pubDate>Sun, 10 Jan 2021 00:00:00 +0000</pubDate>
      
      <guid>https://quakkels.com/posts/my-favorite-tools-on-linux/</guid>
      <description>&lt;p&gt;Last year I decided to take on the challenge of running just Linux. I wanted to see how good (or bad) the experience would be, and whether it&amp;rsquo;d be painful enough that I&amp;rsquo;d go back to using Windows. I went ahead and installed Linux Mint on my primary personal laptop. I did not dual boot Windows. This meant I stopped using Windows 10 unless it was work related. Thankfully, I don&amp;rsquo;t really miss Windows 10 that much. There were some bumps along the road, but the overall results were positive and enjoyable. So, I thought I&amp;rsquo;d share my favorite software choices for my personal Linux workstation.&lt;/p&gt;
&lt;p&gt;I&amp;rsquo;ll show the installation shell commands I used, but know that these are meant for the Debian family of Linux distributions. Specifically, I ran these commands on Linux Mint 20.&lt;/p&gt;
&lt;p&gt;Also, I&amp;rsquo;m not going to get into the stuff that comes with Linux Mint by default. You&amp;rsquo;ll get a calculator, web browser, backup tool, and the entire LibreOffice suite. You&amp;rsquo;ll get SSH, and more. Generally, these are great tools that can easily replace their Windows equivalents.&lt;/p&gt;
&lt;h2 id=&#34;the-basics&#34;&gt;The Basics&lt;/h2&gt;
&lt;h3 id=&#34;nordvpn&#34;&gt;NordVPN&lt;/h3&gt;
&lt;p&gt;VPN software is important for online privacy and security and NordVPN was my choice before switching to Linux. Thankfully, they have &lt;a target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34; href=&#34;https://nordvpn.com/download/linux/&#34;&gt;Linux&lt;/a&gt; support as well.&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;wget -qnc https://repo.nordvpn.com/deb/nordvpn/debian/pool/main/nordvpn-release_1.0.0_all.deb
sudo dpkg -i ./nordvpn-release_1.0.0_all.deb
sudo apt-get update
sudo apt-get --assume-yes install nordvpn
rm nordvpn-release_1.0.0_all.deb
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Once installed, login to NordVPN with &lt;code&gt;nordvpn login&lt;/code&gt;. If you want it to automatically connect when you start your computer you can run &lt;code&gt;nordvpn set autoconnect on&lt;/code&gt;. Though be careful to exclude your local area network if you&amp;rsquo;re trying to connect to other computers. Whitelist your LAN&amp;rsquo;s IP range with &lt;code&gt;nordvpn whitelist add subnet 192.168.1.0/24&lt;/code&gt;.&lt;/p&gt;
&lt;h3 id=&#34;git&#34;&gt;Git&lt;/h3&gt;
&lt;p&gt;No surprise here. I use &lt;a target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34; href=&#34;https://git-scm.com/&#34;&gt;Git&lt;/a&gt; for blogging and side projects.&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;sudo apt-get install git
&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&#34;jq&#34;&gt;jq&lt;/h3&gt;
&lt;p&gt;The &lt;a target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34; href=&#34;https://stedolan.github.io/jq/&#34;&gt;jq&lt;/a&gt; command is a handy utility for parsing JSON in the terminal. I like to automate API testing with bash scripts using &lt;code&gt;jq&lt;/code&gt; to parse the JSON response.&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;sudo apt-get install jq
&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&#34;filezilla&#34;&gt;Filezilla&lt;/h3&gt;
&lt;p&gt;&lt;a target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34; href=&#34;https://filezilla-project.org/&#34;&gt;Filezilla&lt;/a&gt; is my preferred FTP client.&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;sudo apt-get install filezilla
&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&#34;tmux&#34;&gt;Tmux&lt;/h3&gt;
&lt;p&gt;I like using the terminal as much as I can. And Tmux adds a ton of flexibility, through keybindings, to create, close, move, resize, and generally play with multiple terminal &amp;ldquo;panes&amp;rdquo;. So instead of having a bunch of terminal windows, and instead of having a bunch of tabs, I use &lt;a target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34; href=&#34;https://github.com/tmux/tmux/wiki&#34;&gt;Tmux&lt;/a&gt;.&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;sudo apt-get install tmux
&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&#34;tree&#34;&gt;Tree&lt;/h3&gt;
&lt;p&gt;The &lt;code&gt;ls&lt;/code&gt; command is very handy, but sometimes I just want to see a tree structure including child directories. &lt;a target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34; href=&#34;http://mama.indstate.edu/users/ice/tree/&#34;&gt;Tree&lt;/a&gt; offers that functionality and is pretty handy when I don&amp;rsquo;t want to switch over to a windowed file browser.&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;sudo apt-get install tree
&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&#34;direnv&#34;&gt;direnv&lt;/h3&gt;
&lt;p&gt;The &lt;a target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34; href=&#34;https://direnv.net/&#34;&gt;&lt;code&gt;direnv&lt;/code&gt;&lt;/a&gt; shell tool is for easily configuring environment variables that are specific to the folder you&amp;rsquo;re currently working in. I came across it while reading &lt;a target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34; href=&#34;https://interpreterbook.com/&#34;&gt;Writing An Interpreter In Go&lt;/a&gt;. The author of that book recommended it to manage Go environment configurations. It&amp;rsquo;s been working great.&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;sudo apt-get install direnv
&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&#34;hugo&#34;&gt;Hugo&lt;/h3&gt;
&lt;p&gt;&lt;a target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34; href=&#34;https://gohugo.io/&#34;&gt;Hugo&lt;/a&gt; is a static site generator that I use to manage this blog.&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;sudo apt-get install hugo
&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&#34;text-editing&#34;&gt;Text Editing&lt;/h2&gt;
&lt;h3 id=&#34;vim&#34;&gt;Vim&lt;/h3&gt;
&lt;p&gt;&lt;a target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34; href=&#34;https://www.vim.org/&#34;&gt;Vim&lt;/a&gt; is a staple editor in the Linux community. And while there is fierce competition with other options, it&amp;rsquo;s reputation is really solid among those who use it. I &lt;a href=&#34;posts/configuring-vim-when-using-git-bash/&#34;&gt;wrote about Vim before&lt;/a&gt;, back when I was still using Windows for everything.&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;sudo apt-get install vim
&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&#34;visual-studio-code&#34;&gt;Visual Studio Code&lt;/h3&gt;
&lt;p&gt;I spend most of my time on my laptop working in &lt;a target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34; href=&#34;https://code.visualstudio.com/&#34;&gt;Visual Studio Code&lt;/a&gt;. I use it for all my blogging and coding. While I&amp;rsquo;m always on the lookout for something to take it&amp;rsquo;s place, Visual Studio Code is essential to my projects.&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;wget -qnc https://go.microsoft.com/fwlink/?LinkID=760868 -O vscode.deb
sudo apt install -y ./vscode.deb
sudo apt-get update
sudo apt-get --assume-yes install code
rm vscode.deb
&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&#34;graphics&#34;&gt;Graphics&lt;/h2&gt;
&lt;h3 id=&#34;pencil&#34;&gt;Pencil&lt;/h3&gt;
&lt;p&gt;Alrighty, &lt;a target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34; href=&#34;https://pencil.evolus.vn/&#34;&gt;Pencil&lt;/a&gt; is great. I love using this thing. It&amp;rsquo;s a tool for designing layouts and user interfaces. I used to use Balsamiq, but Pencil&amp;rsquo;s quality and user experience is very comparable. And it&amp;rsquo;s available on Linux for free!&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;wget -qnc https://pencil.evolus.vn/dl/V3.1.0.ga/pencil_3.1.0.ga_amd64.deb -O pencil.deb
sudo apt install -y ./pencil.deb
sudo apt-get update
sudo apt-get --assume-yes install pencil
rm pencil.deb
&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&#34;inkscape&#34;&gt;Inkscape&lt;/h3&gt;
&lt;p&gt;&lt;a target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34; href=&#34;https://inkscape.org/&#34;&gt;Inkscape&lt;/a&gt; is a high quality vector graphics editor. There is a learning curve to it. And if you&amp;rsquo;re coming from a background using Illustrator, then you&amp;rsquo;ll need to re-learn how to do some things. I would frequently use Illustrator back when I professionally did graphics and logo design work. And considering that experience, I have no reservations recommending Inkscape for new projects.&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;sudo add-apt-repository -y ppa:inkscape.dev/stable
sudo apt update
sudo apt install -y inkscape
&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&#34;video&#34;&gt;Video&lt;/h2&gt;
&lt;h3 id=&#34;handbrake&#34;&gt;HandBrake&lt;/h3&gt;
&lt;p&gt;&lt;a target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34; href=&#34;https://handbrake.fr/&#34;&gt;HandBrake&lt;/a&gt; is a video transcoder. It will do a pretty good job of taking a video file and converting it to another format. It also lets you tweak compression and quality levels.&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;sudo add-apt-repository ppa:stebbins/handbrake-releases -y
sudo apt-get update
sudo apt-get install -y handbrake-gtk
sudo apt-get install -y handbrake-cli
&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&#34;cheese&#34;&gt;Cheese&lt;/h3&gt;
&lt;p&gt;One of the things that my copy of Linux Mint was missing out of the box was a way to take pictures and video recordings using my laptop&amp;rsquo;s camera. &lt;a target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34; href=&#34;https://wiki.gnome.org/Apps/Cheese&#34;&gt;Cheese&lt;/a&gt; is a snappy little program that provides that functionality.&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;sudo apt-get install cheese
&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&#34;kdenlive&#34;&gt;Kdenlive&lt;/h3&gt;
&lt;p&gt;I like to do a very small amount of video editing. I primarily just edit small clips of my personal records for my &lt;a href=&#34;training_log&#34;&gt;training log&lt;/a&gt;. I paid for a video editing tool that I used on Windows. But&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34; href=&#34;https://kdenlive.org&#34;&gt;Kdenlive&lt;/a&gt; is a free, and one of the most popular, video editing tools available on Linux.&lt;/li&gt;
&lt;/ul&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;sudo apt-get install kdenlive
&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&#34;youtube-dl&#34;&gt;Youtube-dl&lt;/h3&gt;
&lt;p&gt;&lt;a target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34; href=&#34;https://youtube-dl.org/&#34;&gt;Youtube-dl&lt;/a&gt; is a tool to download clips off of YouTube. I used it recently grab a couple small clips for my post about &lt;a href=&#34;posts/developing-strength-of-character/&#34;&gt;building strength of character&lt;/a&gt;.&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;sudo curl -L https://yt-dl.org/downloads/latest/youtube-dl -o /usr/local/bin/youtube-dl
sudo chmod a+rx /usr/local/bin/youtube-dl
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Since YouTube is constantly changing their website, Youtube-dl needs to be kept as up-to-date as possible in order to work. So, once it&amp;rsquo;s installed, be sure to open a new terminal and run &lt;code&gt;youtube-dl -U&lt;/code&gt; to update it.&lt;/p&gt;
&lt;p&gt;Also, I had some issues getting this running. I think the fix was to make sure that Python, specifically a &lt;code&gt;python&lt;/code&gt; command, was installed.&lt;/p&gt;
&lt;h2 id=&#34;programming&#34;&gt;Programming&lt;/h2&gt;
&lt;h3 id=&#34;python-3&#34;&gt;Python 3&lt;/h3&gt;
&lt;p&gt;I like my &lt;a target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34; href=&#34;https://www.python.org/&#34;&gt;Python&lt;/a&gt; with &lt;a target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34; href=&#34;https://pypi.org/project/pip/&#34;&gt;PIP&lt;/a&gt; and &lt;a target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34; href=&#34;https://pipenv.pypa.io/&#34;&gt;Pipenv&lt;/a&gt;.&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;sudo apt-get install python3
sudo apt-get --assume-yes install python3-pip
pip3 install --user pipenv
&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&#34;javascript&#34;&gt;JavaScript&lt;/h3&gt;
&lt;p&gt;I like my JavaScript with &lt;a target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34; href=&#34;https://nodejs.org&#34;&gt;Node&lt;/a&gt; and &lt;a target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34; href=&#34;https://www.npmjs.com/&#34;&gt;NPM&lt;/a&gt;.&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;sudo apt-get install nodejs
sudo apt-get install npm
&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&#34;go-golang&#34;&gt;Go (Golang)&lt;/h3&gt;
&lt;p&gt;&lt;a target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34; href=&#34;https://golang.org/&#34;&gt;Go&lt;/a&gt; isn&amp;rsquo;t quite as straightforward to set up as the previous two. But it&amp;rsquo;s not too bad.&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;sudo add-apt-repository ppa:longsleep/golang-backports --yes
sudo apt-get --assume-yes update
sudo apt-get --assume-yes install golang-go
mkdir -p ~/go/{bin,pkg,src}
echo &#39;export GOPATH=&amp;quot;$HOME/go&amp;quot;&#39; &amp;gt;&amp;gt; ~/.bashrc
echo &#39;export PATH=&amp;quot;$PATH:${GOPATH//://bin:}/bin&amp;quot;&#39; &amp;gt;&amp;gt; ~/.bashrc
&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&#34;summary&#34;&gt;Summary&lt;/h2&gt;
&lt;p&gt;Thus concludes this list. All of this software is powerful, and free. Just about any computing activity I&amp;rsquo;ve pursued has functional software options on Linux. I hope you are encouraged by my experience to try some of these yourself.&lt;/p&gt;
&lt;h2 id=&#34;further-reading&#34;&gt;Further Reading&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34; href=&#34;https://wiki.gnome.org/Apps/Cheese&#34;&gt;Cheese&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34; href=&#34;https://direnv.net/&#34;&gt;direnv&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34; href=&#34;https://filezilla-project.org/&#34;&gt;Filezilla&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34; href=&#34;https://git-scm.com/&#34;&gt;Git&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34; href=&#34;https://golang.org/&#34;&gt;Go (Golang)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34; href=&#34;https://handbrake.fr/&#34;&gt;HandBrake&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34; href=&#34;https://gohugo.io/&#34;&gt;Hugo&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34; href=&#34;https://inkscape.org/&#34;&gt;Inkscape&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34; href=&#34;https://stedolan.github.io/jq/&#34;&gt;jq&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34; href=&#34;https://kdenlive.org&#34;&gt;Kdenlive&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34; href=&#34;https://nodejs.org&#34;&gt;Node&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34; href=&#34;https://nordvpn.com/download/linux/&#34;&gt;NordVpn for Linux&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34; href=&#34;https://www.npmjs.com/&#34;&gt;NPM&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34; href=&#34;https://pencil.evolus.vn/&#34;&gt;Pencil&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34; href=&#34;https://pypi.org/project/pip/&#34;&gt;PIP&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34; href=&#34;https://pipenv.pypa.io/&#34;&gt;Pipenv&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34; href=&#34;https://www.python.org/&#34;&gt;Python&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34; href=&#34;https://github.com/tmux/tmux/wiki&#34;&gt;Tmux&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34; href=&#34;http://mama.indstate.edu/users/ice/tree/&#34;&gt;Tree&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34; href=&#34;https://www.vim.org/&#34;&gt;Vim&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34; href=&#34;https://code.visualstudio.com/&#34;&gt;Visual Studio Code&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34; href=&#34;https://interpreterbook.com/&#34;&gt;Writing An Interpreter In Go&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34; href=&#34;https://youtube-dl.org/&#34;&gt;Youtube-dl&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>Building Strength of Character</title>
      <link>https://quakkels.com/posts/developing-strength-of-character/</link>
      <pubDate>Tue, 05 Jan 2021 00:00:00 +0000</pubDate>
      
      <guid>https://quakkels.com/posts/developing-strength-of-character/</guid>
      <description>&lt;p&gt;I wrote the first draft of this article all the way back in February of 2019. This started as a quick guide for how to build good habits using principles from physical training. But it quickly grew when I wanted to explore how to identify good character and good virtue. Back then I didn&amp;rsquo;t realize how big this topic is and how many different ways of answering it there are. So, I continued exploring the topic, and enjoying the underlying philosophy. But I kept feeling like I wasn&amp;rsquo;t doing justice to the subject. I kept wanting to post something more concrete and practical than what I had.&lt;/p&gt;
&lt;p&gt;This article is now approaching two years of being unfinished, and after a very turbulent 2020, it seems like an appropriate time to publish a final draft. I hope the principles in this article can be used to edify ourselves and our communities.&lt;/p&gt;
&lt;h1 id=&#34;straining-and-persisting&#34;&gt;Straining and Persisting&lt;/h1&gt;
&lt;p&gt;I started lifting heavy for strength training back in 2015. Since then I&amp;rsquo;ve seen how adopting strenuous routines can change my quality of life. The habits I adopted (strength programs and corresponding diets) were designed to be hard. But they were also designed to be incremental. Small changes over a long period of time to achieve large goals. The results were wonderful. I lost over 50 pounds and became stronger than I&amp;rsquo;d ever been in my life. The lesson I took away from that experience is habitual straining against incrementally larger challenges will result in improvement.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Principle 1:&lt;/strong&gt; Large and difficult changes are achievable through incremental and purposeful training.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;This is not limited to physical fitness changes. Incremental and purposeful training  can improve other areas of life as well. The most obvious is education. To become educated, the student follows an &amp;lsquo;exercise program&amp;rsquo; in the form of a curriculum. He studies routinely until the program is completed. If the student reads the material, and does the exercises, then at the end he will have new knowledge available to apply in life.&lt;/p&gt;
&lt;h1 id=&#34;training-character&#34;&gt;Training Character&lt;/h1&gt;
&lt;p&gt;Physical ability and mental ability are two areas where it&amp;rsquo;s reasonably easy to measure progress by testing. I can go to the gym and test how much weight I&amp;rsquo;m able to lift or how far I can run in a given time frame. I can also measure my level of knowledge of various topics by testing what I know against the rules or facts that curriculum presents.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Principle 2:&lt;/strong&gt; Measuring progress is essential for confirming that our training is working.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;But, what if you wanted to measure incremental progress for something more nebulous, such as strength of character. That gets much more difficult to track. This is a problem because we can&amp;rsquo;t know if what we&amp;rsquo;re doing is working if we can&amp;rsquo;t see any progress being made. It could be a giant waste of time, or even counterproductive. Even if the program is accidentally effective, there&amp;rsquo;s danger of abandoning the effective practice when there&amp;rsquo;s no awareness of progress being made. No one &lt;em&gt;wants&lt;/em&gt; to do strenuous activity without seeing results. Seeing results over time means that we need data to track.&lt;/p&gt;
&lt;p&gt;Strength of character is often defined as being virtuous. So we can use adherence to the desired virtues as the measure by which progress can be tracked.&lt;/p&gt;
&lt;p&gt;Allow me to take a completely inadequate amount of time to quickly and haphazardly define virtue. For the purposes of training character, &amp;ldquo;virtue&amp;rdquo; is defined as simply &amp;ldquo;the good thing to do.&amp;rdquo;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Principle 3:&lt;/strong&gt; Training virtues trains character.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;img src=&#34;images/13virtueschart.jpeg&#34; align=&#34;right&#34; /&gt;In order to train and track virtue, the virtues need to be identified. Once the virtues are identified then we need to measure how well they&amp;rsquo;re adhered to. Benjamin Franklin&amp;rsquo;s technique for developing his character was to focus on &lt;a href=&#34;http://www.thirteenvirtues.com/&#34; target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34;&gt;thirteen virtues&lt;/a&gt;. Every day he would evaluate how well he embodied those virtues which helped him track his progress. I bring up Franklin&amp;rsquo;s thirteen virtues not because it&amp;rsquo;s an authoritative list, rather, it&amp;rsquo;s important to have a tool to monitor yourself. Benjamin Franklin just had a simple chart on a piece of paper that he used to grade himself. Your tool can be as simple as that.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Principle 4:&lt;/strong&gt; Having a tool to track progress is more important than having the best tool.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;identify-your-virtues&#34;&gt;Identify your Virtues&lt;/h2&gt;
&lt;p&gt;So this is the most important part of character development, and also (probably) the most controversial.&lt;/p&gt;
&lt;p&gt;Where do our virtues come from? It wasn&amp;rsquo;t until I first tried to articluate an answer to this question that I realized the answer was far more complated than I anticipated. And, that my little how-to article for training character had to answer questions that were not so tiny. Since I first started exploring the question, America and the world has seen giant clashes of incompatible virtues in 2020. I don&amp;rsquo;t want to enter the muddy waters of debating politics. Instead, I want to talk about how people know what their virtues are.&lt;/p&gt;
&lt;p&gt;If you&amp;rsquo;re a Christian, then you believe that goodness and virtue is defined by God and The Bible. If you have a different faith your answer probably will not include The Bible. And, if you don&amp;rsquo;t follow a faith then your answer, likely, wont even include God. Yet, people still claim to know virtue. And they claim to know good.&lt;/p&gt;
&lt;p&gt;Karl Schudt is a former professor of philosophy, a &lt;a href=&#34;https://barbell-logic.com/team/karl-schudt/&#34; target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34;&gt;strength coach&lt;/a&gt;, and a host on the &lt;a href=&#34;https://onlinegreatbooks.com/onlinegreatbooks-podcast/&#34; target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34;&gt;Online Great Books podcast&lt;/a&gt;. He has a framework, that I really like, for identifying good virtues. I&amp;rsquo;ll do my best to explain it, but I also recommend listening to &lt;a href=&#34;https://onlinegreatbooks.com/77-macintyres-after-virtue-a-study-in-moral-theory/&#34; target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34;&gt;this episode&lt;/a&gt; where Karl talks about it.&lt;/p&gt;
&lt;p&gt;Karl uses a knife as a prop. He describes a knife that he uses for sharpening pencils. He likes the knife, but the knife is dull right now. It doesn&amp;rsquo;t cut. It doesn&amp;rsquo;t sharpen pencils very well anymore. It doesn&amp;rsquo;t cut paper. It&amp;rsquo;s difficult and dangerous to use. Therefore, it&amp;rsquo;s not a good knife.&lt;/p&gt;
&lt;p&gt;Notice the use of the word &amp;ldquo;good&amp;rdquo;. Since we know the context of the knife (that being the knife&amp;rsquo;s purpose) can make a judgment on whether the knife is good or not. The purpose of the knife is to cut things. Right now, the knife is dull so it can&amp;rsquo;t fulfill it&amp;rsquo;s purpose. So it&amp;rsquo;s not a good knife. Recall that the definition I&amp;rsquo;m using for &amp;ldquo;virtue&amp;rdquo; is &amp;ldquo;the good thing to do.&amp;rdquo; It&amp;rsquo;s relatively simple to know the virtues of a knife because we know the purpose of the knife. Aristotle uses the word telos to refer to the function, goal, or purpose, of a thing or person. We can know the virtues of a knife if we know it&amp;rsquo;s telos.&lt;/p&gt;
&lt;video width=&#34;100%&#34; controls poster=&#34;/clips/posters/this_will_cut.png&#34;&gt;
  &lt;source src=&#34;https://quakkels.com/clips/this_will_cut.webm&#34; type=&#34;video/webm&#34;&gt;
	Your browser does not support the video tag.
&lt;/video&gt;
&lt;p&gt;This principle of telos can be applied to people. Though, many people bristle at that thought. The idea that the purpose of a human being can be externally identified because it seems to defy a person&amp;rsquo;s ability of self determination. Or said another way, calling for particular virtues is essentially calling for restrictions on personal freedom. Initially, I bristled at this too. But you and I need to set this impulse aside. As Karl Schudt has said, &lt;strong&gt;&amp;ldquo;You can&amp;rsquo;t usefully say that something is good unless you know: good for what?&amp;quot;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Eventually there will be discussions among people about what is good and virtuous. And these discussions are messy. Sometimes bloody. Sometimes, as we&amp;rsquo;ve seen in 2020, disagreements lead to protests, riots, burning, and looting. So how can we find virtue for human beings? There is no escaping this: a human being needs to have a function defined for him in order to know his virtues. Just as with the knife. We know a good knife is one that cuts. Therefore a sharp knife is virtuous. In the same way we need to know the function of a person. The way to know a persons function is to situate him in a community.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Principle 5:&lt;/strong&gt; A person&amp;rsquo;s virtues come from their role in their community.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;So before you accuse me of Relativism, community is &lt;em&gt;not&lt;/em&gt; the authoritative source for what is good. And, there &lt;em&gt;is&lt;/em&gt; an objective source of good. Sometimes our communities show us the objective standard. As a member of the Christian community, I know that God and His Bible is the objective source of truth. The Church community offers valuable correction and education. My purpose comes from God and The Bible and the community reinforces those truths.&lt;/p&gt;
&lt;p&gt;For other groups, speaking purely practically, their virtues come from their communities. People are raised in their cultures and their virtues are reinforced by their role in that culture. This does not mean that their virtues are objectively correct.&lt;/p&gt;
&lt;video width=&#34;100%&#34; controls poster=&#34;/clips/posters/the_code_is_more_what_you_call_guidelines.png&#34;&gt;
  &lt;source src=&#34;https://quakkels.com/clips/the_code_is_more_what_you_call_guidelines.webm&#34; type=&#34;video/webm&#34;&gt;
	Your browser does not support the video tag.
&lt;/video&gt;
&lt;p&gt;If we accept that virtues are reinforced by community, then eroding community through social distancing, stay-at-home orders, lockdowns, even facemasks, is dangerous. It has long term negative effects on our society&amp;rsquo;s virtues. Because without a strong community and role within that community people become aimless and without convictions of their virtues.&lt;/p&gt;
&lt;h2 id=&#34;fake-it-til-you-make-it&#34;&gt;Fake It &amp;lsquo;til You Make It&lt;/h2&gt;
&lt;p&gt;The oft repeated adage &amp;ldquo;Fake it until you make it&amp;rdquo; is a legitimate program for improving yourself. It&amp;rsquo;s a principle from Aristotle. He asserted that we get virtues by first &lt;a target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34; href=&#34;http://www.interlog.com/~girbe/ethics2.html&#34;&gt;practicing or exercising them&lt;/a&gt;. Sharpness is a virtue of a knife. A knife is virtuous when it is sharp. In the same way, a person performing virtues is virtuous.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Principle 6:&lt;/strong&gt; Ain&amp;rsquo;t nothing to it, but to do it.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;video width=&#34;100%&#34; controls poster=&#34;/clips/posters/aint_nothing_to_it_but_to_do_it.png&#34;&gt;
  &lt;source src=&#34;https://quakkels.com/clips/aint_nothing_to_it_but_to_do_it.webm&#34; type=&#34;video/webm&#34;&gt;
	Your browser does not support the video tag.
&lt;/video&gt;
&lt;h2 id=&#34;putting-it-into-action&#34;&gt;Putting It Into Action&lt;/h2&gt;
&lt;p&gt;These six principles are the foundation for character training going forward.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Large and difficult changes are achievable through incremental and purposeful training.&lt;/li&gt;
&lt;li&gt;Measuring progress is essential for confirming that our training is working.&lt;/li&gt;
&lt;li&gt;Training virtues trains character.&lt;/li&gt;
&lt;li&gt;Having a tool to track progress is more important than having the best tool.&lt;/li&gt;
&lt;li&gt;A person’s virtues come from their role in their community.&lt;/li&gt;
&lt;li&gt;Ain’t nothing to it, but to do it.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;From these principles we can make action items.&lt;/p&gt;
&lt;h3 id=&#34;actions&#34;&gt;Actions&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;Identify virtues to train&lt;/li&gt;
&lt;li&gt;Schedule regular times to practice&lt;/li&gt;
&lt;li&gt;Show up and practice&lt;/li&gt;
&lt;li&gt;Assess your performance&lt;/li&gt;
&lt;li&gt;Refine (can add a virtue or adjust the practice of an existing virtue)&lt;/li&gt;
&lt;li&gt;Repeat&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;These action items form a program that&amp;rsquo;s all about walking a path to making virtues second nature. When I train for physical strength, I have a program, I follow the program, and I incrementally make progress towards becoming stronger. This is something I&amp;rsquo;m able to practice on a daily basis. As I practice the program I evaluate it&amp;rsquo;s effectiveness by measuring the weights I&amp;rsquo;m able to lift and I adjust the program if it&amp;rsquo;s not working. Then, I see progress and develop a habit of being physically strong.&lt;/p&gt;
&lt;p&gt;Start small and build bigger. Begin targeting one virtue with a couple habits, then add another virtue when you have a handle on the first. Do that for long enough and you&amp;rsquo;ll find that you&amp;rsquo;ve become virtuous and have strengthened your character.&lt;/p&gt;
&lt;h2 id=&#34;further-reading&#34;&gt;Further Reading&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34; href=&#34;https://barbell-logic.com/aristotle-and-matt-reynolds/&#34;&gt;Aristotle, Matt Reynolds, and the Origins of Voluntary Hardship&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34; href=&#34;http://www.thirteenvirtues.com/&#34;&gt;ThirteenVirtues.com&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34; href=&#34;https://www.scientificamerican.com/article/a-happy-life-may-not-be-a-meaningful-life/&#34;&gt;A Happy Life May Not Be a Meaningful Life&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34; href=&#34;http://www.pursuit-of-happiness.org/history-of-happiness/aristotle/&#34;&gt;The Pursuit of Happiness, Introduction: Aristotle&amp;rsquo;s Definition of Happiness&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34; href=&#34;https://onlinegreatbooks.com/77-macintyres-after-virtue-a-study-in-moral-theory/&#34;&gt;#77- MacIntyre’s After Virtue: A Study in Moral Theory&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>Credit Card Processing with Python</title>
      <link>https://quakkels.com/posts/credit-card-processing-with-python/</link>
      <pubDate>Thu, 09 Jul 2020 00:00:00 +0000</pubDate>
      
      <guid>https://quakkels.com/posts/credit-card-processing-with-python/</guid>
      <description>&lt;p&gt;If you run a business, charity, or any organization that accepts money, a professional online payment feature on your website is a great way for your patrons to conveniently pay you.&lt;/p&gt;
&lt;p&gt;Here&amp;rsquo;s how such a payment feature can be implemented in Python with Authorize.net.&lt;/p&gt;
&lt;h2 id=&#34;create-a-sandbox-account&#34;&gt;Create a Sandbox Account&lt;/h2&gt;
&lt;p&gt;If you&amp;rsquo;re a programmer interested in building a project yourself, then you&amp;rsquo;ll need to visit Authorize.net and create a sandbox account. Your sandbox account will let you test your payment processing integration without actually charging credit cards, and without needing to set up a Merchant Account with your bank. To process real payments you will need a Merchant Account, but for development we just need sandbox access.&lt;/p&gt;
&lt;p&gt;Set up your sandbox account &lt;a href=&#34;https://developer.authorize.net/hello_world.html&#34;&gt;in Authorize.net&amp;rsquo;s Developer Center&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Once you&amp;rsquo;ve done that, you will have four pieces of information that you should save.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Sandbox account credentials (username and password)&lt;/li&gt;
&lt;li&gt;API Login ID (25 alphanumeric characters)&lt;/li&gt;
&lt;li&gt;Transaction Key (16 alphanumeric characters)&lt;/li&gt;
&lt;li&gt;Key&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The important elements to note are the API Login ID and the Transaction Key. These two pieces of information are used to authenticate your calls into Authorize.net&amp;rsquo;s API to process payments. Keep this information secret. Don&amp;rsquo;t share it with anyone. Don&amp;rsquo;t commit it to Git.&lt;/p&gt;
&lt;h2 id=&#34;use-the-python-sdk&#34;&gt;Use the Python SDK&lt;/h2&gt;
&lt;p&gt;Create a new directory for the python project.&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;$ mkdir authnetdemo
$ cd authnetdemo
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;I&amp;rsquo;m not going to explain Python virtual environments in this article, but feel free to use one for this project if you like.&lt;/p&gt;
&lt;p&gt;Now install the Authorize.net SDK.&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;$ python3.7 -m pip install authorizenet
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Create file called &amp;ldquo;settings.py&amp;rdquo; for the module that will be responsible for managing the Authorize.net secrets. For now I&amp;rsquo;m going to just place the real values directly in the file, but I don&amp;rsquo;t recommend that for production code, nor for projects that will be committed to source control like Git.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;settings.py&lt;/strong&gt;&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;def get_transaction_id():
    return &amp;quot;YOUR_TRANSACTION_ID&amp;quot;

def get_api_login_id():
    return &amp;quot;YOUR_API_LOGIN_ID&amp;quot;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;These values could be retrieved from a database or environment variables. Or they could even be retrieved from a configuration file in xml, json, or your format of choice. I&amp;rsquo;m not going to cover those techniques in this article, but they are all good ways to keep secrets out of the application&amp;rsquo;s source code.&lt;/p&gt;
&lt;p&gt;Create a &amp;ldquo;models.py&amp;rdquo; file to hold a couple classes that we&amp;rsquo;ll use.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;models.py&lt;/strong&gt;&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;class CreditCard:
    number = None
    expiration_date = None
    code = None

class TransactionResponse:
    is_success = False
    messages = []
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;These classes are abstractions for models from the SDK. This helps future SDK upgrades and changes. The &lt;code&gt;CreditCard&lt;/code&gt; class models bare bones card information. The &lt;code&gt;TransactionResponse&lt;/code&gt; class models the response from the Authorize.net API call.&lt;/p&gt;
&lt;p&gt;Other potential things we could add include things like billing address, name on card, and order information.&lt;/p&gt;
&lt;p&gt;Create a file called &amp;ldquo;paymentprocessing.py&amp;rdquo; for the module handling credit card tasks.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;paymentprocessing.py&lt;/strong&gt;&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;from authorizenet import apicontractsv1
from authorizenet.apicontrollers import createTransactionController
from decimal import Decimal
import settings
import models

def charge_credit_card(card, amount):
    merchant_auth = apicontractsv1.merchantAuthenticationType()
    merchant_auth.name = settings.get_api_login_id()
    merchant_auth.transactionKey = settings.get_transaction_id()
    
    credit_card = apicontractsv1.creditCardType()
    credit_card.cardNumber = card.number
    credit_card.expirationDate = card.expiration_date
    credit_card.cardCode = card.code
    
    payment = apicontractsv1.paymentType()
    payment.creditCard = credit_card
    
    transaction_request = apicontractsv1.transactionRequestType()
    transaction_request.transactionType =&amp;quot;authCaptureTransaction&amp;quot;
    transaction_request.amount = Decimal(amount)
    transaction_request.payment = payment
    
    request = apicontractsv1.createTransactionRequest()
    request.merchantAuthentication = merchant_auth
    request.refId =&amp;quot;MerchantID-0001&amp;quot;
    request.transactionRequest = transaction_request

    transaction_controller = createTransactionController(request)
    transaction_controller.execute()
    
    api_response = transaction_controller.getresponse()
    response = response_mapper(api_response)
    return response

def response_mapper(api_response):
    response = models.TransactionResponse()

    if api_response is None:
        response.messages.append(&amp;quot;No response from api&amp;quot;)
        return response
    
    if api_response.messages.resultCode==&amp;quot;Ok&amp;quot;:
        response.is_success = hasattr(api_response.transactionResponse, &#39;messages&#39;)
        if response.is_success:
            response.messages.append(f&amp;quot;Successfully created transaction with Transaction ID: {api_response.transactionResponse.transId}&amp;quot;)
            response.messages.append(f&amp;quot;Transaction Response Code: {api_response.transactionResponse.responseCode}&amp;quot;)
            response.messages.append(f&amp;quot;Message Code: {api_response.transactionResponse.messages.message[0].code}&amp;quot;)
            response.messages.append(f&amp;quot;Description: {api_response.transactionResponse.messages.message[0].description}&amp;quot;)
        else:
            if hasattr(api_response.transactionResponse, &#39;errors&#39;) is True:
                response.messages.append(f&amp;quot;Error Code:  {api_response.transactionResponse.errors.error[0].errorCode}&amp;quot;)
                response.messages.append(f&amp;quot;Error message: {api_response.transactionResponse.errors.error[0].errorText}&amp;quot;)
        return response

    response.is_success = False
    response.messages.append(f&amp;quot;response code: {api_response.messages.resultCode}&amp;quot;)
    return response
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;There are two functions; &lt;code&gt;charge_credit_card&lt;/code&gt; and &lt;code&gt;response_mapper&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;The &lt;code&gt;response_mapper&lt;/code&gt; is a function to abstract the SDK&amp;rsquo;s response model away from the rest of the applicaiton. The idea there is if that response model changes, then we only need to update this module and the mapper, and not have to make changes elsewhere in the application.&lt;/p&gt;
&lt;p&gt;The &lt;code&gt;charge_credit_card&lt;/code&gt; function is where the actual money changes hands. First the merchant is identified. Then the card information is set.&lt;/p&gt;
&lt;p&gt;Create an &lt;code&gt;app.py&lt;/code&gt; file.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;app.py&lt;/strong&gt;&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;import models
import paymentprocessing

amount = &amp;quot;19.99&amp;quot;

card = models.CreditCard()
card.number = &amp;quot;4007000000027&amp;quot; # visa test number
card.expiration_date = &amp;quot;2050-01&amp;quot; # any date in the future
card.code = &amp;quot;123&amp;quot; # any 3 digit code

response = paymentprocessing.charge_credit_card(card, amount)

print(response.is_success)
print(response.messages)
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;This is the entry point for our Python script. The amount to charge is specified. The credit card details are specified. Then we attempt to charge the card and print the response.&lt;/p&gt;
&lt;p&gt;Run &amp;ldquo;app.py&amp;rdquo; without forgeting to add your API Login ID and Transaction ID.&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;$ python3.7 app.py 
True
[&#39;Successfully created transaction with Transaction ID: 40051695558&#39;, &#39;Transaction Response Code: 1&#39;, &#39;Message Code: 1&#39;, &#39;Description: This transaction has been approved.&#39;]
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;For more details about Authorize.net&amp;rsquo;s testability, take a look at their &lt;a href=&#34;https://developer.authorize.net/hello_world/testing_guide.html&#34; target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34;&gt;Testing Guide&lt;/a&gt;.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Note: If you get a Transaction ID of 0, then you may need to sign in to your sandbox account and switch the sandbox account settings from &amp;ldquo;Testing&amp;rdquo; to &amp;ldquo;Live.&amp;rdquo; It&amp;rsquo;s still a testing account and cards wont actually be charged, but this setting replicates the behavior of non-sandbox accounts. Those non-sandbox accounts can be placed in testing mode too.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;security&#34;&gt;Security&lt;/h2&gt;
&lt;p&gt;I can&amp;rsquo;t discuss processing credit cards without addressing security concerns. PCI Data Security Standard (PCI DSS) is a standardized checklist for making sure merchants and programmers are securely handling credit card information. Here&amp;rsquo;s an overview of PCI DSS taken from the PCI Security Standards Council&amp;rsquo;s &lt;a href=&#34;https://www.pcisecuritystandards.org/pdfs/pci_ssc_quick_guide.pdf&#34; target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34;&gt;quick reference guide&lt;/a&gt;.&lt;/p&gt;
&lt;h3 id=&#34;pci-dss-requirements&#34;&gt;PCI DSS Requirements&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;Build and Maintain a Secure Network&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Install and maintain a firewall configuration to protect cardholder
data&lt;/li&gt;
&lt;li&gt;Do not use vendor-supplied defaults for system passwords and
other security parameters&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Protect Cardholder Data&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Protect stored cardholder data&lt;/li&gt;
&lt;li&gt;Encrypt transmission of cardholder data across open, public
networks&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Maintain a Vulnerability Management Program&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Use and regularly update anti-virus software or programs&lt;/li&gt;
&lt;li&gt;Develop and maintain secure systems and applications&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Implement Strong Access Control Measures&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Restrict access to cardholder data by business need-to-know&lt;/li&gt;
&lt;li&gt;Assign a unique ID to each person with computer access&lt;/li&gt;
&lt;li&gt;Restrict physical access to cardholder data&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Regularly Monitor and Test Networks&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Track and monitor all access to network resources and cardholder
data&lt;/li&gt;
&lt;li&gt;Regularly test security systems and processes&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Maintain an Information Security Policy&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Maintain a policy that addresses information security for
employees and contractors&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Read the quick reference guide for more details on what each of these points mean.&lt;/p&gt;
&lt;h2 id=&#34;next-steps&#34;&gt;Next Steps&lt;/h2&gt;
&lt;p&gt;What we&amp;rsquo;ve accomplished in this tutorial is significant. We are able to process credit card payments via Authorize.net&amp;rsquo;s API. However, the code presented here can certainly be improved with some additions:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Build a web UI&lt;/li&gt;
&lt;li&gt;Secure with SSL encryption&lt;/li&gt;
&lt;li&gt;Add logging&lt;/li&gt;
&lt;li&gt;Record transations in your own database&lt;/li&gt;
&lt;li&gt;Handle secrets securely&lt;/li&gt;
&lt;li&gt;Open an actual Merchant Account with a bank and configure it with Authorize.net to accept real payments&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;This isn&amp;rsquo;t an exhaustive list, but it is a good start. Though with every new feature, be sure to check PCI DSS recommendations to make sure you&amp;rsquo;re compliant. For example, if you decide to transfer credit card information over a network, you have to make sure it&amp;rsquo;s secured and encrypted. If you want to store credit card information on your own servers, you have to make sure those servers and the information is secured according to PCI standards.&lt;/p&gt;
&lt;h2 id=&#34;further-reading&#34;&gt;Further Reading&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://developer.authorize.net/api/reference/features/credit_card_tutorial.html&#34; target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34;&gt;Authorize.net Credit Card Tutorial&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://developer.authorize.net/hello_world/testing_guide.html&#34; target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34;&gt;Authorize.net Testing Guid&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/AuthorizeNet/sdk-python Python SDK&#34; target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34;&gt;Authorize.net Python SDK&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/AuthorizeNet/sample-code-python&#34; target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34;&gt;Authorize.net sample code in Python&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://community.developer.authorize.net/&#34; target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34;&gt;Authorize.net Developer Community&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.pcisecuritystandards.org/pdfs/pci_ssc_quick_guide.pdf&#34; target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34;&gt;PCI DSS Quick Reference Guide&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>Building Blocks of Function Components in React</title>
      <link>https://quakkels.com/posts/building-blocks-of-function-components-in-react/</link>
      <pubDate>Mon, 06 Jul 2020 00:00:00 +0000</pubDate>
      
      <guid>https://quakkels.com/posts/building-blocks-of-function-components-in-react/</guid>
      <description>&lt;p&gt;Class based components aren&amp;rsquo;t the only way to build rich user interfaces in React. Here are some building blocks that can be used to build the same dynamic experiences using Function Components.&lt;/p&gt;
&lt;h2 id=&#34;key-javascript-concepts&#34;&gt;Key JavaScript Concepts&lt;/h2&gt;
&lt;h3 id=&#34;javascript-arrow-functions&#34;&gt;JavaScript Arrow Functions&lt;/h3&gt;
&lt;p&gt;Since React apps use a build system to generate the runtime code, we&amp;rsquo;re able to take advantage of ES6 syntax via transpilers without needing to worry about browser support. This gives us access to Arrow Functions syntax which are lambda functions in JavaScript.&lt;/p&gt;
&lt;p&gt;Before ES6 was available JavaScript had anonymous functions.&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;var anonFunc = function (name) { return &amp;quot;Hello &amp;quot; + name; }
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Since ES6 is available we can rewrite the anonymous function above as an Arrow function like this:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;const arrowFunc = (name) =&amp;gt; { return &amp;quot;Hello &amp;quot; + name; }
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;First thing that&amp;rsquo;s different is you&amp;rsquo;ll notice the &lt;code&gt;const&lt;/code&gt; keyword instead of &lt;code&gt;var&lt;/code&gt;. The &lt;code&gt;const&lt;/code&gt; keyword defines this as a constant value and doesn&amp;rsquo;t allow &lt;code&gt;arrowFunc&lt;/code&gt; to get redefined elsewhere. It&amp;rsquo;s available to us in ES6 and it&amp;rsquo;s usually more appropriate for declaring functions.&lt;/p&gt;
&lt;p&gt;Next, notice the absence of the &lt;code&gt;function&lt;/code&gt; keyword, and instead we see &lt;code&gt;=&amp;gt;&lt;/code&gt; which is the &amp;lsquo;arrow&amp;rsquo; that indicates an Arrow function. (This should be very familiar to C# programmers because their lambda syntax is very similar.) The function parameters are listed inside paranthesis on the left of the arrow, and the function body is on the right.&lt;/p&gt;
&lt;p&gt;If there&amp;rsquo;s only one parameter expected, then Arrow function definitions can skip the paranthesis.&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;const arrowFunc = name =&amp;gt; { return &amp;quot;Hello &amp;quot; + name; }
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Another convenient feature of Arrow functions is the implicit return that occurs if we remove the curly braces.&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;const arrowFunc = name =&amp;gt; &amp;quot;Hello &amp;quot; + name
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;The result is syntax that can be fairly terse and clean, but if you&amp;rsquo;re returning an object literal then you have to add paranthesis around it to ensure it&amp;rsquo;s interpretted as a return value correctly.&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;// doesn&#39;t work
const objLiteral = () =&amp;gt; {one: 1}

// returns the object
const objLiteral = () =&amp;gt; ({one: 1})
&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&#34;closures&#34;&gt;Closures&lt;/h3&gt;
&lt;p&gt;JavaScript has had closures since the beginning. It&amp;rsquo;s one of the most powerful aspects of the language.&lt;/p&gt;
&lt;p&gt;Essentially, it just means that functions have access to their surrounding scope (i.e. lexical environment.)&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;let canSeeMe = true;
const run = () =&amp;gt; {
  let canSee = true;
  const displayCanSee = () =&amp;gt; {
    console.log(canSee);
    console.log(&amp;quot;and&amp;quot;)
    console.log(canSeeMe);
  }
  displayCanSee();
}
run();
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;In the example above the &lt;code&gt;displayCanSee&lt;/code&gt; function can see the &lt;code&gt;canSee&lt;/code&gt; and &lt;code&gt;canSeeMe&lt;/code&gt; variables even though they&amp;rsquo;re outside of the scope of the display function.&lt;/p&gt;
&lt;h3 id=&#34;javascript-object-destructuring&#34;&gt;JavaScript Object Destructuring&lt;/h3&gt;
&lt;p&gt;This is another JavaScript feature introduced in ES6. The assignment aspect is a useful shortcut for creating named variables using values from objects.&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;const person = {
  first: &#39;George&#39;,
  last: &#39;Washington&#39;,
};

const {first, last} = person; // destructuring 

console.log(first); // prints &#39;George&#39;
console.log(last); // prints &#39;Washington&#39;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Notice the curly braces on the left side if the assignment operator, &lt;code&gt;=&lt;/code&gt;. When you see that, recognize it&amp;rsquo;s using object destructuring to assign property&amp;rsquo;s values to individual variables.&lt;/p&gt;
&lt;h2 id=&#34;key-react-concepts&#34;&gt;Key React Concepts&lt;/h2&gt;
&lt;p&gt;Programming React components without the class based syntax has been possible for some time. But such function based components were limited from being able to use state. That is, they were until React version 16.8 when a new API was introduced. React hooks allow a function component to be stateful.&lt;/p&gt;
&lt;p&gt;Here are examples of a function component using the JavaScript features we&amp;rsquo;ve already examined.&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;// traditional function declaration
function Hello(props) {
  return &amp;lt;h1&amp;gt;Hello {props.name}&amp;lt;/h1&amp;gt;
}

// arrow function
const Hello = props =&amp;gt; {
    return &amp;lt;h1&amp;gt;Hello {props.name}&amp;lt;/h1&amp;gt;
}

// implicit return
const Hello = props =&amp;gt; &amp;lt;h1&amp;gt;Hello {props.name}&amp;lt;/h1&amp;gt;

// object destructuring
const Hello = {name} =&amp;gt; &amp;lt;h1&amp;gt;Hello {name}&amp;lt;/h1&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Now let&amp;rsquo;s add some state.&lt;/p&gt;
&lt;h3 id=&#34;the-usestate-hook&#34;&gt;The &lt;code&gt;useState&lt;/code&gt; Hook&lt;/h3&gt;
&lt;p&gt;State is for values that are displayed to the user which are subject to change. In the coming example we&amp;rsquo;ll be showing a default message to the user and the user will be able to change the message to a word or phrase of their choosing.&lt;/p&gt;
&lt;p&gt;The &lt;code&gt;useState&lt;/code&gt; hook can be imported like this.&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;import React, { useState } from &#39;react&#39;;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Its usage looks like this.&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;const [msg, setMsg] = useState(&#39;Hello world&#39;);
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Let&amp;rsquo;s break this down. First, this line is using array destructuring (same principles as object destructuring covered above) to handle the return value from the &lt;code&gt;useState&lt;/code&gt; function call. A default value of &amp;ldquo;Hello world&amp;rdquo; is passed in, and we get two values out. &lt;code&gt;msg&lt;/code&gt; which is set to &amp;ldquo;Hello world&amp;rdquo;, and &lt;code&gt;setMsg&lt;/code&gt; which is a function that we can use to update the value of &lt;code&gt;msg&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;React beginners might wonder why they need the &lt;code&gt;setMsg&lt;/code&gt; function. They could certainly just use an assignment operator to update &lt;code&gt;msg&lt;/code&gt;&amp;rsquo;s value, but the trick is getting the new value displayed to the user. The new value won&amp;rsquo;t be updated in React unless we use &lt;code&gt;setMsg&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Now, here&amp;rsquo;s how &lt;code&gt;useState&lt;/code&gt; can be used to dynamically update a function component.&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;const Hello = () =&amp;gt; {
  const [msg, setMsg] = useState(&#39;Hello world&#39;);

  return (
    &amp;lt;&amp;gt;
      &amp;lt;h1&amp;gt;{msg}&amp;lt;/h1&amp;gt;
      &amp;lt;input 
        type=&amp;quot;text&amp;quot; 
        onChange={e =&amp;gt; setMsg(e.target.value)} /&amp;gt;
    &amp;lt;/&amp;gt;
  );
}
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Now we&amp;rsquo;re using JavaScript closure feature. Notice the &lt;code&gt;onChange&lt;/code&gt; event of the &lt;code&gt;input&lt;/code&gt; is being bound to another arrow function. That arrow function, via closure, has access to the &lt;code&gt;setMsg&lt;/code&gt; function we set in the lexical scope. When the user changes that input then the default value of &amp;ldquo;Hello world&amp;rdquo; will immediately be updated and displayed as he types.&lt;/p&gt;
&lt;p&gt;Here&amp;rsquo;s a &lt;a href=&#34;http://plnkr.co/edit/BOG6kpClZIXuqf0k?open=Hello.js&amp;preview&#34; target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34;&gt;working demo&lt;/a&gt;.&lt;/p&gt;
&lt;h3 id=&#34;the-useeffect-hook&#34;&gt;The &lt;code&gt;useEffect&lt;/code&gt; Hook&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;useEffect&lt;/code&gt; is for performing side effects whenever a component changes. It&amp;rsquo;s similar to the class based approach that uses &lt;code&gt;componentDidMount&lt;/code&gt;, &lt;code&gt;componentDidUpdate&lt;/code&gt;, and &lt;code&gt;componentWillUnmount&lt;/code&gt; methods. It replaces all three.&lt;/p&gt;
&lt;p&gt;One of the most common usages of &lt;code&gt;useEffect&lt;/code&gt; is for loading data via API calls.&lt;/p&gt;
&lt;p&gt;The &lt;code&gt;useEffect&lt;/code&gt; hook can be imported by adding it to our previous import statement.&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;import React, { useState, useEffect } from &#39;react&#39;;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Here&amp;rsquo;s a very simple useage to illustrate a side effect, though not a very useful one.&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;const Hello = ({ name }) =&amp;gt; {
  
  const [displayName, setDisplayName] = useState(name);

  useEffect(() =&amp;gt; {
    setDisplayName(&#39;George&#39;) // side effect
  });
  
  return &amp;lt;&amp;gt;
    &amp;lt;h1&amp;gt;Hello {displayName}!&amp;lt;/h1&amp;gt; {/* Hello George */}
  &amp;lt;/&amp;gt;
};
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;The previous component receives a &lt;code&gt;name&lt;/code&gt; property on the &lt;code&gt;props&lt;/code&gt; object and assigns it to as the default value of &lt;code&gt;displayName&lt;/code&gt; which is what gets shown to the user. But, since we&amp;rsquo;ve create a side effect that always sets &lt;code&gt;displayName&lt;/code&gt; to &amp;ldquo;George&amp;rdquo;, the user will never see any name other than &amp;ldquo;George&amp;rdquo;.&lt;/p&gt;
&lt;p&gt;Let&amp;rsquo;s move on to a more useful example. Side effects are often used to take data from an API call and display it to the user.&lt;/p&gt;
&lt;p&gt;Here&amp;rsquo;s some quick code for calling Bible API.&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;const api = {
  getPassage: search =&amp;gt; {
    return axios.get(`http://bible-api.com/${search}`).then(r =&amp;gt; r.data);
  }
}
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Our function component will have two variables in state.&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;  const [passage, setPassage] = useState(&#39;&#39;);
  const [search, setSearch] = useState(&#39;Ephesians 2:8-10&#39;);
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Then, we have a very simple side effect that calls the API.&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;  useEffect(() =&amp;gt; {
    api.getPassage(search).then(d =&amp;gt; setPassage(d.text));
  });
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;The &lt;code&gt;useEffect&lt;/code&gt; function lets React know about our arrow function that contains the side effect. So whenever this component mounts or is updated, the side effect code will execute.&lt;/p&gt;
&lt;p&gt;Here&amp;rsquo;s the complete code.&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;import React, { useState, useEffect } from &#39;react&#39;;
import axios from &#39;axios&#39;;

const api = {
  getPassage: search =&amp;gt; {
    return axios.get(`http://bible-api.com/${search}`).then(r =&amp;gt; r.data);
  }
}

const SearchBar = ({defaultSearch, onClick}) =&amp;gt; {
  const [inputSearch, setInputSearch] = useState(defaultSearch);
  
  return (
    &amp;lt;&amp;gt;
      &amp;lt;input 
        type=&#39;text&#39; 
        value={inputSearch} 
        onChange={e =&amp;gt; setInputSearch(e.target.value)} /&amp;gt;
      &amp;lt;button 
        onClick={() =&amp;gt; onClick(inputSearch)}&amp;gt;
        Search
      &amp;lt;/button&amp;gt;
    &amp;lt;/&amp;gt;
  )
};

const Hello = () =&amp;gt; {
  const [passage, setPassage] = useState(&#39;&#39;);
  const [search, setSearch] = useState(&#39;Ephesians 2:8-10&#39;);

  useEffect(() =&amp;gt; {
    api.getPassage(search).then(d =&amp;gt; setPassage(d.text));
  });

  return (
    &amp;lt;&amp;gt;
      &amp;lt;p&amp;gt;&amp;quot;{passage}&amp;quot;&amp;lt;/p&amp;gt;
      &amp;lt;p style={{textAlign:&#39;right&#39;}}&amp;gt;- {search}&amp;lt;/p&amp;gt;
      &amp;lt;SearchBar
        defaultSearch={search} 
        onClick={(value) =&amp;gt; setSearch(value)} /&amp;gt;
    &amp;lt;/&amp;gt;
  );
};

export default Hello;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;And, &lt;a href=&#34;http://plnkr.co/edit/AyYJppvIxL7O9X5Z?open=Hello.js&amp;preview&#34; target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34;&gt;here&amp;rsquo;s the &lt;code&gt;useEffect&lt;/code&gt; example&lt;/a&gt; in a sandbox.&lt;/p&gt;
&lt;p&gt;One thing to notice in the code example; the search bar is separated into it&amp;rsquo;s own function component. The reason it&amp;rsquo;s separate from the &lt;code&gt;Hello&lt;/code&gt; component is because every time a user presses a key in that &lt;code&gt;input&lt;/code&gt; box, then the component is updated. If the &lt;code&gt;input&lt;/code&gt; were inside the &lt;code&gt;Hello&lt;/code&gt; component, then every keypress would trigger a new call out to the API. We don&amp;rsquo;t want that. We avoid it by putting the &lt;code&gt;input&lt;/code&gt; and the corresponding &lt;code&gt;button&lt;/code&gt; elements into a &lt;code&gt;SearchBar&lt;/code&gt; component of their own.&lt;/p&gt;
&lt;h2 id=&#34;wrapping-up&#34;&gt;Wrapping Up&lt;/h2&gt;
&lt;p&gt;We can see how these features build on each other to get rich function components in React. Closures and arrow functions combined with object/array destructuring are used in concert with React Hooks to deliver a full user experience without needing any of the class overhead found with traditional class based components. There are no plans to remove tradition class based components, but it&amp;rsquo;s still good to explore and understand function components because you might prefer the style, you might come across function components that you need to support, or both.&lt;/p&gt;
&lt;h2 id=&#34;further-reading&#34;&gt;Further Reading&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://www.vinta.com.br/blog/2015/javascript-lambda-and-arrow-functions/&#34; target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34;&gt;JavaScript&amp;rsquo;s Lambda and Arrow Functions&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Closures&#34; target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34;&gt;MDN: Closures&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://wesbos.com/destructuring-objects&#34; target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34;&gt;A Dead Simple intro to Destructuring JavaScript Objects&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Destructuring_assignment&#34; target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34;&gt;MDN: Destructuring Assignment&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://reactjs.org/docs/hooks-intro.html&#34; target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34;&gt;Introducing Hooks&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://reactjs.org/docs/hooks-state.html&#34; target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34;&gt;Using the State Hook&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://reactjs.org/docs/hooks-effect.html&#34; target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34;&gt;Using the Effect Hook&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://bible-api.com/&#34; target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34;&gt;Bible API&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>Program Review: Mike Westerling&#39;s Basic Strongman</title>
      <link>https://quakkels.com/posts/westerling-basic-strongman-program-review/</link>
      <pubDate>Sat, 18 Apr 2020 00:00:00 +0000</pubDate>
      
      <guid>https://quakkels.com/posts/westerling-basic-strongman-program-review/</guid>
      <description>&lt;p&gt;This is my review of Basic Strongman. Basic Strongman is a &lt;a href=&#34;http://www.mikewesterling.com/strongman-ebook.html&#34;&gt;program by Mike Westerling&lt;/a&gt; that I spent the last 12 weeks running. It&amp;rsquo;s a 3-day-a-week program for general strength and the sport of Strongman.&lt;/p&gt;
&lt;h2 id=&#34;my-lifting-history&#34;&gt;My Lifting History&lt;/h2&gt;
&lt;p&gt;First a little about me to give you some context for this review. I&amp;rsquo;m 35 and not particularly athletic. Four years ago I started taking strength training seriously. I had gone to commercial gyms off and on for a couple years before building a home gym. The first true strength program I tried was Stronglifts5x5. That&amp;rsquo;s when I realized how much fun it was to train for strength. It became my fitness priority. I cycled through 5/3/1, 3x5, and 5x5 programs sticking primarily to Wendler and Rippetoe ideologies. Over that time I had successes and some setbacks. I had three fairly significant breaks from lifting. They were when my son was born, when I needed a surgery, and when I had pretty bad hip pain that kept me from squatting and deadlifting normally until I figured out how to get rid of the pain with bands and hip stability movements. I competed in Strongman once as a Novice Class competitor, and I intend to compete again.&lt;/p&gt;
&lt;p&gt;In January of this year I found a Strongman competition scheduled for April 11th. I decided to compete in it. Based on positive opinions found on r/Strongman I settled on using Basic Strongman from Mike Westerling&amp;rsquo;s e-book, Built By Mike, to prepare for the competition. Ultimately I didn&amp;rsquo;t compete due to the pandemic, but I still had success on the program.&lt;/p&gt;
&lt;h2 id=&#34;basic-strongmans-biggest-differences&#34;&gt;Basic Strongman&amp;rsquo;s Biggest Differences&lt;/h2&gt;
&lt;p&gt;Compared to all the other programs I&amp;rsquo;ve tried, Basic Strongman easily requires the most specialized equipment. A yoke, farmers handles, log, axle, tire, and stones aren&amp;rsquo;t always easy to find. Then there&amp;rsquo;s also the more ubiquitous barbell, rack, bench, and deadlift blocks. The variety is a strength of this program because it&amp;rsquo;s designed to get you ready for just about anything a Strongman contest can throw your way.&lt;/p&gt;
&lt;p&gt;Basic Strongman is definitely specific to the sport of Strongman. It takes into consideration the unique training stresses a competitor experiences. It&amp;rsquo;s way more than just a powerlifting program with an events day stapled to the end of the week. It identifies where there&amp;rsquo;s overlap between movements and it accounts for them so that you don&amp;rsquo;t get run down.&lt;/p&gt;
&lt;p&gt;The biggest way it keeps lifters fresh is by structuring everything in a bi-weekly schedule. One week you&amp;rsquo;ll be doing a back squat and deadlifting from the floor. The next week you&amp;rsquo;ll be front squatting and deadlifting from blocks. One week you&amp;rsquo;ll be training farmers walk and the next you&amp;rsquo;ll be training yoke. This structure is sustainable and I found this doesn&amp;rsquo;t just keep you fresh physically, it also keeps the program from getting boring.&lt;/p&gt;
&lt;p&gt;The first 6 weeks of the program also make great use of paused movement variations. I hadn&amp;rsquo;t ever trained paused squat or paused bench, but I found they really helped my stability and strength in the bottom of the movement. When the second half of the program started I was eager to see what I could lift without pauses.&lt;/p&gt;
&lt;p&gt;Finally, every single day is a max effort day. You&amp;rsquo;ll be working up over several sets to five rep maxes, three, two, and single maximum lifts. This seemed to go against the advice I&amp;rsquo;ve seen sprinkled around online, which has the general sentiment: &amp;ldquo;don&amp;rsquo;t constantly test your personal records.&amp;rdquo; But, on this program that&amp;rsquo;s exactly what you&amp;rsquo;re trying to do. And it&amp;rsquo;s a ton of fun. I frequently set multiple PRs for reps in a single day. And I kept beating my PRs as the program went on.&lt;/p&gt;
&lt;h2 id=&#34;modifications&#34;&gt;Modifications&lt;/h2&gt;
&lt;p&gt;I did make some modifications to the program. I substituted a few things because of equipment limitations or competition considerations.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Deficit deadlifts instead of deadlifts.&lt;/li&gt;
&lt;li&gt;Sandbags for loading instead of stones.&lt;/li&gt;
&lt;li&gt;I don&amp;rsquo;t have a tire, so I eventually substituted sled pushes for tire flips.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;I also did not pull the deficit deadlifts using touch&amp;rsquo;n&amp;rsquo;go for the first six weeks. I was using mostly bumper plates and I was brand new to pulling from a deficit. With my inexperience and the bouncing bar I was worried about hurting myself. So I didn&amp;rsquo;t do it.&lt;/p&gt;
&lt;h2 id=&#34;blunders&#34;&gt;Blunders&lt;/h2&gt;
&lt;p&gt;I made other modifications that I consider blunders. I didn&amp;rsquo;t follow day three very well at all. I missed some days and I decided I didn&amp;rsquo;t want to train yoke, and I was lazy and didn&amp;rsquo;t make the effort to figure out my sled setup. By the end I really regretted these decisions and I eventually did train yoke and sled pushes, but I had missed out on a lot of progress if I had just done those things from the beginning.&lt;/p&gt;
&lt;p&gt;It also took a little while to get the hang of picking my weights for each incrementally heavier set. Eventually I got the feel of it. Mike recommends favoring smaller PRs rather than ambitious ones.&lt;/p&gt;
&lt;p&gt;Despite these blunders I still made progress.&lt;/p&gt;
&lt;h2 id=&#34;results&#34;&gt;Results&lt;/h2&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;/th&gt;
&lt;th&gt;Previous&lt;/th&gt;
&lt;th&gt;Post&lt;/th&gt;
&lt;th&gt;Change&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Body Weight&lt;/td&gt;
&lt;td&gt;310&lt;/td&gt;
&lt;td&gt;310&lt;/td&gt;
&lt;td&gt;0&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Squat&lt;/td&gt;
&lt;td&gt;410&lt;/td&gt;
&lt;td&gt;420&lt;/td&gt;
&lt;td&gt;10&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Front Squat *&lt;/td&gt;
&lt;td&gt;310&lt;/td&gt;
&lt;td&gt;325&lt;/td&gt;
&lt;td&gt;15&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Log Clean &amp;amp; Press *&lt;/td&gt;
&lt;td&gt;200&lt;/td&gt;
&lt;td&gt;210&lt;/td&gt;
&lt;td&gt;10&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Axle Clean &amp;amp; Press **&lt;/td&gt;
&lt;td&gt;?&lt;/td&gt;
&lt;td&gt;220&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Deficit Deadlift **&lt;/td&gt;
&lt;td&gt;?&lt;/td&gt;
&lt;td&gt;425&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;18&amp;quot; Deadlift&lt;/td&gt;
&lt;td&gt;495&lt;/td&gt;
&lt;td&gt;500&lt;/td&gt;
&lt;td&gt;5&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Farmers *&lt;/td&gt;
&lt;td&gt;190&lt;/td&gt;
&lt;td&gt;220&lt;/td&gt;
&lt;td&gt;30&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Yoke *&lt;/td&gt;
&lt;td&gt;408&lt;/td&gt;
&lt;td&gt;515&lt;/td&gt;
&lt;td&gt;107&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Sandbag Load&lt;/td&gt;
&lt;td&gt;206&lt;/td&gt;
&lt;td&gt;235&lt;/td&gt;
&lt;td&gt;29&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;* Hadn&amp;rsquo;t trained the lift in over six months before starting this program.&lt;br&gt;
** Didn&amp;rsquo;t have a max previous to running this program.&lt;/p&gt;
&lt;p&gt;Even though I substituted deadlifting from the floor with a deficit deadlift, I still got a +10 pound &lt;a href=&#34;https://quakkels.com/training_log/0069/&#34;&gt;deadlift PR&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;To see each workout I did you can look at my &lt;a href=&#34;https://quakkels.com/training_log/&#34;&gt;training log&lt;/a&gt;. I started &lt;a href=&#34;https://quakkels.com/training_log/0034/&#34;&gt;January 20th&lt;/a&gt; and ended &lt;a href=&#34;https://quakkels.com/training_log/0067/&#34;&gt;April 13th&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id=&#34;surprises&#34;&gt;Surprises&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;I was able to make progress without gaining weight.&lt;/li&gt;
&lt;li&gt;The bi-weekly structure got me stronger.&lt;br&gt;
Until now I avoided this program because I thought for sure it wouldn&amp;rsquo;t work. My past experience indicated that to make progress I had to perform each of the big four lifts at least twice a week and eat protein like it was my job. Performing a lift only &lt;strong&gt;once&lt;/strong&gt; on a &lt;strong&gt;bi-weekly&lt;/strong&gt; schedule sounded crazy, but it worked very well.&lt;/li&gt;
&lt;li&gt;No &amp;lsquo;run down&amp;rsquo; feeling at the end of 12 weeks.&lt;/li&gt;
&lt;li&gt;Constantly trying to get PRs seems to work.&lt;/li&gt;
&lt;li&gt;My deadlift improved even though I didn&amp;rsquo;t train a regular deadlift from the floor.&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;summary&#34;&gt;Summary&lt;/h2&gt;
&lt;p&gt;This program was a ton of fun. I got stronger. I did not feel rundown at the end. This program likely could be run repeatedly for a long time. Probably not a good program for beginners because you pick your own weight jumps, you need to know how to strain, and you need to either have access to a fair amount of equipment or know how to make sensible substitutions. Overall, this was great and I recommend following the program as Mike Westerling wrote it.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>GitHub Pages and Quakkels.com</title>
      <link>https://quakkels.com/posts/quakkels-dot-com-now-with-https/</link>
      <pubDate>Wed, 12 Feb 2020 00:00:00 +0000</pubDate>
      
      <guid>https://quakkels.com/posts/quakkels-dot-com-now-with-https/</guid>
      <description>&lt;p&gt;So I must&amp;rsquo;ve been under a rock for the last 21 months because it wasn&amp;rsquo;t until this week that I learned that GitHub Pages now supports &lt;a href=&#34;https://github.blog/2018-05-01-github-pages-custom-domains-https/&#34;&gt;SSL certificates for custom domains&lt;/a&gt;. They&amp;rsquo;ve had SSL support since 2016 for sites using {user}.github.io domains. But it has also been available for custom domain sites (like this one) since May of 2018.&lt;/p&gt;
&lt;p&gt;Before the feature was upgraded there were hacks to get around the custom domain limitation. Back then, when I was investigating, I decided it wasn&amp;rsquo;t worth the complexity and effort. Quakkels.com is just a personal blog built with a static site generator using a free hosting service. I didn&amp;rsquo;t see the need to spend too much effort on a hacky solution for adding SSL to it. SSL was a &amp;ldquo;nice to have&amp;rdquo; feature, but not critical to me.&lt;/p&gt;
&lt;p&gt;When I decided to look into it again, I was surprised that custom domain SSL&amp;rsquo;s were supported. Pleased as I was to learn this I was also slightly dismayed that I was ignorant for so long about the new GitHub feature.&lt;/p&gt;
&lt;p&gt;Updating was simple enough. Years ago GitHub Pages had me create A Records pointing to a couple of their IP addresses. That method of setting up the domain is not compatible with the SSL feature they provide now. So I simply had to remove those A Records, and and replace them with a CNAME pointing to quakkels.github.io.&lt;/p&gt;
&lt;p&gt;I monitored the propogation of those setting with &lt;code&gt;dig&lt;/code&gt;, as GitHub recommends.&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;$ dig quakkels.com +nostats +nocomments +nocmd

; &amp;lt;&amp;lt;&amp;gt;&amp;gt; DiG 9.11.3-1ubuntu1.11-Ubuntu &amp;lt;&amp;lt;&amp;gt;&amp;gt; quakkels.com +nostats +nocomments +nocmd
;; global options: +cmd
;quakkels.com.			IN	A
quakkels.com.		228	IN	CNAME	quakkels.github.io.
quakkels.github.io.	2029	IN	A	185.199.108.153
quakkels.github.io.	2029	IN	A	185.199.111.153
quakkels.github.io.	2029	IN	A	185.199.109.153
quakkels.github.io.	2029	IN	A	185.199.110.153
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Once I saw the updated CNAME pointing to quakkels.github.com then I headed back over to my GitHub Pages settings to turn on SSL. I had to wait a few minutes for the SSL cert from LetsEncrypt to be available. Once that was online then all I needed to do was check the box to turn on SSL.&lt;/p&gt;
&lt;p&gt;The last thing I needed to do was on my end rather than on GitHub&amp;rsquo;s end. I needed to update my Hugo config.toml to use &lt;code&gt;https&lt;/code&gt; for the base url, re-generate the blog, and &lt;code&gt;git push&lt;/code&gt; the changes.&lt;/p&gt;
&lt;h2 id=&#34;further-reading&#34;&gt;Further Reading&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://help.github.com/en/github/working-with-github-pages/managing-a-custom-domain-for-your-github-pages-site&#34;&gt;GitHub: Managing a custom domain&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>Flat is Better Than Nested Versus Single Entry Single Exit</title>
      <link>https://quakkels.com/posts/single-entry-single-exit/</link>
      <pubDate>Thu, 26 Dec 2019 07:00:00 -0500</pubDate>
      
      <guid>https://quakkels.com/posts/single-entry-single-exit/</guid>
      <description>&lt;p&gt;As a program ages and receives updates, more and more features are built. Logic is added and the code becomes increasingly more complicated to read and understand. So programmers invent recommended practices to manage the complexity and to preserve the maintainability of their code. The goal being to keep the cognitive load to minimum levels so the programmer can work efficiently.&lt;/p&gt;
&lt;p&gt;One popular practice is to avoid nested code when possible. The concept that flat is better than nested has been widely adopted by Python programmers who have included it in their &lt;a href= &#34;https://www.python.org/dev/peps/pep-0020/&#34; target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34;&gt;guidelines&lt;/a&gt;. Python programmers aren&amp;rsquo;t the only group to adopt this preference. Resharper, a code analysis tool popular among C# programmers, &lt;a href=&#34;https://stackoverflow.com/q/268132&#34; target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34;&gt;recommends coding styles that result in less nested code&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;However, there&amp;rsquo;s another recommended practice called Single Entry Single Exit (SE/SE). When applied in modern languages, it avoids exiting a program early with multiple return statements. This can be in direct opposition to &amp;ldquo;Flatter is Better&amp;rdquo; since an important flattening technique is to return early.&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;public bool ValidatePassword(CredentialService credentials, string username, string password)
{
  var isValid = false;

  if (credentials.Exists(username))
  {
    if (!credentials.IsLockedOut(username))
    {
      if (credentials.IsHashValid(password, credentials.GetHashByUsername(username)))
      {
        LogValidPassword(username);
        isValid = true;
      }
      else
      {
        LogInvalidPassword(username);
      }
    }
    else
    {
      LogLockedOutUser(username);
    }
  }
  else
  {
    LogMissingUsername(username);
  }

  return isValid;
}
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;The above code is sound. But we can easily see that nested if/else statements quickly become difficult to read. And keep in mind that as this codebase matures it&amp;rsquo;s very likely that additional features, checks, and logging will be required by business rules.&lt;/p&gt;
&lt;p&gt;Now, consider how easy it is to read the following code which uses multiple early returns to exit.&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;public bool ValidatePassword(CredentialService credentials, string username, string password)
{
  if (!credentials.Exists(username))
  {
    LogMissingUsername(username);
    return false;
  }

  if (credentials.IsLockedOut(username))
  {
    LogLockedOutUser(username);
    return false;
  }

  if (!credentials.IsHashValid(password, credentials.GetHashByUsername(username)))
  {
    LogInvalidPassword(username);
    return false;
  }
      
  LogValidPassword(username);
  return true;
}
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;My preference is to favor returning early. Composing functions such that there&amp;rsquo;s just one final return statement results in code that has more &lt;code&gt;else&lt;/code&gt; statements and multiple levels of nesting. I find these are characteristics of code that&amp;rsquo;s difficult to read. A &lt;code&gt;return&lt;/code&gt; is the end of function execution. When an early &lt;code&gt;return&lt;/code&gt; is encountered then the final result is apparent. This is not the case when setting a result value which can be changed later in execution. So a programmer would need to handle the cognitive load of more scenarios with SE/SE than they would if early returns were adopted.&lt;/p&gt;
&lt;h2 id=&#34;origins-of-single-entry-single-exit&#34;&gt;Origins of Single Entry Single Exit&lt;/h2&gt;
&lt;p&gt;The history of SE/SE is rooted in a pioneering programming paradigm called Structured Programming. The term Structured Programming was &lt;a href=&#34;https://www.cs.utexas.edu/users/EWD/ewd02xx/EWD249.PDF&#34; target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34;&gt;coined by Edsger Dijkstra&lt;/a&gt;. It&amp;rsquo;s used to refer to programming with control structures like if/then/else, loops like for and while, and subroutines. This paradigm gained popularity thanks in part to a 1968 letter called &lt;a href=&#34;https://www.cs.utexas.edu/users/EWD/ewd02xx/EWD215.PDF&#34; target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34;&gt;Go-to Statement Considered Harmful&lt;/a&gt; by Dijkstra.&lt;/p&gt;
&lt;p&gt;The argument for SE/SE has it&amp;rsquo;s foundation in the argument against using &lt;code&gt;goto&lt;/code&gt;. Essentially highlighting the benefits of avoiding flows that become tangled and obfuscated to the programmer. Such code is referred to as &lt;a href=&#34;https://en.wikipedia.org/wiki/Spaghetti_code#Meaning&#34; target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34;&gt;spaghetti code&lt;/a&gt;. Bertrand Meyer criticizes returning early, and even advises against using &lt;code&gt;continue&lt;/code&gt; and &lt;code&gt;break&lt;/code&gt; in loops. He writes about it in his book called Touch of Class: Learning to Program Well with Objects and Contracts. Regarding &lt;code&gt;return&lt;/code&gt;, &lt;code&gt;continue&lt;/code&gt;, and &lt;code&gt;break&lt;/code&gt; he says they &amp;ldquo;are just the old goto in sheep&amp;rsquo;s clothing.&amp;rdquo; His opinion seems to be overly dogmatic to me because those three keywords always jump to the same place. A &lt;code&gt;return&lt;/code&gt; will always exit the function. A &lt;code&gt;continue&lt;/code&gt; will always jump to the top of the loop. A &lt;code&gt;break&lt;/code&gt; will always exit a loop. Those behaviors are consistent and programmers have mental models for them and they&amp;rsquo;re transferable to other programs. This is unlike &lt;code&gt;goto&lt;/code&gt; which requires the programmer to hunt for the location that&amp;rsquo;s being jumped to, and therefore they must create a new mental model for each flow.&lt;/p&gt;
&lt;h2 id=&#34;final-thoughts&#34;&gt;Final Thoughts&lt;/h2&gt;
&lt;p&gt;SE/SE was for a time when the programmer handled the structure of the function rather than just the logic of it. Languages that offered multiple points of entry to subroutines can certainly become confusing. I agree that multiple entry points is a practice to be avoided. But, modern languages offer greater protections than earlier ones. So the rule is less relevant today.&lt;/p&gt;
&lt;p&gt;My disagreement is specifically with the single exit rule. I think flat code is just easier to understand than nested. Now, there are cases where a single exit is important. Multiple exit points could certainly be an issue in languages like C which require you to clean up after yourself. But the rule is not nearly as useful for languages that have features like garbage collection, &lt;code&gt;try...finally&lt;/code&gt;, and &lt;code&gt;using&lt;/code&gt; blocks.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Functions for Documentation Instead of Comments</title>
      <link>https://quakkels.com/posts/functions-for-documentation-instead-of-comments/</link>
      <pubDate>Mon, 23 Dec 2019 07:00:00 -0500</pubDate>
      
      <guid>https://quakkels.com/posts/functions-for-documentation-instead-of-comments/</guid>
      <description>&lt;p&gt;Using good function naming and composition will decrease the need for gratuitous comments and increase your code’s readability.&lt;/p&gt;
&lt;p&gt;I&amp;rsquo;ve become convinced that comments are often worth avoiding. Comments aren&amp;rsquo;t subject to a compiler nor to an interpreter. Code may change and the corresponding comment often remains as it was. Except now the comment is misleading. This makes maintaining the code unnecessarily difficult.&lt;/p&gt;
&lt;h2 id=&#34;use-function-names-to-document-code&#34;&gt;Use Function Names to Document Code&lt;/h2&gt;
&lt;p&gt;Consider this code that determines the &amp;ldquo;Day of the Programmer&amp;rdquo;. The &lt;code&gt;GetDay&lt;/code&gt; method (method being a function on an object) gets the date that represents the 256th day of the year. And, it accounts for when the calendar changed from Julian to Gregorian.&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;public static DayOfTheProgrammer 
{
  public static string GetDay(int year)
  {
    var september256Day = 13;

    // Find whether the year is missing 14 days.
    if (year == 1918)
    {
      september256Day = 26;
    }
    // Find whether it&#39;s a leap year
    else if (year &amp;gt;= 1918 &amp;amp;&amp;amp; (year % 400 == 0 || year % 4 == 0 &amp;amp;&amp;amp; year % 100 != 0) || year &amp;lt; 1918 &amp;amp;&amp;amp; year % 4 == 0)
    {
      september256Day = 12;
    }

    return $&amp;quot;{september256Day}.09.{year}&amp;quot;;
  }
}
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;The above code works. But it is difficult to read. The programmer has considered future maintainers by adding explanations in comments above each &lt;code&gt;if&lt;/code&gt; statement. That is a step in the right direction, however comments are particularly vulnerable to &amp;ldquo;code rot&amp;rdquo; since the compiler (or interpreter) is unaware of their content. As the code is maintained it&amp;rsquo;s easy for neglected comments to have misleading or even false information in them. I prefer using descriptive names in lieu of comments.&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;public static class DayOfTheProgrammer
{
  public static string GetDay(int year)
  {
    var september256Day = 13;

    if (IsMissing14Days(year))
    {
      september256Day = 26;
    }
    else if (IsLeapYear(year))
    {
      september256Day = 12;
    }

    return $&amp;quot;{september256Day}.09.{year}&amp;quot;;
  }

  private static bool IsMissing14Days(int year)
  {
    return year == 1918;
  }

  private static bool IsLeapYear(int year)
  {
    return year &amp;gt;= 1918 
      &amp;amp;&amp;amp; (year % 400 == 0 || year % 4 == 0 &amp;amp;&amp;amp; year % 100 != 0) 
      || year &amp;lt; 1918 
      &amp;amp;&amp;amp; year % 4 == 0;
  }
}
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Refactoring the code into functions with meaningful names has eliminated the need for the original comments. The same information is being communicated in both versions of the code. However, the original is vulnerable to comment rot while the refactored code that uses descriptive names is easier to maintain.&lt;/p&gt;
&lt;p&gt;The programmer may decide to refactor further. The conditional statement in &lt;code&gt;IsLeapYear&lt;/code&gt; is still pretty long and requires effort to read and understand. We can add documentation by using descriptive variable names.&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;private static bool IsLeapYear(int year)
{
  var isGregorianCalendar = year &amp;gt;= 1918;
  var isGregorianLeapYear = year % 400 == 0 || year % 4 == 0 &amp;amp;&amp;amp; year % 100 != 0;

  if (isGregorianCalendar &amp;amp;&amp;amp; isGregorianLeapYear)
  {
    return true;
  }

  var isJulianCalendar = !isGregorianCalendar;
  var isJulianLeapYear = year % 4 == 0;

  return isJulianCalendar &amp;amp;&amp;amp; isJulianLeapYear;
}
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;(For more information about the Day of the Programmer problem visit &lt;a href=&#34;https://www.hackerrank.com/challenges/day-of-the-programmer/problem&#34; target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34;&gt;HackerRank&lt;/a&gt;.)&lt;/p&gt;
&lt;h2 id=&#34;prefer-smaller-functions&#34;&gt;Prefer Smaller Functions&lt;/h2&gt;
&lt;p&gt;Long functions typically suffer from multiple code flows, varying levels of abstraction, and they often have &amp;ldquo;sections&amp;rdquo; delineated by comments. If the programmer feels the need to use comments to separate a program into sections, that could be an opportunity to write smaller functions with descriptive names.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;The first rule of functions is that they should be small. The second rule of functions is that &lt;em&gt;they should be smaller than that.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;— Clean Code by Robert C. Martin (pp. 34)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;useful-comments&#34;&gt;Useful Comments&lt;/h2&gt;
&lt;p&gt;Though I believe that comments are often worth avoiding, there are times when comments are useful.&lt;/p&gt;
&lt;p&gt;Useful comments often fall into one of the following categories.&lt;/p&gt;
&lt;h3 id=&#34;legal&#34;&gt;Legal&lt;/h3&gt;
&lt;p&gt;Legal comments such as copyright and license information.&lt;/p&gt;
&lt;h3 id=&#34;explanation-of-intent&#34;&gt;Explanation of Intent&lt;/h3&gt;
&lt;p&gt;Good comments can explain the programmer&amp;rsquo;s intention rather than explaining the implementation. Don&amp;rsquo;t explain how it works, rather explain the reason why it works that way.&lt;/p&gt;
&lt;h3 id=&#34;warning&#34;&gt;Warning&lt;/h3&gt;
&lt;p&gt;Comments can be useful for communicating warnings about possible consequences. Things like &lt;code&gt;// takes a long time to run&lt;/code&gt;, or &lt;code&gt;// not thread safe&lt;/code&gt; are good to know and difficult to document without a brief comment.&lt;/p&gt;
&lt;p&gt;If a comment falls outside of the previous three categorizations, explore the idea of removing it. The message might be a good candidate for documenting with function names, or variable names.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Naming Things Clearly</title>
      <link>https://quakkels.com/posts/clean-names/</link>
      <pubDate>Tue, 17 Dec 2019 07:00:00 -0500</pubDate>
      
      <guid>https://quakkels.com/posts/clean-names/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;https://www.amazon.com/Clean-Code-Handbook-Software-Craftsmanship/dp/0132350882&#34; target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34;&gt;Clean Code by Robert C. Martin&lt;/a&gt; is one of my favorite programming texts. It has a chapter called Meaningful Names wherein principles for the clear and clean naming of code elements are explained.&lt;/p&gt;
&lt;p&gt;When we write code we should be considering the programmer who follows us. Sometimes it may be ourselves who have not touched the code for months or years. The programmer working in previously written code will need to study it to try and recognize the intention and systems of the original author. Making the code as easy to understand as possible is the author&amp;rsquo;s responsibility. When writing professional code, resist urges to &amp;lsquo;be clever&amp;rsquo; or to sacrifice clarity for brevity.&lt;/p&gt;
&lt;p&gt;Use these good naming principles and the programmers who follow us will be grateful.&lt;/p&gt;
&lt;h2 id=&#34;use-names-that-show-intent&#34;&gt;Use Names That Show Intent&lt;/h2&gt;
&lt;p&gt;Name things so that we can identify them. Consider the variable declared below.&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;DateTime z;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;We can clearly see there is a variable. We can tell it&amp;rsquo;s a &lt;code&gt;DateTime&lt;/code&gt;. Though, we can&amp;rsquo;t tell what it&amp;rsquo;s used for from just the name. A programmer may try to add clarity be adding a few more keystrokes to the names.&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;DateTime login;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;This improves readability somewhat. But it the programmer still isn&amp;rsquo;t clear about what purpose this variable is intended to serve. The name could be further improved by adding more details.&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;DateTime lastLoginUtc;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;This is a better name because it communicates several things about the intent of the variable. It is intended to hold a UTC date representing the last time there was a login. The original name, &lt;code&gt;z&lt;/code&gt;, communicated none of that intent. The program using &lt;code&gt;z&lt;/code&gt; would have been harder to decipher.&lt;/p&gt;
&lt;p&gt;Here&amp;rsquo;s a slightly more complex example.&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;public bool GetResult(Dictionary&amp;lt;string, string&amp;gt; a, string x, string y)
{
  if (!a.ContainsKey(x)) 
  {
    return false;
  }

  return compare(y, a[x]);
}
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;This isn&amp;rsquo;t doing anything complex, but it&amp;rsquo;s not obvious what&amp;rsquo;s happening. See how much cleaner things get when meaningful names are applied.&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;public bool ValidatePassword(Dictionary&amp;lt;string, string&amp;gt; credentials, string username, string password)
{
  if (!credentials.ContainsKey(username)) 
  {
    return false;
  }

  return CheckHash(password, credentials[username]);
}
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;When names show intention we have a much better idea of the job this code performs.&lt;/p&gt;
&lt;h2 id=&#34;avoid-false-clues&#34;&gt;Avoid False Clues&lt;/h2&gt;
&lt;p&gt;Programmers should not use names that have common meanings which could mislead the reader from what the variable actually represents. For example &lt;code&gt;ee&lt;/code&gt; is a bad variable name. Depending on the reader&amp;rsquo;s background they may be led to believe it stands for Expected Error, Employee Experience, or just Employee.&lt;/p&gt;
&lt;p&gt;Similarly, if a variable refers to a collection of employees, avoid using &lt;code&gt;employeeList&lt;/code&gt; unless it&amp;rsquo;s actually a list. In fact, often it&amp;rsquo;s preferable to not indicate data type in the variable&amp;rsquo;s name. A pluralized name, such as &lt;code&gt;employees&lt;/code&gt;, communicates that it can hold multiple employee objects.&lt;/p&gt;
&lt;h2 id=&#34;avoid-noise&#34;&gt;Avoid Noise&lt;/h2&gt;
&lt;p&gt;When attempting to write descriptive names, be careful to avoid meaningless noise. For example, words like &amp;ldquo;info&amp;rdquo; or &amp;ldquo;detail&amp;rdquo; can easily become noise. Consider the method name &lt;code&gt;GetUserClaims()&lt;/code&gt;. Some may be inclined to name it &lt;code&gt;GetUserClaimsInfo()&lt;/code&gt; or &lt;code&gt;GetUserClaimsDetail()&lt;/code&gt; even though the extra words don&amp;rsquo;t add any new information for the reader.&lt;/p&gt;
&lt;h2 id=&#34;names-should-fit-in-conversation&#34;&gt;Names Should Fit in Conversation&lt;/h2&gt;
&lt;p&gt;Abbreviating terms or using acronyms can produce names that are awkward to verbalize in regular conversation. Avoid difficult to pronounce names in favor of names that are easily said.&lt;/p&gt;
&lt;p&gt;Prefer &lt;code&gt;originalLoginDate&lt;/code&gt; over &lt;code&gt;ogLgnDt&lt;/code&gt;. Also prefer &lt;code&gt;EnableLongDescription&lt;/code&gt; over &lt;code&gt;ENBLNGDESC&lt;/code&gt;.&lt;/p&gt;
&lt;h2 id=&#34;dont-use-encodings&#34;&gt;Don&amp;rsquo;t Use Encodings&lt;/h2&gt;
&lt;p&gt;Names that use encodings often violate more than one of the previously recommended rules. They introduce an additional learning curve and require programmers to be subjected to unnecessary extra effort to decipher such names.&lt;/p&gt;
&lt;p&gt;The most egregious offenses I&amp;rsquo;ve seen are names for database tables and columns in ERP software. From a real ERP we find this example, &lt;code&gt;CO00101&lt;/code&gt;. The name provides next to no clues regarding the table&amp;rsquo;s purpose. The programmer is expected to know that it refers to the table representing &amp;ldquo;Document Attachment Master.&amp;rdquo; Not only does this example use encodings, it also violates the principle that names should show intent. It&amp;rsquo;s an unfortunate name on multiple levels.&lt;/p&gt;
&lt;p&gt;Hungarian Notation is an encoding scheme that has historically been popular. But it is a violation of this avoid-encodings rule. In some pioneering programming languages it was necessary to encode information about the variable within the variable name itself using mnemonics. Today our languages and IDEs are advanced enough to have nearly eliminate any need for Hungarian Notation style encodings.&lt;/p&gt;
&lt;h3 id=&#34;dont-use-encodings-exceptions-to-the-rule&#34;&gt;Don&amp;rsquo;t Use Encodings: Exceptions to the Rule&lt;/h3&gt;
&lt;p&gt;Using prefixes for names of class members is still a commonly encountered encoding technique. Uncle Bob  recommends avoiding member prefixes entirely. He writes:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&amp;hellip;people quickly learn to ignore the prefix (or suffix) to see the meaningful part of the name. The more we read the code, the less we see the prefixes. Eventually the prefixes become unseen clutter and a marker of older code.&lt;/p&gt;
&lt;p&gt;— Clean Code by Robert C. Martin (pp. 24)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;I haven&amp;rsquo;t yet decided whether I agree with avoiding member prefixes. Consider this class with member prefixes:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;public class User
{
  private string _username;

  public User(string username)
  {
    _username = username;
  }
}
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;And compare it to a version without the member prefix:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;public class User
{
  private string username;

  public User(string username)
  {
    this.username = username;
  }
}
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;I&amp;rsquo;m hard pressed to say one is superior to the other. Ultimately, I don&amp;rsquo;t think this is a hill worth dying on. I would object to a more involved member prefix, such as &lt;code&gt;m_&lt;/code&gt; instead of just &lt;code&gt;_&lt;/code&gt;. But I think both versions of the &lt;code&gt;User&lt;/code&gt; class are easy to read. However, I would advocate for either &lt;code&gt;this.username&lt;/code&gt; or &lt;code&gt;_username&lt;/code&gt; when assigning the field rather than &lt;code&gt;username = username&lt;/code&gt;. While &lt;code&gt;username = username&lt;/code&gt; does work in languages like C#, it appears redundant. And, it violates the &amp;ldquo;avoid false clues&amp;rdquo; rule.&lt;/p&gt;
&lt;p&gt;Another exception comes up when dealing with interfaces and concrete classes. If we have need for a configuration service with an interface and a concrete implementation, then how would the names be different between the two. It&amp;rsquo;s common to use an &lt;code&gt;I&lt;/code&gt; prefix to indicate an interface. So &lt;code&gt;IConfigurationService&lt;/code&gt; and &lt;code&gt;ConfigurationService&lt;/code&gt; for the concrete class implementation. But Uncle Bob prefers having the encoding on the concrete class, rather than on the interface. His reasoning for this is that the users of the configuration service interface have no need to know that they&amp;rsquo;ve been given an interface. So, he&amp;rsquo;d name them something like &lt;code&gt;ConfigurationService&lt;/code&gt;, and &lt;code&gt;ConfigurationServiceImp&lt;/code&gt;.&lt;/p&gt;
&lt;h2 id=&#34;use-nouns-for-class-names&#34;&gt;Use Nouns For Class Names&lt;/h2&gt;
&lt;p&gt;This is a straightforward rule. Classes and objects should be thought of as nouns. So, they should be named that way. They shouldn&amp;rsquo;t have verbs.&lt;/p&gt;
&lt;h2 id=&#34;use-verbs-for-method-names&#34;&gt;Use Verbs For Method Names&lt;/h2&gt;
&lt;p&gt;Here&amp;rsquo;s another straightforward rule. Methods are &amp;ldquo;doers&amp;rdquo; so their name should have a verb for what they are doing. &lt;code&gt;GetCredentials&lt;/code&gt;, &lt;code&gt;ValidatePassword&lt;/code&gt;, and &lt;code&gt;AddUser&lt;/code&gt; are all good method names.&lt;/p&gt;
&lt;h2 id=&#34;avoid-inside-jokes-references-and-general-cleverness&#34;&gt;Avoid Inside Jokes, References, and General &amp;ldquo;Cleverness&amp;rdquo;&lt;/h2&gt;
&lt;p&gt;As fun as it might be, avoid using &amp;ldquo;easter eggs&amp;rdquo; or cultural references in your code. Instead, just be direct and write what you mean. Don&amp;rsquo;t require the reader to resist a distraction and map a label to a concept while they&amp;rsquo;re trying to understand your code.&lt;/p&gt;
&lt;h3 id=&#34;exceptions-to-avoiding-jokes-and-references&#34;&gt;Exceptions to Avoiding Jokes and References&lt;/h3&gt;
&lt;p&gt;There is a very specific exception to this rule. Cultural references and inside jokes &lt;em&gt;must&lt;/em&gt; be encouraged whenever you&amp;rsquo;re writing in the &lt;a href=&#34;https://lhartikk.github.io/ArnoldC/&#34; target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34;&gt;ArnoldC&lt;/a&gt; language&lt;/p&gt;
&lt;h2 id=&#34;pick-one-word-per-concept&#34;&gt;Pick One Word Per Concept&lt;/h2&gt;
&lt;p&gt;Some words could be used interchangeably to use the same thing. In such scenarios settle on one word for each abstract concept. For example, using &lt;code&gt;Configuration&lt;/code&gt; and &lt;code&gt;Settings&lt;/code&gt; to represent the same concept could be confusing. Likewise, avoid using &lt;code&gt;Fetch&lt;/code&gt; alongside &lt;code&gt;Get&lt;/code&gt;. Having consistent terminology is very useful for teams working together. I&amp;rsquo;ve been part of many conversations over the difference between a &lt;code&gt;UserManager&lt;/code&gt; class and a &lt;code&gt;UserService&lt;/code&gt; class. The important thing is to identify the concept, and settle on a single word to represent it.&lt;/p&gt;
&lt;h2 id=&#34;dont-pun&#34;&gt;Don&amp;rsquo;t Pun&lt;/h2&gt;
&lt;p&gt;Don&amp;rsquo;t have one word mean more than one thing. Uncle Bob highlights that doing so is essentially making a pun. The example he gives is &lt;code&gt;Add&lt;/code&gt;. A codebase may have many &lt;code&gt;Add&lt;/code&gt; methods in it, and they all create a new value by adding or concatenating two values. A programmer may want to add a value to a collection, and for consistency&amp;rsquo;s sake use the word &lt;code&gt;Add&lt;/code&gt; as the method name, even though the operation being performed is different than every other use of the word. &lt;code&gt;Insert&lt;/code&gt; or &lt;code&gt;Append&lt;/code&gt; would be better choices for such a method.&lt;/p&gt;
&lt;h2 id=&#34;use-solution-domain-names&#34;&gt;Use Solution Domain Names&lt;/h2&gt;
&lt;p&gt;It&amp;rsquo;s okay to use computer science terms, algorithm names, and so on, in our code. Our readers will be other programmers, so it&amp;rsquo;s alright to expect them to know these things.&lt;/p&gt;
&lt;h2 id=&#34;use-problem-domain-names&#34;&gt;Use Problem Domain Names&lt;/h2&gt;
&lt;p&gt;Don&amp;rsquo;t invent new terms to represent concepts in the problem domain. Instead use the terms that the problem domain experts use. This will aid in communication, and when someone takes maintains the code after you, they&amp;rsquo;ll be able to ask questions using terminology that the problem domain expert will understand.&lt;/p&gt;
&lt;h2 id=&#34;add-meaningful-context&#34;&gt;Add Meaningful Context&lt;/h2&gt;
&lt;p&gt;Names usually require some amount of context to be meaningful. The context can be provided by well named classes inside of well names namespaces. For example, a &lt;code&gt;State&lt;/code&gt; variable might not be immediately obvious as part of an address. But if it&amp;rsquo;s a property on an &lt;code&gt;Address&lt;/code&gt; class then what &lt;code&gt;Address.State&lt;/code&gt; is becomes much clearer.&lt;/p&gt;
&lt;h2 id=&#34;dont-add-gratuitous-context&#34;&gt;Don&amp;rsquo;t Add Gratuitous Context&lt;/h2&gt;
&lt;p&gt;Most of the rules explored so far tend to lead us toward longer more descriptive names. But, a short name that is clear is always better than a longer name that is equally clear.&lt;/p&gt;
&lt;h3 id=&#34;gratuitous-context-comments&#34;&gt;Gratuitous Context: Comments&lt;/h3&gt;
&lt;p&gt;I submit that comments are a code smell that indicates poorly named code. Comments become stale easily because they&amp;rsquo;re not subject to a compiler nor an interpreter. Following the previous rules will help reduce the need for comments because the code&amp;rsquo;s intent and readability will be improved enough to eliminate the need for many of them.&lt;/p&gt;
&lt;p&gt;A general rule I like is to limit my comments to &amp;ldquo;why&amp;rsquo;s&amp;rdquo;. Comments explaining what is happening or how it&amp;rsquo;s happening are usually vestigial because the code itself should be communicating the &amp;ldquo;what&amp;rdquo; and &amp;ldquo;how&amp;rdquo;. However, the sometimes does a poor job of explaining the &amp;ldquo;why&amp;rdquo;. If you identify a section of your code that may be confusing because it&amp;rsquo;s not obvious why it needs to be there then double check whether it&amp;rsquo;s possible to refactor to make the code clearer. Then, if &amp;ldquo;why&amp;rdquo; is still a question, then a comment may be appropriate. Though it should be a very rare occurrence.&lt;/p&gt;
&lt;h2 id=&#34;takeaways&#34;&gt;Takeaways&lt;/h2&gt;
&lt;p&gt;Solving problems with code is the programmer&amp;rsquo;s primary concern. But, a professional programmer also bears the responsibility of writing code that can be understood by others. If he fails at that task his code will rot, and eventually become too cumbersome to improve and use. Strive to infuse these previous guidelines into your code writing process. The results will be programs that are crafted together with a clarity that you, and those who follow you, will appreciate.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Our goal, as authors, is to make our code as easy as possible to understand. We want our code to be a quick skim, not an intense study. We want to use the popular paperback model whereby the author is responsible for making himself clear and not the academic model where it is the scholar&amp;rsquo;s job to dig the meaning out of the paper.&lt;/p&gt;
&lt;p&gt;— Clean Code by Robert C. Martin (pp. 27)&lt;/p&gt;
&lt;/blockquote&gt;
</description>
    </item>
    
    <item>
      <title>Run Plex on an Ubuntu Server at Home</title>
      <link>https://quakkels.com/posts/run-plex-on-ubuntu-server-at-home/</link>
      <pubDate>Tue, 03 Sep 2019 00:00:00 +0000</pubDate>
      
      <guid>https://quakkels.com/posts/run-plex-on-ubuntu-server-at-home/</guid>
      <description>&lt;p&gt;Recently I&amp;rsquo;ve decided that having limited high quality entertainment choices is better than having endless choices that are of questionable quality. So my household decided to end our Netflix subscription. This decision motivated me to build a private streaming media server for our home. Here is how I created a home media server with Plex and a home server tower.&lt;/p&gt;
&lt;h1 id=&#34;choosing-the-media-server&#34;&gt;Choosing the Media Server&lt;/h1&gt;
&lt;p&gt;There are two popular software options for home media server. &lt;a href=&#34;https://www.plex.tv/&#34; target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34;&gt;Plex&lt;/a&gt; and &lt;a href=&#34;https://kodi.tv/&#34; target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34;&gt;Kodi&lt;/a&gt;. They are both free to use, though Plex does have a premium subscription option to unlock advanced features. These two media servers are very similar, and I believe they&amp;rsquo;ve been forked from the same original open source project.&lt;/p&gt;
&lt;p&gt;I knew my household would be using our PS4 as a client of the media server. This ended up being the detail that helped me make the decision between the two. When I saw that &lt;a href=&#34;https://kodi.onl/ps4/&#34; target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34;&gt;Kodi recommended using the Plex app&lt;/a&gt; for streaming on the PS4, I decided to use Plex directly.&lt;/p&gt;
&lt;h1 id=&#34;choosing-the-hardware&#34;&gt;Choosing the Hardware&lt;/h1&gt;
&lt;p&gt;This Plex media server will need some hardware to run on. In my case, this meant I&amp;rsquo;d need to acquire new computers because everything I have are either not suited to the job (e.g. laptops), are already dedicated to something else (e.g. Raspberry Pi, PS4), or don&amp;rsquo;t exist (i.e. I don&amp;rsquo;t have any other computers).&lt;/p&gt;
&lt;p&gt;So, I needed to get a server, of some type, to run Plex on. I didn&amp;rsquo;t want to spend the time building a server myself. Rather than dealing with potential hardware hiccups, I wanted to focus on the software and networking parts of this project. So I considered these three options:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Raspberry Pi&lt;/li&gt;
&lt;li&gt;NAS&lt;/li&gt;
&lt;li&gt;Some kind of home server or PC&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;The Raspberry Pi was initially the more attractive option. But, I doubt that the little ARM processor will be able to keep up. I could see it getting really bogged down if there&amp;rsquo;s more than one stream, or if any transcoding is needed.&lt;/p&gt;
&lt;p&gt;Next to check out was a NAS. These seemed ideal at first. But their shine dimmed as I dug into prices and specifications. Price was the key factor. I could easily spend around four hundred dollars on an entry level NAS that had no hard disks.&lt;/p&gt;
&lt;p&gt;A quick web search for &amp;ldquo;Home Server&amp;rdquo; brought me to the Dell PowerEdge T30 on sale at Amazon for $376.20. This seemed like a good option. It came with a Intel Xeon E3-1225 v5 3.3GHz processor, 8GB of RAM, and a 1TB HD. This looked like a great value.&lt;/p&gt;
&lt;p&gt;To make sure the T30 would work, I started investigating &lt;a href=&#34;https://support.plex.tv/articles/201774043-what-kind-of-cpu-do-i-need-for-my-server/?fbclid=IwAR3AqFt86n6IpsHazToGFNHzJtOFFfiUrnEP-Drf43GnpmvFQAAKvxBOCK0&#34; target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34;&gt;CPU requirements in more depth&lt;/a&gt;. I wanted my server to handle transcoding two 1080p video files simultaneously. Plex recommended that transcoding one 1080p (10Mbps, H.264) file would need a CPU with a 2000 PassMark score. So, getting a CPU with a 4000 score should theoretically be able to double that number to two. The Xeon E3-1225 v3 has a score of &lt;a href=&#34;https://www.cpubenchmark.net/cpu_lookup.php?cpu=Intel+Xeon+E3-1225+v5+%40+3.30GHz&amp;id=2707&#34; target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34;&gt;7,830&lt;/a&gt;. That meets my requirements and has plenty of cushion.&lt;/p&gt;
&lt;p&gt;The T30 had the processing power, had the 1TB disk, was budget friendly, and already built. It didn&amp;rsquo;t need anything more. I just had to un-box it, plug in power and some initial peripherals (to handle OS installation) and connect it to my network via Ethernet.&lt;/p&gt;
&lt;h1 id=&#34;choosing-the-operating-system&#34;&gt;Choosing the Operating System&lt;/h1&gt;
&lt;p&gt;I didn&amp;rsquo;t have any desire to mess with Windows for this project. I&amp;rsquo;ve been using Linux for most of my recent projects and I&amp;rsquo;d like to continue that trend. There&amp;rsquo;s also nothing about Plex that requires Windows software.&lt;/p&gt;
&lt;p&gt;I settled on using Ubuntu Server. It&amp;rsquo;s a widely used distribution of Linux that has a lot of documentation available.&lt;/p&gt;
&lt;h1 id=&#34;install-ubuntu-server&#34;&gt;Install Ubuntu Server&lt;/h1&gt;
&lt;p&gt;Download the ISO from &lt;a href=&#34;https://ubuntu.com/download/server&#34; target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34;&gt;their website&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Once it has finished downloading, make a boot disk with it. This is very simple with Windows 10.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Place a write-able disk in your disk drive.&lt;/li&gt;
&lt;li&gt;Right click on the Ubuntu ISO file and select &amp;ldquo;Burn disk image.&amp;rdquo;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;img src=&#34;https://quakkels.com/images/plex01-image-dvd-on-windows.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;Get the boot disk in to the DVD drive of your server. Then with the disk in the drive, turn on the server.&lt;/p&gt;
&lt;p&gt;As the server boots, smash that F12 key to enter BIOS to Boot from the DVD drive.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Another option is to create a bootable thumb drive using a tool like Balena Etcher to image the drive. I used writeable DVDs because I have so many left over from the 2000s that I just might as well use them up.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Ubuntu&amp;rsquo;s documentation is very good. Follow these &lt;a href=&#34;https://tutorials.ubuntu.com/tutorial/tutorial-install-ubuntu-server#0&#34; target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34;&gt;directions for installing Ubuntu Server&lt;/a&gt;. They have screenshots and instructions of their installation screens, so I&amp;rsquo;m not going to go into too many details here.&lt;/p&gt;
&lt;p&gt;When asked, &lt;strong&gt;be sure to install SSH for remote access&lt;/strong&gt;. This allows you to manage the server from your regular workstation. So you can put your server out of the way. And, you don&amp;rsquo;t have to worry about connecting monitors or keyboards to work on it. Finish off the installation by restarting the box.&lt;/p&gt;
&lt;p&gt;Once you&amp;rsquo;ve finished installing Ubuntu Server it should:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Be connected to the network via Ethernet&lt;/li&gt;
&lt;li&gt;Have a Name (mine is named &lt;code&gt;media&lt;/code&gt;)&lt;/li&gt;
&lt;li&gt;Have a User on the server (my user is &lt;code&gt;quakkels&lt;/code&gt;)&lt;/li&gt;
&lt;li&gt;Have SSH installed&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;So, now look in your router&amp;rsquo;s connected devices to find your server&amp;rsquo;s IP address on your network.&lt;/p&gt;
&lt;p&gt;Log in to your server from your main workstation via SSH:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;$ ssh 192.168.1.11 -l quakkels
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Use your server&amp;rsquo;s local network IP address and your user&amp;rsquo;s username in the command above.&lt;/p&gt;
&lt;p&gt;The next thing we need to do is install Samba on the server.&lt;/p&gt;
&lt;h2 id=&#34;install-samba&#34;&gt;Install Samba&lt;/h2&gt;
&lt;p&gt;I want to be able to access the media folder that&amp;rsquo;s on my server from my laptop. I need Samba installed in Ubuntu to do that.&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;$ sudo apt-get install samba
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Then add a user to Samba. I&amp;rsquo;ll use the &lt;code&gt;quakkels&lt;/code&gt; user.&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;$ sudo smbpasswd -a quakkels
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Then, create a folder to share.&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;$ cd ~
$ mkdir library
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Now, edit the configuration file with your preferred editor. I&amp;rsquo;m using Nano.&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;sudo nano /etc/samba/smb.conf
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Scroll down to the end of the file and add these lines.&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;[library]
   path = /home/quakkels/library
   available = yes
   valid users = quakkels
   read only = no
   browsable = yes
   public = yes
   writeable = yes
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Replace &lt;code&gt;library&lt;/code&gt; with the name of your own shared folder and &lt;code&gt;quakkels&lt;/code&gt; with your own user.&lt;/p&gt;
&lt;p&gt;Save the file and exit the editor.&lt;/p&gt;
&lt;p&gt;Restart the smb daemon to apply the configuration changes.&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;sudo service smbd restart
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;So at this point the share should be working and accessible on your network. Use Windows File Explorer to test it.&lt;/p&gt;
&lt;p&gt;I navigated to \media\library and logged in with the Samba user &lt;code&gt;quakkels&lt;/code&gt; and placed a file. Test succeeded!&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://quakkels.com/images/plex03-samba-network-share.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h1 id=&#34;install-the-plex-media-server&#34;&gt;Install the Plex Media Server&lt;/h1&gt;
&lt;p&gt;Unfortunately, Plex is not available via &lt;code&gt;apt-get&lt;/code&gt; in Ubuntu. But the Plex website does lay out a process for &lt;a href=&#34;https://support.plex.tv/articles/200288586-installation/&#34; target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34;&gt;installing the server on Linux&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Start by downloading the &lt;code&gt;.deb&lt;/code&gt; file for Plex. I found the &lt;code&gt;.deb&lt;/code&gt; file available here: &lt;code&gt;https://downloads.plex.tv/plex-media-server-new/1.16.5.1554-1e5ff713d/debian/plexmediaserver_1.16.5.1554-1e5ff713d_amd64.deb&lt;/code&gt; and I&amp;rsquo;ll be using that URL with &lt;code&gt;wget&lt;/code&gt; in Ubuntu to download it directly to the server.&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;$ cd ~
$ wget https://downloads.plex.tv/plex-media-server-new/1.16.5.1554-1e5ff713d/debian/plexmediaserver_1.16.5.1554-1e5ff713d_amd64.deb
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Then, once the &lt;code&gt;.deb&lt;/code&gt; packaged has finished downloading, we can install it with &lt;code&gt;dpkg&lt;/code&gt;.&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;$ sudo dpkg -i plexmediaserver_1.16.5.1554-1e5ff713d_amd64.deb
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Now you can navigate to the Plex web site from a computer on your network by going to &lt;code&gt;http://{your-servers-ip}:32400/web/&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Plex is now running. You can follow Plex documentation to add Plex repositories for future updates, and for adding your media to Plex libraries.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://quakkels.com/images/plex04-web-site.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;further-reading&#34;&gt;Further Reading&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://itsfoss.com/install-deb-files-ubuntu/&#34; target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34;&gt;3 Ways to Install Deb Files on Ubuntu Linux&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://itsfoss.com/install-plex-ubuntu/&#34; target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34;&gt;How to Install and Configure Plex on Ubuntu Linux&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.howtogeek.com/176471/how-to-share-files-between-windows-and-linux/&#34; target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34;&gt;How to Share Files Between Windows and Linux&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://www.samba.org/&#34; target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34;&gt;Samba&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.plex.tv/media-server-downloads/&#34; target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34;&gt;Plex Media Server Downloads&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://support.plex.tv/articles/200288586-installation/&#34; target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34;&gt;Plex Media Server Installation&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>Getting Started with Mobile Development and Xamarin</title>
      <link>https://quakkels.com/posts/getting-started-with-mobile-development-and-xamarin/</link>
      <pubDate>Tue, 04 Jun 2019 00:00:00 +0000</pubDate>
      
      <guid>https://quakkels.com/posts/getting-started-with-mobile-development-and-xamarin/</guid>
      <description>&lt;p&gt;Xamarin enables programmers to write native mobile applications for both Android and iOS using C# and free development tools like Visual Studio Community Edition. This means that if you&amp;rsquo;re invested in the .NET ecosystem and the C# language, you can write cross-platform mobile applications using technology that&amp;rsquo;s already familiar to you.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;A note on development for iOS:&lt;/strong&gt; You will need a mac in order to build iOS versions of the app. I don&amp;rsquo;t have a Mac available, so I&amp;rsquo;ll be getting started with a cross-platform project, but I&amp;rsquo;ll just be using Windows and testing the Android version.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Visit &lt;a href=&#34;https://visualstudio.microsoft.com/&#34;&gt;https://visualstudio.microsoft.com/&lt;/a&gt; to download Visual Studio Community (the free version) and install it. Be sure to select Mobile Development Tools during installation so Xamarin projects will be available.&lt;/p&gt;
&lt;h2 id=&#34;intended-audience&#34;&gt;Intended Audience&lt;/h2&gt;
&lt;p&gt;This is written for C# programmers who want to start working with mobile apps. If you&amp;rsquo;re not somewhat familiar with using Visual Studio, C#, or XML then this may be challenging to follow.&lt;/p&gt;
&lt;h2 id=&#34;mvvm&#34;&gt;MVVM&lt;/h2&gt;
&lt;p&gt;Before we create the first project, a quick word on practices. There are many ways of organizing an app, and one of the best practices is to use the MVVM pattern. MVVM stands for Model, View, View Model.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Model&lt;/strong&gt; (Data)&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;View&lt;/strong&gt; (Presentation)&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;View Model&lt;/strong&gt; (Business Rules)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;By keeping our data in the Model, our presentation code in the View, and our business logic in the View Model we&amp;rsquo;re keeping concerns separate. This will make the project simpler to understand and maintain as it grows.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;It&amp;rsquo;s funny how different ecosystems have different names for very similar concepts. Django has Model/View/Template. ASP.NET MVC has Model/View/Controller. XAML has MVVM. The consistent core idea is to separate concerns to make things simple to understand.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;create-a-new-project&#34;&gt;Create a New Project&lt;/h2&gt;
&lt;p&gt;In Visual Studio select File &amp;gt; New &amp;gt; Project from the menu.&lt;/p&gt;
&lt;p&gt;In the New Project Dialog select the category Installed &amp;gt; Visual C# &amp;gt; Cross-Platform from the list on the left. Then choose the Mobile App (Xamarin.Forms) project type and name it. I named mine &amp;ldquo;Lavender&amp;rdquo;.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;images/xamarin-create-project.png&#34; alt=&#34;Create a Xamarin project&#34;&gt;&lt;/p&gt;
&lt;p&gt;Then in the next dialog, select Blank.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;images/xamarin-create-cross-platform-project.png&#34; alt=&#34;Create a Xamarin cross-platform mobile project&#34;&gt;&lt;/p&gt;
&lt;p&gt;Notice that &amp;ldquo;Code Sharing Strategy&amp;rdquo; is .NET Standard. This is very interesting if you&amp;rsquo;re familiar with the new .NET Standard approach that Microsoft is implementing for the .NET ecosystem. .NET Core and ASP.NET are both proceeding using the same .NET Standard libraries supporting them. Having this option for Xamarin projects means that .NET programmers will have access to the same libraries for mobile that they&amp;rsquo;re used to using in their other projects.&lt;/p&gt;
&lt;p&gt;Now we have a solution called Lavender and three projects in that solution. The main Lavender project, and a project each for Android and iOS.&lt;/p&gt;
&lt;p&gt;Create folders inside the Lavender project to support the MVVM pattern. Create Models, Views, and ViewModels folders. To do this, right click on the Lavender project (not the Lavender solution,) and go to Add &amp;gt; New Folder.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;images/xamarin-create-mvvm-folders.png&#34; alt=&#34;Create MVVM folders&#34;&gt;&lt;/p&gt;
&lt;p&gt;When Visual Studio created the Lavender project, it automatically created a view for us called &lt;code&gt;MainPage.xaml&lt;/code&gt;, and it has &lt;code&gt;MainPage.xaml.cs&lt;/code&gt; behind it. Move those two files into the Views folder by dragging and dropping &lt;code&gt;MainPage.xaml&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;images/xamarin-move-mainpage-into-views-folder.png&#34; alt=&#34;Move MainPage.xaml into Views folder&#34;&gt;&lt;/p&gt;
&lt;p&gt;Open &lt;code&gt;MainPage.xaml&lt;/code&gt; and give it this code:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;&amp;lt;?xml version=&amp;quot;1.0&amp;quot; encoding=&amp;quot;utf-8&amp;quot; ?&amp;gt;
&amp;lt;ContentPage xmlns=&amp;quot;http://xamarin.com/schemas/2014/forms&amp;quot;
             xmlns:x=&amp;quot;http://schemas.microsoft.com/winfx/2009/xaml&amp;quot;
             xmlns:local=&amp;quot;clr-namespace:Lavender&amp;quot;
             x:Class=&amp;quot;Lavender.MainPage&amp;quot;&amp;gt;
  &amp;lt;ContentPage.Content&amp;gt;
    &amp;lt;StackLayout&amp;gt;
      &amp;lt;Label Text=&amp;quot;Hello World!&amp;quot; FontSize=&amp;quot;Large&amp;quot; /&amp;gt;
    &amp;lt;/StackLayout&amp;gt;
  &amp;lt;/ContentPage.Content&amp;gt;
&amp;lt;/ContentPage&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;A XAML &lt;code&gt;&amp;lt;ContentPage&amp;gt;&lt;/code&gt; can only have one object in it. But, the reason we are using the &lt;code&gt;&amp;lt;ContentPage.Content&amp;gt;&lt;/code&gt; object is because it can contain multiple objects. The &lt;code&gt;&amp;lt;StackLayout&amp;gt;&lt;/code&gt; will literally stack objects either vertically (by default) or horizontally. The &lt;code&gt;&amp;lt;Label&amp;gt;&lt;/code&gt; object is easiest way to get text to display on screen.&lt;/p&gt;
&lt;p&gt;Save the file, then launch the debugger. The first time launching in the emulator may take some time&amp;hellip; maybe several minutes&amp;hellip; but eventually you will see it running.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Since this is running on Windows without a Mac, the project that runs needs to be the Lavender.Android project. Also, when you run this, you&amp;rsquo;ll want to make sure you have the Android SDK installed for the version(s) of Android you&amp;rsquo;re targeting.
To manage your SDK tools, you can find a button for &amp;ldquo;Open Android SDK Manager&amp;rdquo; in the toolbar.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;images/xamarin-manage-android-sdks.png&#34; alt=&#34;Manage Android SDKs&#34;&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;You will see this once the project finishes building, the emulator starts, and the app installs in the emulator:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;images/xamarin-debug-mobile-project.png&#34; alt=&#34;Debugging a Xamarin project&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;add-data-binding-between-the-view-and-the-view-model&#34;&gt;Add Data Binding Between the View and the View Model&lt;/h2&gt;
&lt;p&gt;Add a label control that will bind to the &lt;code&gt;Name&lt;/code&gt; attribute of a view model. Update &lt;code&gt;MainPage.xaml&lt;/code&gt; to have this code:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;&amp;lt;?xml version=&amp;quot;1.0&amp;quot; encoding=&amp;quot;utf-8&amp;quot; ?&amp;gt;
&amp;lt;ContentPage xmlns=&amp;quot;http://xamarin.com/schemas/2014/forms&amp;quot;
             xmlns:x=&amp;quot;http://schemas.microsoft.com/winfx/2009/xaml&amp;quot;
             xmlns:local=&amp;quot;clr-namespace:Lavender&amp;quot;
             x:Class=&amp;quot;Lavender.MainPage&amp;quot;&amp;gt;
  &amp;lt;ContentPage.Content&amp;gt;
    &amp;lt;StackLayout&amp;gt;
      &amp;lt;Label Text=&amp;quot;{Binding Name,StringFormat=&#39;Hello, \{0\}!&#39;}&amp;quot; FontSize=&amp;quot;Large&amp;quot; /&amp;gt;
    &amp;lt;/StackLayout&amp;gt;
  &amp;lt;/ContentPage.Content&amp;gt;
&amp;lt;/ContentPage&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;blockquote&gt;
&lt;p&gt;It&amp;rsquo;s worth highlighting that these UI changes are being made in the shared library. This is reusable code that both Android and iOS will leverage. The Android and iOS specific projects are &lt;em&gt;not&lt;/em&gt; being modified. Yet, the controls being displayed are the same native controls that you would get if you were building this app for Android using Java or for iOS using Objective-C or Swift. Not only is the code in a shared library, but the executable is &lt;em&gt;not&lt;/em&gt; running in a VM like would be the case for portable JavaScript solutions.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Create a new class in the &lt;code&gt;ViewModels&lt;/code&gt; folder. Call it &lt;code&gt;MainPageViewModel.cs&lt;/code&gt; and put this code inside:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;namespace Lavender.ViewModels
{
  public class MainPageViewModel
  {
    public string Name { get; set; }

    public MainPageViewModel()
    {
      Name = &amp;quot;Anonymous&amp;quot;;
    }
  }
}
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;The &lt;code&gt;Name&lt;/code&gt; property is what we&amp;rsquo;ll use for data binding. And, we&amp;rsquo;re setting the value to &lt;code&gt;Anonymous&lt;/code&gt; for now.&lt;/p&gt;
&lt;p&gt;Then, update the &lt;code&gt;MainPage.xaml.cs&lt;/code&gt; code-behind file to use the &lt;code&gt;MainPageViewModel&lt;/code&gt; class as its binding context.&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;using Lavender.ViewModels;
using Xamarin.Forms;

namespace Lavender
{
  public partial class MainPage : ContentPage
  {
    private readonly MainPageViewModel viewModel;

    public MainPage()
    {
      InitializeComponent();
      viewModel = new MainPageViewModel();
      BindingContext = viewModel;
    }
  }
}
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Compile and debug the project with that change. You will see it in the emulator.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://quakkels.com/images/xamarin-hello-anonymous.png&#34; alt=&#34;Xamarin Hello Anonymous&#34;&gt;&lt;/p&gt;
&lt;p&gt;This shows that &lt;code&gt;MainPageViewModel&lt;/code&gt; is being bound as the context in &lt;code&gt;MainPage.xaml.cs&lt;/code&gt; and the value that was set on initialization is &amp;ldquo;Anonymous&amp;rdquo; and that is being passed to the &lt;code&gt;MainPage.xaml&lt;/code&gt; view correctly.&lt;/p&gt;
&lt;p&gt;Now let&amp;rsquo;s do something with the value entered by the user.&lt;/p&gt;
&lt;h2 id=&#34;add-form-to-let-the-user-update-their-name&#34;&gt;Add Form to Let the User Update Their Name&lt;/h2&gt;
&lt;p&gt;Update &lt;code&gt;MainPage.xaml&lt;/code&gt; to add form controls allowing the user to enter and submit their actual name.&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;&amp;lt;?xml version=&amp;quot;1.0&amp;quot; encoding=&amp;quot;utf-8&amp;quot; ?&amp;gt;
&amp;lt;ContentPage xmlns=&amp;quot;http://xamarin.com/schemas/2014/forms&amp;quot;
             xmlns:x=&amp;quot;http://schemas.microsoft.com/winfx/2009/xaml&amp;quot;
             xmlns:local=&amp;quot;clr-namespace:Lavender&amp;quot;
             x:Class=&amp;quot;Lavender.MainPage&amp;quot;&amp;gt;
  &amp;lt;ContentPage.Content&amp;gt;
    &amp;lt;StackLayout&amp;gt;
      &amp;lt;Label Text=&amp;quot;{Binding Name,StringFormat=&#39;Hello, \{0\}!&#39;}&amp;quot; FontSize=&amp;quot;Large&amp;quot; /&amp;gt;
      &amp;lt;Label Text=&amp;quot;Name&amp;quot; /&amp;gt;
      &amp;lt;Entry Text=&amp;quot;{Binding NameEntry}&amp;quot; /&amp;gt;
      &amp;lt;Button x:Name=&amp;quot;Button&amp;quot; Text=&amp;quot;Submit&amp;quot; Command=&amp;quot;{Binding SubmitCommand}&amp;quot; /&amp;gt;
    &amp;lt;/StackLayout&amp;gt;
  &amp;lt;/ContentPage.Content&amp;gt;
&amp;lt;/ContentPage&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;There are two elements that bind to properties that we haven&amp;rsquo;t created yet. &lt;code&gt;&amp;lt;Entry Text=&amp;quot;{Binding NameEntry}&amp;quot; /&amp;gt;&lt;/code&gt; and &lt;code&gt;&amp;lt;Button x:Name=&amp;quot;Button&amp;quot; Text=&amp;quot;Submit&amp;quot; Command=&amp;quot;{Binding SubmitCommand}&amp;quot; /&amp;gt;&lt;/code&gt; will require us to change the view model.&lt;/p&gt;
&lt;p&gt;But, before we make changes to the view model, we need to create a new class that will facilitate notifying the view when the data in the view model changes.&lt;/p&gt;
&lt;p&gt;Create a new file in the &lt;code&gt;ViewModels&lt;/code&gt; folder and call it &lt;code&gt;ViewModelBase.cs&lt;/code&gt;. Then put this code inside:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Runtime.CompilerServices;

namespace Lavender.ViewModels
{
  public abstract class ViewModelBase : INotifyPropertyChanged
  {

    public event PropertyChangedEventHandler PropertyChanged;
    protected void OnPropertyChanged([CallerMemberName] string propertyName = &amp;quot;&amp;quot;)
    {
      var changed = PropertyChanged;
      if (changed == null)
        return;

      changed.Invoke(this, new PropertyChangedEventArgs(propertyName));
    }

    protected bool SetProperty&amp;lt;T&amp;gt;(ref T backingStore, T value,
      [CallerMemberName]string propertyName = &amp;quot;&amp;quot;,
      Action onChanged = null)
    {
      if (EqualityComparer&amp;lt;T&amp;gt;.Default.Equals(backingStore, value))
      {
        return false;
      }

      backingStore = value;
      onChanged?.Invoke();
      OnPropertyChanged(propertyName);
      return true;
    }
  }
}
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;This abstract class gives us the &lt;code&gt;SetProperty&amp;lt;T&amp;gt;()&lt;/code&gt; method which both changes the property&amp;rsquo;s value, &lt;em&gt;and&lt;/em&gt; it notifies the UI so it knows to display the new value.&lt;/p&gt;
&lt;p&gt;Now let&amp;rsquo;s update &lt;code&gt;MainPageViewModel.cs&lt;/code&gt; to use this new abstract class. We&amp;rsquo;ll also add the new properties that the view needs for binding.&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;using System.Windows.Input;
using Xamarin.Forms;

namespace Lavender.ViewModels
{
  public class MainPageViewModel : ViewModelBase
  {
    public string NameEntry { get; set; }

    private string _name;
    public string Name
    {
      get { return _name; }
      set { SetProperty(ref _name, value); }
    }

    public ICommand SubmitCommand { get; }

    public MainPageViewModel()
    {
      Name = &amp;quot;Anonymous&amp;quot;;
      SubmitCommand = new Command(() =&amp;gt; { Name = NameEntry; });
    }
  }
}
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;code&gt;MainPageViewModel&lt;/code&gt; now inherits from &lt;code&gt;ViewModelBase&lt;/code&gt; which give us the &lt;code&gt;SetProperty()&lt;/code&gt; method. This class also has new properties now: &lt;code&gt;NameEntry&lt;/code&gt; to support the name entry field, and &lt;code&gt;SubmitCommand&lt;/code&gt; to support the submit button. The property &lt;code&gt;Name&lt;/code&gt; has also been updated to use the &lt;code&gt;SetProperty()&lt;/code&gt; method.&lt;/p&gt;
&lt;p&gt;When we run the debugger, now we see this:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://quakkels.com/images/xamarin-hello-anonymous-form.png&#34; alt=&#34;Xamarin mobile app with a form to enter the user&amp;rsquo;s name.&#34;&gt;&lt;/p&gt;
&lt;p&gt;And submitting a name shows this:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://quakkels.com/images/xamarin-hello-anonymous-form-showing-name.png&#34; alt=&#34;Xamarin mobile app with a form showing user&amp;rsquo;s name.&#34;&gt;&lt;/p&gt;
&lt;p&gt;There you have it. These are the basic building blocks to get started building mobile applications using Xamarin.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Home Gym Outfitting; Train with a Sled</title>
      <link>https://quakkels.com/posts/home_gym_outfitting_train_with_a_sled/</link>
      <pubDate>Mon, 13 May 2019 00:00:00 +0000</pubDate>
      
      <guid>https://quakkels.com/posts/home_gym_outfitting_train_with_a_sled/</guid>
      <description>&lt;p&gt;Outfitting a home gym with a sled for drags and arm-over-arm pulls is simple. You don&amp;rsquo;t need to spend hundreds of dollars on equipment or gym memberships in order to train with a sled. You also don&amp;rsquo;t really need any tools or handyman skills to get started.&lt;/p&gt;
&lt;p&gt;When I first wanted to add arm-over-arm pulls to work my cardio, grip, arms, and back, I looked around and found a &lt;a target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34; href=&#34;https://www.roguefitness.com/conditioning/strength-equipment/sleds&#34;&gt;few different options&lt;/a&gt;. And some of them were rather economical. However, most are still priced near a hundred dollars and they don&amp;rsquo;t include a rope nor a strap long enough for arm-over-arm pulls, which I&amp;rsquo;d have to purchase separately.&lt;/p&gt;
&lt;p&gt;There&amp;rsquo;s a simpler and cheaper alternative to those econo sleds. It can be found at the local hardware store.&lt;/p&gt;
&lt;p&gt;This tow strap cost me just about ten dollars.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://quakkels.com/images/new_tow_strap.png&#34; alt=&#34;20&#39; Tow Strap&#34;&gt;&lt;/p&gt;
&lt;p&gt;When I combine it with a few of my bumper plates, it does exactly what I need. Ta-da! A &amp;ldquo;sled&amp;rdquo; for my home gym.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://quakkels.com/images/first_sled_experiment.png&#34; alt=&#34;Arm-over-arm pull with a 20&#39; tow strap&#34;&gt;&lt;/p&gt;
&lt;p&gt;This first experiment was awesome. It was easy to set up and it worked. Though, I did I noticed wear on the strap underneath the bumper plates. At first I thought it was no big deal. But if I had to replace the fraying strap a few times my costs would eventually be comparable with if I had bought an actual post style sled.&lt;/p&gt;
&lt;p&gt;So to address the wear on the strap, I made a sheath using a an easily replaceable resource I frequently have lying around; a piece of cardboard.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://quakkels.com/images/sled_experiment_with_cardboard_sheeth.png&#34; alt=&#34;A more resilient sled using a 20&#39; tow strap&#34;&gt;&lt;/p&gt;
&lt;p&gt;I&amp;rsquo;m really happy with this setup. The cardboard works well on my reasonably smooth basement floor. It will eventually wear, but with the amount of online shopping my family does we&amp;rsquo;re never lacking fresh cardboard. Though, if the dragging surface were rougher, I&amp;rsquo;d imagine I&amp;rsquo;d have to use a different solution.&lt;/p&gt;
&lt;p&gt;Adding useful pieces of equipment to a home gym doesn&amp;rsquo;t have to be expensive or complicated. And, simple additions like this keep workouts engaging and fun.&lt;/p&gt;
&lt;p&gt;Benefits of sled training with a tow strap are numerous.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;Simple.&lt;/strong&gt; Really hard to mess up.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Cheap.&lt;/strong&gt; Just time, a stack of weights, and a ten dollar tow strap is all the investment you need to get started.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Safe.&lt;/strong&gt; You can do these by yourself. If you fail, there&amp;rsquo;s nothing that can fall and crush you.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Versatile.&lt;/strong&gt; You can do these heavy for strength. You can do these lighter for cardio. You can drag it forward or backward. Or, you can pull it arm-over-arm. Using just a tow strap you have enough equipment for a full body workout.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Things you can do with this include &lt;a href=&#34;https://youtu.be/MW5HfC5V_YI&#34; target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34;&gt;Arm-Over-Arm Pulls&lt;/a&gt;, and &lt;a href=&#34;https://www.youtube.com/watch?v=KKEceC_t2bY&#34; target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34;&gt;Reverse Sled Drag&lt;/a&gt;.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Getting Started with Django</title>
      <link>https://quakkels.com/posts/getting-started-python-django-vs-code/</link>
      <pubDate>Tue, 23 Apr 2019 00:00:00 +0000</pubDate>
      
      <guid>https://quakkels.com/posts/getting-started-python-django-vs-code/</guid>
      <description>&lt;p&gt;Django is a Python framework that I&amp;rsquo;ve written about before. I&amp;rsquo;ve &lt;a href=&#34;https://quakkels.com/posts/asp-net-mvc-compared-to-dango/&#34;&gt;compared Django to ASP.NET MVC&lt;/a&gt;. But, I didn&amp;rsquo;t go into much detail about how to actually use Django to create a data driven website. That&amp;rsquo;s what I&amp;rsquo;ll cover now.&lt;/p&gt;
&lt;p&gt;The goal for this &amp;lsquo;Getting Started&amp;rsquo; project is to get familiar with the basics of developing data driven web applications using Django, Models, Views, Templates, URLs, and Forms. By the end we&amp;rsquo;ll have a simple contact form that saves user submissions to the database, and displays that data to an administrator user. It will not be a completed site, but it will introduce basic the building blocks of website development in Django.&lt;/p&gt;
&lt;p&gt;If you&amp;rsquo;d like to refer to the end goal of this article, you can &lt;a href=&#34;https://github.com/quakkels/companionresource_djangosite&#34; target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34;&gt;find it on GitHub&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id=&#34;prerequisites&#34;&gt;Prerequisites&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Windows 10
&lt;ul&gt;
&lt;li&gt;Or your own favorite OS. But I&amp;rsquo;ll be writing from a Windows perspective.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Python 3.6 or above.&lt;/li&gt;
&lt;li&gt;VS Code with Microsoft&amp;rsquo;s Python extension installed.
&lt;ul&gt;
&lt;li&gt;Or your own favorite Python IDE/editor, but I&amp;rsquo;ll be writing from the VS Code perspective&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;create-project&#34;&gt;Create Project&lt;/h2&gt;
&lt;p&gt;Make the project directory and navigate inside.&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;&amp;gt; mkdir django-project &amp;amp;&amp;amp; cd django-project
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Create a Virtual Environment to isolate project specific dependencies.&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;&amp;gt; python -m venv django-env
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Activate the venv. (This is the Windows command.)&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;&amp;gt; django-env\Scripts\activate.bat
&lt;/code&gt;&lt;/pre&gt;&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; Once inside an activated venv, you can leave it to work on other things by using the &lt;code&gt;deactivate&lt;/code&gt; command.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Install Django inside the active venv. (You don&amp;rsquo;t want to install packages globally. Make sure that the venv is active.)&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;(django-env)&amp;gt; pip install django
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Use &lt;code&gt;django-admin&lt;/code&gt; to create the new Django application.&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;(django-env)&amp;gt; django-admin startproject djangosite
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;That created a new folder called &lt;code&gt;djangosite&lt;/code&gt; and it placed boilerplate files inside. &lt;code&gt;manage.py&lt;/code&gt; is one of those files and it&amp;rsquo;s what will used from now on to run Django commands.&lt;/p&gt;
&lt;p&gt;Run the development Django server from inside the site&amp;rsquo;s folder.&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;(django-env)&amp;gt; cd djangosite
(django-env)&amp;gt; python manage.py runserver
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Visit localhost:8000 to verify that it&amp;rsquo;s working. Then exit the server with Ctrl+Break.&lt;/p&gt;
&lt;p&gt;When the Django server ran, Django automatically created a db.sqlite3 file in the project folder. &lt;a href=&#34;https://docs.djangoproject.com/en/2.2/ref/settings/#databases&#34; target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34;&gt;Read more about configuring different database backends&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Use VS Code to open the &lt;code&gt;django-project&lt;/code&gt; folder that houses the virtual environment folder and the Django app folder. This can be done from the terminal, or manually inside VS Code.&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;&amp;gt; code ..\. 
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Open &lt;code&gt;djangosite\urls.py&lt;/code&gt;. The imports for Django will probably be shown as missing modules because Django was installed in the venv and not globally. to fix this, press &lt;code&gt;ctrl+shift+p&lt;/code&gt; then execute the command &lt;code&gt;Python: Select Interpretter&lt;/code&gt;. Find &lt;code&gt;.\django-env\Scripts\python.exe&lt;/code&gt; from the list and select it. Then VS Code will stop showing the Django imports as errors.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;For more VS Code information visit &lt;a href=&#34;https://code.visualstudio.com/docs/python/python-tutorial&#34; target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34;&gt;Getting Started with Python in VS Code&lt;/a&gt;.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;add-a-custom-django-view&#34;&gt;Add a Custom Django View&lt;/h2&gt;
&lt;p&gt;To add a &amp;lsquo;Hello World&amp;rsquo; page, create a new file in &lt;code&gt;django-project\djangosite\djangosite&lt;/code&gt; called &lt;code&gt;views.py&lt;/code&gt;. Add the following code.&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;from django.http import HttpResponse

def welcome(request):
  return HttpResponse(&amp;quot;Hello, World!&amp;quot;)
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;To tell Django when to execute this welcome view, edit &lt;code&gt;urls.py&lt;/code&gt; so it looks like this:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;from django.contrib import admin
from django.urls import path, re_path

from .views import welcome

urlpatterns = [
    path(&#39;admin/&#39;, admin.site.urls),
    re_path(&#39;^$&#39;, welcome)
]
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Browse to localhost:8000 and see the custom message.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://quakkels.com/images/python_django_hello_world.png&#34; alt=&#34;Django Hello World&#34;&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Let&amp;rsquo;s take a quick break to go over some Django concepts.&lt;/p&gt;
&lt;h3 id=&#34;app&#34;&gt;App&lt;/h3&gt;
&lt;p&gt;A Django App is a python package that acts as a little web application of its own. With it&amp;rsquo;s own Models, Views, Templates, and URLs. Most Django sites use several apps. It is also possible to write an app such that it can be reused in other Django projects.&lt;/p&gt;
&lt;h3 id=&#34;model&#34;&gt;Model&lt;/h3&gt;
&lt;p&gt;A Django Model is a data model that maps to a database table. This introduces the concept of &lt;em&gt;Migrations&lt;/em&gt;.&lt;/p&gt;
&lt;h3 id=&#34;migrations&#34;&gt;Migrations&lt;/h3&gt;
&lt;p&gt;The model will usually change as the site is developed.
A migration will update the corresponding database table from previous versions to the new version of the code. As migrations get more complicated, there may be need to write custom migration scripts.&lt;/p&gt;
&lt;h3 id=&#34;views&#34;&gt;Views&lt;/h3&gt;
&lt;p&gt;Views in Django are like Controllers in ASP.NET MVC. They are what connect a model with a template.&lt;/p&gt;
&lt;h3 id=&#34;templates&#34;&gt;Templates&lt;/h3&gt;
&lt;p&gt;Templates in Django are like Views in ASP.NET MVC. They are the display layer; the HTML that will render in the browser.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;add-a-custom-django-model&#34;&gt;Add a Custom Django Model&lt;/h2&gt;
&lt;p&gt;Show migrations&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;(django-env)&amp;gt; python manage.py showmigrations
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Execute those migrations&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;(django-env)&amp;gt; python manage.py migrate
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Now create a new Django app. For this example, it will handle the functionality for a contact form.&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;(django-env)&amp;gt; python manage.py startapp contactform
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Move into the new &lt;code&gt;contactform&lt;/code&gt; directory and notice that Django has created a bunch of boilerplate code for us.&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;(django-env)&amp;gt; cd contactform
(django-env)&amp;gt; dir
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Add this new app to the Django site. Open &lt;code&gt;settings.py&lt;/code&gt; in the &lt;code&gt;djangosite&lt;/code&gt; folder, and add the &lt;code&gt;contactform&lt;/code&gt; app to the list of installed apps. &lt;code&gt;INSTALLED_APPS&lt;/code&gt; should look like this:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;INSTALLED_APPS = [
    &#39;django.contrib.admin&#39;,
    &#39;django.contrib.auth&#39;,
    &#39;django.contrib.contenttypes&#39;,
    &#39;django.contrib.sessions&#39;,
    &#39;django.contrib.messages&#39;,
    &#39;django.contrib.staticfiles&#39;,
    &#39;contactform&#39;
]
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Then, open the &lt;code&gt;models.py&lt;/code&gt; file in the contact form app and add the class that will represent the contact form.&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;from django.db import models

class ContactForm(models.Model):
    HOW_DID_YOU_HEAR_ABOUT_US_CHOICES = (
        (&#39;SE&#39;, &#39;Search Engine&#39;),
        (&#39;Q&#39;, &#39;Quakkels.com&#39;),
        (&#39;F&#39;, &#39;From a friend&#39;),
        (&#39;O&#39;, &#39;Other&#39;)
    )

    name = models.CharField(max_length=50)
    email = models.EmailField(max_length=50)
    comments = models.CharField(max_length=500)
    how_did_you_hear_about_us = models.CharField(max_length=2, choices=HOW_DID_YOU_HEAR_ABOUT_US_CHOICES)
&lt;/code&gt;&lt;/pre&gt;&lt;blockquote&gt;
&lt;p&gt;More information about Django models can be found &lt;a href=&#34;https://docs.djangoproject.com/en/2.2/topics/db/models/&#34; target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34;&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;After the model is saved, create the new migration script.&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;(django-env)&amp;gt; python manage.py makemigrations
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Run the migration.&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;(django-env)&amp;gt; python manage.py migrate
&lt;/code&gt;&lt;/pre&gt;&lt;blockquote&gt;
&lt;p&gt;If you&amp;rsquo;re curious about what the SQLite database tables look like, you can download something like &lt;a href=&#34;https://sqlitebrowser.org/dl/&#34; target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34;&gt;DB Browser for SQLite&lt;/a&gt;. Table names will be named after the model with the app name as the prefix. So the table for ContactForm will be called &lt;code&gt;contactform_contactform&lt;/code&gt;.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;register-custom-model-in-admin&#34;&gt;Register Custom Model in Admin&lt;/h2&gt;
&lt;p&gt;To make contact form submissions available to be read by a site administrator, &lt;code&gt;ContactForm&lt;/code&gt; needs to be registered in the admin area.&lt;/p&gt;
&lt;p&gt;Open &lt;code&gt;contactform\admin.py&lt;/code&gt; and add this code to register the ContactForm model.&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;from django.contrib import admin
from .models import ContactForm

@admin.register(ContactForm)
class ContactFormAdmin(admin.ModelAdmin):
    list_display = (&#39;name&#39;, &#39;email&#39;)
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Create a super user for logging into the site&amp;rsquo;s admin area.&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;(django-env)&amp;gt; python manage.py createsuperuser
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Now when the development server runs, you&amp;rsquo;ll be able to view and edit ContactForms in the Admin area by navigating to localhost:8000/admin and using the new super user to log in.&lt;/p&gt;
&lt;h2 id=&#34;create-a-custom-django-template&#34;&gt;Create a Custom Django Template&lt;/h2&gt;
&lt;p&gt;Double check the terminal&amp;rsquo;s working directory is the &lt;code&gt;contactform&lt;/code&gt; folder inside of &lt;code&gt;djangosite&lt;/code&gt;.&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;(django-env)&amp;gt; pwd
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Switch to &lt;code&gt;contactform&lt;/code&gt; if it&amp;rsquo;s not the working directory.&lt;/p&gt;
&lt;p&gt;Create a new folder for custom templates.&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;(django-env)&amp;gt; mdkir templates
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;In VS Code, create a file in the new templates folder called &lt;code&gt;contactform.html&lt;/code&gt; for the contact form. Put the following code in the file for now.&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;&amp;lt;!DOCTYPE html&amp;gt;
&amp;lt;html&amp;gt;
    &amp;lt;head&amp;gt;
      &amp;lt;title&amp;gt;Contact Form&amp;lt;/title&amp;gt;
    &amp;lt;/head&amp;gt;
    &amp;lt;body&amp;gt;
        &amp;lt;h1&amp;gt;Contact Form&amp;lt;/h1&amp;gt;
    &amp;lt;/body&amp;gt;
&amp;lt;/html&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Next, update &lt;code&gt;contactform\views.py&lt;/code&gt; with this code.&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;from django.shortcuts import render

def contactform(request):
    return render(request, &amp;quot;contactform.html&amp;quot;)
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Notice that the &lt;code&gt;render()&lt;/code&gt; function is used here instead of returning &lt;code&gt;HttpResponse()&lt;/code&gt; directly like the &amp;ldquo;Hello, World!&amp;rdquo; view does. The &lt;code&gt;render()&lt;/code&gt; function will use the template for the html.&lt;/p&gt;
&lt;p&gt;To make the template visible from the browser, we need to route requests to the view based on the URL.&lt;/p&gt;
&lt;p&gt;Use VS Code to create a &lt;code&gt;urls.py&lt;/code&gt; file inside the &lt;code&gt;contactform&lt;/code&gt; folder. Put this code inside it.&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;from django.urls import re_path

from .views import contactform

urlpatterns = [
    re_path(&#39;contactform$&#39;, contactform)
]
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;The &lt;code&gt;re_path()&lt;/code&gt; method uses a string as a regular expression. The &lt;code&gt;&#39;contactform$&#39;&lt;/code&gt; ensures that it only matches on paths that end in &lt;code&gt;contactform&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Since &lt;code&gt;djangosite\urls.py&lt;/code&gt; is what Django uses to route urls, it needs to be aware of the new &lt;code&gt;contactform\urls.py&lt;/code&gt;. Update it with this code.&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;from django.contrib import admin
from django.urls import path, re_path, include

from .views import welcome

urlpatterns = [
    path(&#39;admin/&#39;, admin.site.urls),
    re_path(&#39;^contactform/&#39;, include(&#39;contactform.urls&#39;)),
    path(&#39;&#39;, welcome),
]
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;code&gt;&#39;^contactform/&#39;&lt;/code&gt; is a regular expression that makes sure matching paths begin with &lt;code&gt;contactform&lt;/code&gt;. This is a prefix for everything in the contactform app. So the complete matching path will be &lt;code&gt;localhost:8000/contactform/contactform&lt;/code&gt;. For more information read the &lt;a href=&#34;https://docs.djangoproject.com/en/2.2/topics/http/urls/&#34; target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34;&gt;Django documentation&lt;/a&gt;.&lt;/p&gt;
&lt;h1 id=&#34;create-a-form&#34;&gt;Create a Form&lt;/h1&gt;
&lt;p&gt;Create a new file in &lt;code&gt;contactform&lt;/code&gt; called &lt;code&gt;forms.py&lt;/code&gt; and put this code in it.&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;from django.forms import ModelForm
from .models import ContactForm

class ContactFormForm(ModelForm):
    class Meta:
        model = ContactForm
        fields = (&#39;name&#39;, &#39;email&#39;, &#39;comments&#39;, &#39;how_did_you_hear_about_us&#39;)
&lt;/code&gt;&lt;/pre&gt;&lt;blockquote&gt;
&lt;p&gt;&lt;em&gt;It was at this time that I started regretting how the &lt;code&gt;ContactForm&lt;/code&gt; model was named. To stick with Django conventions, this form class will be the name of the model with &amp;ldquo;Form&amp;rdquo; appended to it. Hence; &lt;code&gt;ContactFormForm&lt;/code&gt;. Future me will not make this mistake.&lt;/em&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Update &lt;code&gt;contactform\views.py&lt;/code&gt; so it will send the new form class as an object to the template.&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;from django.shortcuts import render
from django.http import HttpResponse
from .forms import ContactFormForm
from .models import ContactForm

def contactform(request):
    form = ContactFormForm()
    context = { 
        &#39;form&#39; : form,
    }

    return render(request, &amp;quot;contactform.html&amp;quot;, context)
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Update the &lt;code&gt;contactform.html&lt;/code&gt; template to use the &lt;code&gt;form&lt;/code&gt; object in the &lt;code&gt;context&lt;/code&gt;.&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;&amp;lt;!DOCTYPE html&amp;gt;
&amp;lt;html&amp;gt;
    &amp;lt;head&amp;gt;
      &amp;lt;title&amp;gt;Contact Form&amp;lt;/title&amp;gt;
    &amp;lt;/head&amp;gt;
    &amp;lt;body&amp;gt;
        &amp;lt;h1&amp;gt;Contact Form&amp;lt;/h1&amp;gt;
        &amp;lt;form method=&amp;quot;POST&amp;quot;&amp;gt;
            {% csrf_token %} &amp;lt;!--this token is required in order to prevent CSRF attacks--&amp;gt;
            {{ form }} &amp;lt;!-- the form object will render our FormModel --&amp;gt;
            &amp;lt;button type=&amp;quot;submit&amp;quot;&amp;gt;Send&amp;lt;/button&amp;gt;
        &amp;lt;/form&amp;gt;
    &amp;lt;/body&amp;gt;
&amp;lt;/html&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;You can find more details about how to properly use templates &lt;a href=&#34;https://docs.djangoproject.com/en/2.2/ref/templates/&#34; target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34;&gt;here&lt;/a&gt;. The code above has much room for improvement.&lt;/p&gt;
&lt;p&gt;Two things worth noting here are &lt;code&gt;{% csrf_token %}&lt;/code&gt; and &lt;code&gt;{{ form }}&lt;/code&gt;. The code for CSRF Token prevents this page from being vulnerable to cross site request forgery attacks. The &lt;code&gt;form&lt;/code&gt; object is the &lt;code&gt;ContactFrom&lt;/code&gt; model converted to HTML form elements via the &lt;code&gt;ModelForm&lt;/code&gt; class.&lt;/p&gt;
&lt;p&gt;Update the view to accept and save a Contact Form submission.&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;from django.shortcuts import render, redirect
from django.http import HttpResponse
from .forms import ContactFormForm
from .models import ContactForm

def contactform(request):
    form = ContactFormForm()
    context = { &amp;quot;form&amp;quot; : form }

    if request.method != &amp;quot;POST&amp;quot;:
        return render(request, &amp;quot;contactform.html&amp;quot;, context)
    
    form = ContactFormForm(data=request.POST)

    if not form.is_valid():
        context[&amp;quot;form&amp;quot;] = form
        return render(request, &amp;quot;contactform.html&amp;quot;, context)
    
    form.save()
    return redirect(&amp;quot;/&amp;quot;)
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;This will render the form on first request. When the form is submitted it will check the values against what the model expects. If the values aren&amp;rsquo;t valid it will render the form again (ideally to inform the user there were problems and give them a chance to correct mistakes.) If the values are valid, then it will save a new record in the database which an admin will be able to see in Django&amp;rsquo;s administration section. Once the record is saved, the user gets redirected to the site root.&lt;/p&gt;
&lt;h2 id=&#34;summary&#34;&gt;Summary&lt;/h2&gt;
&lt;p&gt;There&amp;rsquo;s a lot more to Django, but this is a fair amount of information to get started with it. What we wrote has an authenticated admin area, a &amp;lsquo;hello&amp;rsquo; home page, and a data driven form that persists data to a database. This isn&amp;rsquo;t a completed web application, but we did cover a lot of essential building blocks.&lt;/p&gt;
&lt;h2 id=&#34;resources&#34;&gt;Resources&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/quakkels/companionresource_djangosite&#34; target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34;&gt;Companion GitHub Repository&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://sqlitebrowser.org/dl/&#34; target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34;&gt;DB Browser for SQLite&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://docs.djangoproject.com/en/2.2/&#34; target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34;&gt;Django Documentation&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://docs.djangoproject.com/en/2.2/ref/settings/#databases&#34; target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34;&gt;Configure different database backends&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://docs.djangoproject.com/en/2.2/ref/forms/&#34; target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34;&gt;Forms&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://docs.djangoproject.com/en/2.2/topics/db/models/&#34; target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34;&gt;Models&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://docs.djangoproject.com/en/2.2/ref/templates/&#34; target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34;&gt;Templates&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://docs.djangoproject.com/en/2.2/topics/http/urls/&#34; target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34;&gt;URL Dispatcher&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>Configuring Vim When Using Git Bash on Windows</title>
      <link>https://quakkels.com/posts/configuring-vim-when-using-git-bash/</link>
      <pubDate>Wed, 17 Apr 2019 00:00:00 +0000</pubDate>
      
      <guid>https://quakkels.com/posts/configuring-vim-when-using-git-bash/</guid>
      <description>&lt;p&gt;Occasionally I become enamored with the idea of becoming a Vim expert, or at least a competent Vim user. I work primarily in Windows environments so, though the desire exists, there aren&amp;rsquo;t many good opportunities to build Vim habits. There is a &lt;a href=&#34;https://www.vim.org/download.php/#pc&#34; target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34;&gt;Vim on Windows release&lt;/a&gt; available. This has a GUI interface and an installer executable. Though if you have Git for Windows installed, then you already have Vim available. Git for Windows comes with the ever useful, Git Bash. And, lo! Git Bash has Vim.&lt;/p&gt;
&lt;p&gt;Firing up a quick Git Bash session is simple enough. And firing up vim from there is straightforward. Thankfully, my previous experience with exiting Vim saved me from an embarrassing search query in my browser history.&lt;/p&gt;
&lt;center&gt;
&lt;p&gt;&lt;img src=&#34;https://quakkels.com/images/exiting_vim_orly.jpeg&#34; alt=&#34;How to exit Vim&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;It&amp;rsquo;s an old meme, but it checks out. (&lt;code&gt;esc&lt;/code&gt;, &lt;code&gt;:&lt;/code&gt; then &lt;code&gt;q!&lt;/code&gt; to quit without saving, btw)&lt;/em&gt;&lt;/p&gt;
&lt;/center&gt;
&lt;h2 id=&#34;configuring-vim-in-git-bash&#34;&gt;Configuring Vim in Git Bash&lt;/h2&gt;
&lt;p&gt;Vim&amp;rsquo;s configuration can be customized with vimrc files. These files are scripts written in Vimscript. They run at initialization when Vim is opened. We can find out more information by using help commands inside Vim.&lt;/p&gt;
&lt;p&gt;First, open a Git Bash terminal and then open &lt;code&gt;vim&lt;/code&gt;. Then, in &lt;a href=&#34;https://www.howtoforge.com/vim-basics&#34; target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34;&gt;command mode&lt;/a&gt;, open the configuration help information with &lt;code&gt;:help vimrc&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;At this point we can see where Vim will look for custom vimrc files.&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;  Places for your personal initializations:
    Unix            $HOME/.vimrc or $HOME/.vim/vimrc
    OS/2            $HOME/.vimrc, $HOME/vimfiles/vimrc
                    or $VIM/.vimrc (or _vimrc)
    MS-Windows      $HOME/_vimrc, $HOME/vimfiles/vimrc
                    or $VIM/_vimrc
    Amiga           s:.vimrc, home:.vimrc, home:vimfiles:vimrc
                    or $VIM/.vimrc

  The files are searched in the order specified above and only the first
  one that is found is read.

  RECOMMENDATION: Put all your Vim configuration stuff in the
  $HOME/.vim/ directory ($HOME/vimfiles/ for MS-Windows). That makes it
  easy to copy it to another system.

&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Don&amp;rsquo;t be fooled. Since &lt;a href=&#34;https://github.com/git/git/commit/df5218b4c30b2fa1ba0d1ada4166ad85bc83be26&#34; target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34;&gt;Git Bash uses msys2&lt;/a&gt; to imitate a Unixy/Linuxy style system, Vim running inside Git Bash will be following Unix&amp;rsquo;s Conventions, rather than MS-Windows&#39;.&lt;/p&gt;
&lt;p&gt;Also let&amp;rsquo;s follow Vim&amp;rsquo;s recommendation for using the &lt;code&gt;$HOME/.vim/&lt;/code&gt; directory for configuration files.&lt;/p&gt;
&lt;p&gt;Make the directory:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;$ mkdir $HOME/.vim
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Then create the vimrc file:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;$ touch $HOME/.vim/vimrc
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;At this point, we have our empty initialization file for Vim. To make sure it&amp;rsquo;s working, I&amp;rsquo;ll add a command to turn on line numbering.&lt;/p&gt;
&lt;p&gt;Open the vimrc file using Vim:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;$ vim $HOME/.vim/vimrc
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Then, enter Insert Mode by pressing &lt;code&gt;i&lt;/code&gt; and enter three lines:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;&amp;quot; Custom Vim configuration

set number
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Save these changes by pressing &lt;code&gt;esc&lt;/code&gt; to leave Insert Mode and then enter &lt;code&gt;:wq&lt;/code&gt; to write the changes and then quit Vim.&lt;/p&gt;
&lt;p&gt;To check that it worked, open up the same file in Vim again and look for the line numbers.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://quakkels.com/images/vim_line_numbers.png&#34; alt=&#34;Vim configured to show line numbers&#34;&gt;&lt;/p&gt;
&lt;p&gt;It worked!&lt;/p&gt;
&lt;p&gt;There are many more configuration changes you can make. Be aware that Vim already has default configuration set that is targeted towards programmers. To find all scripts (remember that configuration is set via initialization scripts) you can use the command &lt;code&gt;:scriptnames&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;When I execute &lt;code&gt;:scriptnames&lt;/code&gt; in Vim running in Git Bash, I see &lt;code&gt;/etc/vimrc&lt;/code&gt; at the very top of the list. This makes sense since the &lt;code&gt;etc&lt;/code&gt; folder is where Linux systems place a lot of their configuration. However, since this is in Windows, we need to figure out where the &lt;code&gt;etc&lt;/code&gt; folder is. It&amp;rsquo;s not in &lt;code&gt;C:\&lt;/code&gt; nor in the &lt;code&gt;$HOME&lt;/code&gt; directory. But, since Git Bash is mimicking a Linux system, we should be able to find it along with the other Git Bash files.&lt;/p&gt;
&lt;p&gt;Since I&amp;rsquo;m running the 64 bit version of Git, I found the etc folder in &lt;code&gt;C:\Program Files\Git&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Inside Git Bash, we can get there with:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;$ cd c\&amp;quot;Program Files&amp;quot;\Git\etc
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Then, to take a quick peek at &lt;code&gt;vimrc&lt;/code&gt; just execute:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;$ cat vimrc
&lt;/code&gt;&lt;/pre&gt;&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; I would &lt;em&gt;not&lt;/em&gt; recommend attempting to change anything in &lt;code&gt;etc&lt;/code&gt;. Instead modify Vim&amp;rsquo;s configuration using files in the &lt;code&gt;$HOME\.vim\&lt;/code&gt; folder.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Armed with this information there&amp;rsquo;s a lot of stuff you can now customize. Here are a few more resources:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://benmccormick.org/2014/07/14/learning-vim-in-2014-configuring-vim&#34; target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34;&gt;Learning Vim in 2014: Configuring Vim&lt;/a&gt;&lt;br&gt;A few years old, but I really like how this author gets into the details rather than just telling you to copy/paste a &lt;code&gt;.vimrc&lt;/code&gt; file from GitHub.&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://linuxhint.com/configure_vim_vimrc/&#34; target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34;&gt;Configure Vim with vimrc&lt;/a&gt;&lt;br&gt;
Similar to Learning Vim in 2014, but more recent. Also has Linux specific informmatin which you will want to ignore if you&amp;rsquo;re running in Windows.&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://learnvimscriptthehardway.stevelosh.com/&#34; target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34;&gt;Learn Vimscript the Hard Way&lt;/a&gt;&lt;br&gt; This ebook has an incredible amount of detail. It may be too much if you&amp;rsquo;re looking to just make quick changes. But it has a lot of great information if you want to dive into the deep end.&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://vim.rtorr.com/&#34; target=&#34;_blank&#34; rel=&#34;noopener noreferrer&#34;&gt;Vim Cheat Sheet&lt;/a&gt;&lt;br&gt;Excellent for discovering all the Vim shortcuts that people love so much.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Don&amp;rsquo;t forget to do ridiculous things like to configure VSCode&amp;rsquo;s terminal to use Git Bash which allows you to open Vim from inside VSCode. ;-)&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://quakkels.com/images/vim_inside_vscode.png&#34; alt=&#34;Run Vim from inside VSCode on Windows&#34;&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>MySQL Quick Reference</title>
      <link>https://quakkels.com/posts/mysql-quick-reference/</link>
      <pubDate>Sat, 16 Mar 2019 00:00:00 +0000</pubDate>
      
      <guid>https://quakkels.com/posts/mysql-quick-reference/</guid>
      <description>&lt;h2 id=&#34;shell-commands&#34;&gt;Shell Commands&lt;/h2&gt;
&lt;h3 id=&#34;set-up-security-requirements&#34;&gt;Set up security requirements:&lt;/h3&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;$ sudo mysql_secure_installation
&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&#34;open-the-mysql-cli-client-and-login-using-a-password-and-the-specified-user&#34;&gt;Open the MySQL CLI client and login using a password and the specified user:&lt;/h3&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;$ sudo mysql -u {user} -p
&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&#34;mysql-queries-and-commands&#34;&gt;MySQL Queries and Commands&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;Note that MySQL will not execute anything until it encounters a semicolon &lt;code&gt;;&lt;/code&gt; which indicates the end of a statement. This allows us to enter multi-line statements.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;create-user&#34;&gt;Create User&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;CREATE&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;USER&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;newuser&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;@&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;localhost&amp;#39;&lt;/span&gt; IDENTIFIED &lt;span style=&#34;color:#66d9ef&#34;&gt;BY&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;password&amp;#39;&lt;/span&gt;;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;give-user-access-to-a-database&#34;&gt;Give User Access to a Database&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;GRANT&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;ALL&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;PRIVILEGES&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;ON&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt; . &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;TO&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;newuser&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;@&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;localhost&amp;#39;&lt;/span&gt;;
&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; FLUSH &lt;span style=&#34;color:#66d9ef&#34;&gt;PRIVILEGES&lt;/span&gt;;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;create-a-database-called-newstore&#34;&gt;Create a database called &lt;code&gt;newStore&lt;/code&gt;:&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;CREATE&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;DATABASE&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;IF&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;NOT&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;EXISTS&lt;/span&gt; newStore;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;create-a-new-table-in-a-database&#34;&gt;Create a new table in a database:&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;CREATE&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;TABLE&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;IF&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;NOT&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;EXISTS&lt;/span&gt; newTable (
&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt;   newTableID INT &lt;span style=&#34;color:#66d9ef&#34;&gt;PRIMARY&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;KEY&lt;/span&gt; AUTO_INCREMENT,
&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt;   firstName VARCHAR(&lt;span style=&#34;color:#ae81ff&#34;&gt;255&lt;/span&gt;) &lt;span style=&#34;color:#66d9ef&#34;&gt;not&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;null&lt;/span&gt;,
&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt;   lastName VARCHAR(&lt;span style=&#34;color:#ae81ff&#34;&gt;255&lt;/span&gt;) &lt;span style=&#34;color:#66d9ef&#34;&gt;not&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;null&lt;/span&gt;,
&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt;   email VARCHAR(&lt;span style=&#34;color:#ae81ff&#34;&gt;255&lt;/span&gt;) &lt;span style=&#34;color:#66d9ef&#34;&gt;not&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;null&lt;/span&gt;
&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; );
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;list-all-databases&#34;&gt;List all databases:&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;SHOW&lt;/span&gt; DATABASES;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;connect-to-a-database&#34;&gt;Connect to a database:&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; USE newStore;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;list-tables-in-a-database&#34;&gt;List tables in a database&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;SHOW&lt;/span&gt; TABLES;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;list-columns-in-a-table&#34;&gt;List columns in a table&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;SHOW&lt;/span&gt; COLUMNS &lt;span style=&#34;color:#66d9ef&#34;&gt;FROM&lt;/span&gt; newTable
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;execute-a-sql-script-from-file&#34;&gt;Execute a sql script from file&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;source&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;/&lt;/span&gt;path&lt;span style=&#34;color:#f92672&#34;&gt;/&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;to&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;/&lt;/span&gt;script.&lt;span style=&#34;color:#66d9ef&#34;&gt;sql&lt;/span&gt;;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;more-resources&#34;&gt;More Resources&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://www.digitalocean.com/community/tutorials/how-to-create-a-new-user-and-grant-permissions-in-mysql&#34;&gt;How To Create a New User and Grant Permissions in MySQL&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://dev.mysql.com/doc/&#34;&gt;MySQL Documentation&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://mariadb.com/kb/en/library/documentation/&#34;&gt;MariaDB Documentation&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>Gogs on Raspberry PI</title>
      <link>https://quakkels.com/posts/gogs-on-raspberry-pi/</link>
      <pubDate>Tue, 05 Mar 2019 00:00:00 +0000</pubDate>
      
      <guid>https://quakkels.com/posts/gogs-on-raspberry-pi/</guid>
      <description>&lt;p&gt;In a previous article &lt;a href=&#34;https://quakkels.com/posts/configure-headless-raspberry-pi-for-wifi-and-ssh/&#34;&gt;I configured a headless Raspberry Pi for Wifi and SSH&lt;/a&gt;. Next, I&amp;rsquo;ll set up a personal Gogs server on it.&lt;/p&gt;
&lt;h2 id=&#34;change-the-password&#34;&gt;Change the Password&lt;/h2&gt;
&lt;p&gt;First things first, change the password for the &lt;code&gt;pi&lt;/code&gt; user to something different than &lt;code&gt;raspberry&lt;/code&gt;.&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;$ passwd
Changing password for pi.
(current) UNIX password:
Enter new UNIX password:
Retype new UNIX password:
passwd: password updated successfully
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;em&gt;Please tweet your new password to @quakkels /s&lt;/em&gt;&lt;/p&gt;
&lt;h2 id=&#34;arrange-the-prerequisites&#34;&gt;Arrange the Prerequisites&lt;/h2&gt;
&lt;p&gt;Next, I&amp;rsquo;ll make sure the &lt;a href=&#34;https://gogs.io/docs/installation&#34;&gt;prerequisites&lt;/a&gt; are set up. Since Raspbian is based on Debian I can use the Debian/Ubuntu commands. I&amp;rsquo;m skipping the database step because I&amp;rsquo;m happy with this Gogs instance using SQLite3.&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;$ sudo apt-get update
$ sudo apt-get install git
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Before proceeding farther, I&amp;rsquo;m going to create a brand new user specifically for Gogs. This new user will be everything Gogs.&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;$ sudo adduser iamgogs 
&lt;/code&gt;&lt;/pre&gt;&lt;blockquote&gt;
&lt;p&gt;Note: If I were a more experienced Gogs administrator I would have created a user named &lt;code&gt;git&lt;/code&gt; since that&amp;rsquo;s Gogs&#39; best practice and it&amp;rsquo;s less work later on. Scripts and default configuration use &lt;code&gt;git&lt;/code&gt; as the Gogs user by default.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Be prepared to have a password ready for the new &lt;code&gt;iamgogs&lt;/code&gt; user.&lt;/p&gt;
&lt;p&gt;Add the &lt;code&gt;iamgogs&lt;/code&gt; user to the sudo group.&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;$ sudo usermod -aG sudo iamgogs
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Now switch to the &lt;code&gt;iamgogs&lt;/code&gt; user with:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;$ su - iamgogs
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;And test the sudo ability by running any command as sudo:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;$ sudo pwd
&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&#34;install-gogs-from-binary&#34;&gt;Install Gogs from Binary&lt;/h2&gt;
&lt;p&gt;From here, I could install Go and proceed to install from source. But instead, to keep the number of steps to a minimum, I&amp;rsquo;m going to &lt;a href=&#34;https://gogs.io/docs/installation/install_from_binary&#34;&gt;install from binary&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Being currently logged in as the &lt;code&gt;iamgogs&lt;/code&gt; user, I&amp;rsquo;ll use the &lt;code&gt;wget&lt;/code&gt; command to download the Raspberry PI build from &lt;a href=&#34;https://gogs.io/docs/installation/install_from_binary&#34;&gt;this download page&lt;/a&gt;. Use &lt;code&gt;wget&lt;/code&gt; with the url for the binary built specifically for Raspberry PI.&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;$ wget {raspberrypibinaryurl}
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Now that I&amp;rsquo;ve got it downloaded, I can unzip it using the &lt;code&gt;unzip&lt;/code&gt; command.&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;$ unzip {gogszipfilename}
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;If you run the &lt;code&gt;ls&lt;/code&gt; command you should see the new &lt;code&gt;gogs&lt;/code&gt; folder that was extracted into the &lt;code&gt;iamgogs&lt;/code&gt; home directory.&lt;/p&gt;
&lt;p&gt;And now for something completely expected&amp;hellip;&lt;/p&gt;
&lt;h2 id=&#34;configuring-and-running-gogs-on-raspberry-pi&#34;&gt;Configuring and Running Gogs on Raspberry PI&lt;/h2&gt;
&lt;p&gt;&lt;a href=&#34;https://gogs.io/docs/installation/configuration_and_run.html&#34;&gt;Running and configuring the Gogs server&lt;/a&gt; is handled by the Gogs install process. There&amp;rsquo;s lots of information online about manually creating and editing custom app.ini configuration file, but it looks like (for the most recent versions of Gogs) all I need to do is run the &lt;code&gt;gogs&lt;/code&gt; executable from the &lt;code&gt;$HOME/gogs&lt;/code&gt; folder with the &lt;code&gt;web&lt;/code&gt; parameter.&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;$ cd $HOME/gogs
$ ./gogs web
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;I saw server information appear in the console. Since my Raspberry Pi is set up for headless operation, I don&amp;rsquo;t have the benefit of being able to access Gogs via a graphical web browser over localhost. So, from my windows machine, I navigated to {IpAddressOfRPi}:3000 and was greeted by a pleasant installation form which I filled out. Upon submitting the form, I had an admin account and a functioning Gogs server.&lt;/p&gt;
&lt;p&gt;I&amp;rsquo;m nearing the end of this Gogs journey, but I still need to set this up as a service running in the background. Otherwise I&amp;rsquo;m stuck with this SSH session running Gogs forever.&lt;/p&gt;
&lt;p&gt;I was able to find some &lt;a href=&#34;https://blog.meinside.dev/Gogs-on-Raspberry-Pi/#2-for-systemd&#34;&gt;instructions&lt;/a&gt; for configuring a Gogs service with systemd that seemed straightforward enough.&lt;/p&gt;
&lt;p&gt;Copy the systemd service file from Gogs to the appropriate folder&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;$ sudo cp /home/iamgogs/scripts/systemd/gogs.service /lib/systemd/system/gogs.service
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Then I edited the new file.&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;$ sudo nano /lib/systemd/system/gogs.service
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;I updated the values for:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;User&lt;/li&gt;
&lt;li&gt;Group&lt;/li&gt;
&lt;li&gt;WorkingDirectory&lt;/li&gt;
&lt;li&gt;ExecStart&lt;/li&gt;
&lt;li&gt;Environment&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Since my Gogs user is &lt;code&gt;iamgogs&lt;/code&gt; rather than &lt;code&gt;git&lt;/code&gt; I needed to make sure the paths and users got updated accordingly. Once the file is updated and saved I tested to make sure it was working with:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;$ sudo systemctl start gogs.service
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;After switching over to my windows machine and confirming the site loads in the browser, I returned to my ssh session to make sure systemd will automatically start the Gogs service on reboot.&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;$ sudo systemctl enable gogs.service
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;And then a final test to make sure Gogs will start automatically when the RPi boots:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;$ sudo reboot
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Lo and behold, it works.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Why I Prioritize Strength Training</title>
      <link>https://quakkels.com/posts/why-i-prioritize-strength-training/</link>
      <pubDate>Fri, 01 Mar 2019 00:00:00 +0000</pubDate>
      
      <guid>https://quakkels.com/posts/why-i-prioritize-strength-training/</guid>
      <description>&lt;p&gt;Over the last few years, I&amp;rsquo;ve taken up a new hobby; strength training. It&amp;rsquo;s something I&amp;rsquo;ve really grown to love. Though, sometimes it&amp;rsquo;s hard to articulate exactly why strength training has taken such a permanent position in my weekly routine.&lt;/p&gt;
&lt;p&gt;When I was a sedentary person my quality of life decreased every year. Even when I was in my mid 20s I was not &amp;ldquo;strong&amp;rdquo; and frequent back and shoulder pain would frustrate me for weeks at a time. Every year my bodyweight would creep up, my strength would diminish, and I&amp;rsquo;d be a little less capable.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;You don&amp;rsquo;t own anything in your life. You don&amp;rsquo;t own your fitness. You don&amp;rsquo;t own your health&amp;hellip; You&amp;rsquo;re always constantly needing to work at it&amp;hellip; If you don&amp;rsquo;t, you lose it. So, you&amp;rsquo;re &amp;ldquo;paying the man.&amp;rdquo; ― &lt;a href=&#34;https://www.youtube.com/watch?v=si_w5Jze-zg&amp;amp;t=330s&#34;&gt;Josh Bridges&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;I was losing my physical liberty. I was getting slower, weaker, and less resilient to everyday life. I&amp;rsquo;d spend my time being anxious about whether my back pain would get unbearable if I sat in the wrong chair for too long. I&amp;rsquo;d wake up in the morning in pain because I slept on my shoulder the wrong way. Utterly miserable.&lt;/p&gt;
&lt;p&gt;So this is why strength training is important. It &amp;ldquo;pays the man&amp;rdquo; so I can keep my physical liberty. It makes me more useful to my family and my community. It sets an example for my offspring that it important to be active and work hard.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Strong people are harder to kill than weak people and more useful in general.
― &lt;a href=&#34;https://www.goodreads.com/quotes/432892-strong-people-are-harder-to-kill-than-weak-people-and&#34;&gt;Mark Rippetoe&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;Muscular strength is inversely and independently associated with death from all causes and cancer in men, even after adjusting for cardiorespiratory fitness and other potential confounders. ― &lt;a href=&#34;https://www.ncbi.nlm.nih.gov/pmc/articles/PMC2453303/&#34;&gt;Association between muscular strength and mortality in men: prospective cohort study&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;img src=&#39;https://quakkels.com/images/first400plusdeadlift.png&#39; style=&#34;float:right;padding:5px&#34;&gt;Strength training is an exercise in success. A person who follows a strength program and is disciplined will see improvements in their strength. They will be able to lift more, move more, and do more. That success reinforces confidence in one&amp;rsquo;s ability.  The first time I deadlifted over 400 pounds was hard hard work paying off, and it felt great.&lt;/p&gt;
&lt;p&gt;Finally, I have not seen anyone come up with a better list for &amp;ldquo;why train&amp;rdquo; than Jim Wendler:&lt;/p&gt;
&lt;blockquote&gt;
&lt;ol&gt;
&lt;li&gt;For physical and mental health.&lt;/li&gt;
&lt;li&gt;For self-improvement.&lt;/li&gt;
&lt;li&gt;To challenge yourself physically and mentally.&lt;/li&gt;
&lt;li&gt;To develop the bite that may help you through difficult times.&lt;/li&gt;
&lt;li&gt;To honor all the men who have fought before you; it is part of your DNA to fight.&lt;/li&gt;
&lt;li&gt;To show/prove to yourself that you can change through will.&lt;/li&gt;
&lt;li&gt;In a world of &amp;ldquo;easy&amp;rdquo;, it keeps your teeth sharp.&lt;/li&gt;
&lt;li&gt;Because we don&amp;rsquo;t have to chop wood anymore.&lt;/li&gt;
&lt;li&gt;Being stronger is ALWAYS better.&lt;/li&gt;
&lt;li&gt;To understand that there is cause and effect to action; and inaction.&lt;/li&gt;
&lt;li&gt;A stronger body can equal a stronger mind can equal a stronger body.&lt;/li&gt;
&lt;li&gt;There is zero negative consequence to being a stronger man.&lt;/li&gt;
&lt;li&gt;To be a great example to your children; fat, weak and ignorant is not a good role model.&lt;/li&gt;
&lt;li&gt;To exhaust your body and mind so as to put up with weak fools and ignorant beggars who demand what you have earned.&lt;/li&gt;
&lt;li&gt;To learn self-reliance.&lt;/li&gt;
&lt;li&gt;To understand that compassion and empathy is noble but not given lightly.&lt;/li&gt;
&lt;li&gt;Because a mentally and physically dangerous man will always be needed.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;― &lt;a href=&#34;https://jimwendler.com/blogs/jimwendler-com/what-is-the-reason-for-me-to-do-this&#34;&gt;Jim Wendler&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;That&amp;rsquo;s why I train strength.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Configure Headless Raspberry Pi for Wifi and SSH</title>
      <link>https://quakkels.com/posts/configure-headless-raspberry-pi-for-wifi-and-ssh/</link>
      <pubDate>Sat, 16 Feb 2019 00:00:00 +0000</pubDate>
      
      <guid>https://quakkels.com/posts/configure-headless-raspberry-pi-for-wifi-and-ssh/</guid>
      <description>&lt;p&gt;Raspberry Pis are great little computers. Wonderful for running hobby services. But, whenever I start a new RPi project, I dislike needing to dig out my spare HDMI monitor and USB keyboard. I don&amp;rsquo;t like having to take up room and connect all that hardware to just enable SSH and Wifi which renders all that equipment unnecessary.&lt;/p&gt;
&lt;p&gt;Recently I learned how to flash a new micro SD card and configure it to connect to my Wifi network and enable SSH before even turning on the RPi for the first time.&lt;/p&gt;
&lt;h2 id=&#34;prerequisites&#34;&gt;Prerequisites&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Raspberry Pi (mine is an RPi 3 Model B V1.2)&lt;/li&gt;
&lt;li&gt;Micro USB charge cable&lt;/li&gt;
&lt;li&gt;A powered USB hub or wall charger to plug the USB cable into&lt;/li&gt;
&lt;li&gt;Micro SD card&lt;/li&gt;
&lt;li&gt;Wifi network (and credentials to sign in to the router)&lt;/li&gt;
&lt;li&gt;A computer that&amp;rsquo;s on previously mentioned network&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;steps&#34;&gt;Steps&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;Download &lt;a href=&#34;https://www.raspberrypi.org/downloads/raspbian/&#34;&gt;Raspbian Lite&lt;/a&gt;. This version is stripped down and doesn&amp;rsquo;t include things like a graphical desktop.
&lt;ul&gt;
&lt;li&gt;Save the zip file to disk, and unzip. You should see the image file.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.raspberrypi.org/documentation/installation/installing-images/windows.md&#34;&gt;Flash&lt;/a&gt; the Micro SD card with Raspbian Lite. I used Etcher.&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.raspberrypi.org/documentation/remote-access/ssh/&#34;&gt;Enable SSH&lt;/a&gt; by saving an empty file called &lt;code&gt;ssh&lt;/code&gt; to the new boot partition on the SD card.&lt;/li&gt;
&lt;li&gt;&lt;em&gt;Now this is the magic ingredient.&lt;/em&gt; &lt;a href=&#34;https://foxrow.com/raspberry-pi-headless-wifi-config&#34;&gt;Add a configuration file containing your Wifi information&lt;/a&gt; to the boot partition so that raspbian can connect on startup.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;At this point, if you&amp;rsquo;ve followed the previous steps correctly, you can eject the SD card from your reader and place it in you RPi and plug it in.&lt;/p&gt;
&lt;p&gt;After waiting a minute or two for the RPi to boot (for the first time) you can log into your router and you will be able to find it in the list of connected devices. That list should have the IP address shown so you can use it to SSH into it.&lt;/p&gt;
&lt;p&gt;Execute &lt;code&gt;ssh {IpAddress} -l pi&lt;/code&gt; and use the password &lt;code&gt;raspberry&lt;/code&gt; to login.&lt;/p&gt;
&lt;p&gt;Now that we&amp;rsquo;ve got a functioning Raspberry Pi, &lt;a href=&#34;https://quakkels.com/posts/gogs-on-raspberry-pi/&#34;&gt;let&amp;rsquo;s do something useful with it&lt;/a&gt;.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Identify Valid Standards</title>
      <link>https://quakkels.com/posts/identify-valid-standards/</link>
      <pubDate>Thu, 16 Feb 2017 07:26:36 -0600</pubDate>
      
      <guid>https://quakkels.com/posts/identify-valid-standards/</guid>
      <description>&lt;p&gt;I can&amp;rsquo;t tell you how many times I&amp;rsquo;ve been in software planning meetings when an engineer addressed the team and claimed that we should use {insert technology here} because it&amp;rsquo;s the &amp;ldquo;Industry Standard.&amp;rdquo; I also can&amp;rsquo;t tell you how many times I&amp;rsquo;ve done the same thing. I&amp;rsquo;ve gone into my boss&amp;rsquo;s office and claimed that we should use a particular stack or technology because it&amp;rsquo;s an &amp;ldquo;industry standard.&amp;rdquo;&lt;/p&gt;
&lt;p&gt;This reasoning is attractive because on the surface it seems valid. I mean, it
must be an industry standard for a reason. Right? We&amp;rsquo;d be silly not to use it
as well. Doesn&amp;rsquo;t that make sense?&lt;/p&gt;
&lt;h2 id=&#34;hype-mentality&#34;&gt;Hype mentality&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;em&gt;&amp;ldquo;Hey coach, I think we should run screens because it&amp;rsquo;s the league standard.
Everyone runs screens. If we want our team to win, we need to be
running screens all the time.&amp;quot;&lt;/em&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Choosing technology based on popularity is easy. As programmers, it&amp;rsquo;s important
to us to stay current and not let any good technology get past us. As a result,
there are many ways that we can be influenced; industry publications, surveys,
Blogs, Twitter, Reddit, even chatter in the break room. However, we need to be
careful to weigh arguments based on technical merit and not succumb to the
subliminal effects of hype.&lt;/p&gt;
&lt;h2 id=&#34;hair-on-fire-mentality&#34;&gt;Hair-on-fire mentality&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;em&gt;&amp;ldquo;Hey coach, I think we should stop using back-shoulder passes down the field. We should remove them from our playbook entirely. Last time we ran a back-shoulder pass, we went three and out.&amp;quot;&lt;/em&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;When bugs that appear in staging (or even worseproduction)  people will look for a root cause for why it occurred. This is good to do and it&amp;rsquo;s definitely the correct response. But those investigating should be sure to focus on the root cause of the bug. If they find a bug in code that relies on a third party library, there is a temptation to question the decisions of the team that added the library. This is usually due to a misplaced concern that the bug is a result of using a less popular (or non-standard) library. Instead, the investigation should focus on things like logic errors, syntax errors, and whether behavior is unit tested.&lt;/p&gt;
&lt;p&gt;Sweeping rules dictating which libraries engineering teams must use are not the answer. Such a reaction result in standards that halt progress, stifle problem solving, and impede innovation.&lt;/p&gt;
&lt;h2 id=&#34;how-standards-help&#34;&gt;How standards help&lt;/h2&gt;
&lt;p&gt;When programming systems, standards should exist around the parts that need ‘glue’. Anytime there are two applications that need to talk to each other, they should follow a contract to ease communication between them. Examples of these kinds of standards include specifications for protocols such as HTTP, SAML, and OAuth.&lt;/p&gt;
&lt;p&gt;Another area that benefits from industry standards is when describing languages. There must be a standard for what an &lt;code&gt;&amp;lt;h1&amp;gt;&lt;/code&gt; represents in HTML, and for how a CSS rule such as &lt;code&gt;h1 { color: red; }&lt;/code&gt; affects it. I wouldn&amp;rsquo;t be very productive in a language if when I wrote &lt;code&gt;string&lt;/code&gt; it would treat it like a &lt;code&gt;float&lt;/code&gt;. So having a language standard that defines the expected behavior of syntax and types is very helpful.&lt;/p&gt;
&lt;p&gt;The key to these standards is that they are &lt;em&gt;defining expected behavior for a given tool&lt;/em&gt;. These standards do not dictate which tool to use.&lt;/p&gt;
&lt;h2 id=&#34;picking-the-right-tool-for-a-job&#34;&gt;Picking the right tool for a job&lt;/h2&gt;
&lt;p&gt;Some may claim that one software framework or language is an “industry standard”. Often, this is a result of the person seeing it used by others or featured in articles. So, they conclude that they should use it on every project. If there is even a vague similarity between their current project and the tool’s stated goals, then some people assume they’ve found the best tool for their job. More should be considered when choosing tools.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Good reasons to use a tool:&lt;/strong&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;It is stable&lt;/li&gt;
&lt;li&gt;It does what we need&lt;/li&gt;
&lt;li&gt;It is well supported&lt;/li&gt;
&lt;li&gt;Ease of use&lt;/li&gt;
&lt;li&gt;Compatible with existing system&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;strong&gt;Bad reasons to use a tool:&lt;/strong&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;It&amp;rsquo;s popular&lt;/li&gt;
&lt;li&gt;It&amp;rsquo;s new&lt;/li&gt;
&lt;li&gt;It&amp;rsquo;s been trending on Blogs and industry news sources.&lt;/li&gt;
&lt;li&gt;The current tool is boring. We could use a change.&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;dont-flippantly-swing-the-industry-standard-club&#34;&gt;Don’t flippantly swing the “Industry Standard” club&lt;/h2&gt;
&lt;p&gt;Promoting a tool by claiming that it&amp;rsquo;s an industry standard, rather than because it adheres to standards, is a mistake. There is a key difference between adhering to standards and being a standard. Industry standards are most effective when describing protocols and language behavior. We should select our tools based on how well they adhere to standards.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Don&#39;t Take Frameworks for Granted</title>
      <link>https://quakkels.com/posts/dont-take-frameworks-for-granted/</link>
      <pubDate>Sat, 28 Jan 2017 07:41:18 -0600</pubDate>
      
      <guid>https://quakkels.com/posts/dont-take-frameworks-for-granted/</guid>
      <description>&lt;p&gt;Frameworks can help jump-start productivity on projects. But be careful.
Relying too much on frameworks could also limit yourself in the long run.&lt;/p&gt;
&lt;p&gt;Whenever the opportunity presents itself, programmers should carefully consider
whether using a framework is beneficial. It may provide immediate benefits, but
there should be no magic happening that isn&amp;rsquo;t understood by the programmer.&lt;/p&gt;
&lt;p&gt;Years ago, I learned how to make websites with C#. I had help from many books,
tutorials, and co-workers. With those resources I used the ASP.NET MVC 1
framework to build websites in a new way. However, while building my sample MVC
sites, the code I wrote was there just because that&amp;rsquo;s how it was written in a
tutorial somewhere. At the time, I had very little understanding of how the
internals worked. I didn&amp;rsquo;t understand how routing worked, or how reflection
worked, or how factories fit in, or anything about what a view engine did, or
model binding. It was all just magic that I accepted and had faith in.&lt;/p&gt;
&lt;p&gt;I was able to build a working website with C# and ASP.NET MVC, and I did it
fairly quickly. It was certainly done faster than it would have been without the
framework. This fact can&amp;rsquo;t be ignored. Learning a technology while achieving
results is important for any beginner. The experience of finishing something
is valuable for the sense of accomplishment and for the motivation to keep
going. But, it&amp;rsquo;s important to understand that once a project is finished, the
learning should not stop. Understanding the building blocks of any framework is
the foundation for every solid programmer.&lt;/p&gt;
&lt;p&gt;In my case, it was very important that I continued to build up my foundation of
understanding. That&amp;rsquo;s because projects in the real world don&amp;rsquo;t just end like
side projects could. They live on and they evolve. Real projects keep receiving
feature requests. New requirements will appear. Technology will change.
Eventually, the chosen framework might lose support, or might not keep up with
requirements. When that happens, knowledge of how the framework functions is
imperative. Without that knowledge, programmers are at the mercy of tutorial
writers and the framework creators. But with a knowledgeable foundation,
programmers are equipped to continue building and shipping their projects.&lt;/p&gt;
&lt;p&gt;The bottom line is this: frameworks can be wielded much more effectively
&lt;em&gt;after&lt;/em&gt; the programmer understands enough of the language and design concepts
so that the framework&amp;rsquo;s behavior isn&amp;rsquo;t magic anymore. Programmers equipped with
such understanding will know where to look for seams in the execution pipeline,
and they will be able to add customizations where appropriate.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>5 Slack Tricks that Changed My Life</title>
      <link>https://quakkels.com/posts/5-slack-tricks-that-changed-my-life/</link>
      <pubDate>Mon, 29 Aug 2016 00:00:00 +0000</pubDate>
      
      <guid>https://quakkels.com/posts/5-slack-tricks-that-changed-my-life/</guid>
      <description>&lt;p&gt;&lt;img src=&#34;https://quakkels.com/images/clickbait.png&#34; alt=&#34;&#34;&gt;
&lt;em&gt;Please excuse the &amp;ldquo;click-baity&amp;rdquo; title. Sometimes I like to exaggerate.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Slack plays a significant role in my daily communication. My team at work has been using Slack as our primary mode of textual communication for over a year. It is also used by developer communities in my local area. At first, it felt a little clumsy. No more clumsy than a typical chat program. But, channels started to accumulate. The number of Direct Message feeds grew. Navigating and filtering all the conversations became more cumbersome. The tricks I will discuss here have helped me to stay nimble in Slack&amp;rsquo;s user interface. At first, I looked at Slack as a swamp of messages that I needed to wade through. But, with these small tricks, Slack has become easier to use and it even plays more of a productivity role.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;ctrl+k&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;If you are in a large Slack room with many channels, &lt;code&gt;ctrl+k&lt;/code&gt; can be a lifesaver! It gives you quick access to a list of channels that have new conversations. It also has an easy to use search feature that allows the user to navigate from their current conversation to a different channel or user. For someone like me, this is life changing. I love being able to use as much software as I can without needing to use my mouse.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;/remind&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;At first, I thought the &lt;code&gt;/remind&lt;/code&gt; feature was a gimmick that wasn&amp;rsquo;t useful. So it took me a few months to even try it out for the first time. Once I tried it, I became dependent on it. Some of the ways to use this include:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Remind yourself to follow up with a colleague the next day.&lt;/li&gt;
&lt;li&gt;Remind yourself to start or end work on a project.&lt;/li&gt;
&lt;li&gt;Right before leaving work, you can remind yourself to run an errand on the way home.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;My favorite way to use &lt;code&gt;/remind&lt;/code&gt; is to set time-limits on periods of
concentration. Outlook does a similar thing for meetings. About 15 minutes
ahead of time, Outlook can pop up reminders that a meeting is approaching.
I like to use &lt;code&gt;/remind&lt;/code&gt; in a similar way for things that aren&amp;rsquo;t on my calendar.&lt;/p&gt;
&lt;p&gt;For example, I may need to switch concentration contexts midway through the
day. I can use &lt;code&gt;/remind me to work on XyzProject in 2 hours&lt;/code&gt;. Once the
reminder has been set, it&amp;rsquo;s easier for me to concentrate on the current
task because I don&amp;rsquo;t need to keep project &amp;lsquo;XyzProject&amp;rsquo; in the back of my mind.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;/remind&lt;/code&gt; is also useful for helping me remember the state a project was in
when I left it. For example, I can say &lt;code&gt;/remind me to bind new service  implementations with Ninject on Monday at 8am&lt;/code&gt;. This has been a great tool
to get me working on a project right where I left off.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Star important channels&lt;/p&gt;
&lt;p&gt;This is a cool little trick the helps me group my highest priority channels together. At work, I have a handful of channels that are team specific. I like to star those so they all get prioritized at the top of the list. Then all the other channels, which are company-wide, get grouped below the starred channels. It&amp;rsquo;s the simplest thing, but works so well. Just select the channel and hover over the channel&amp;rsquo;s name at the top. Then a click-able star button will appear.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;/mute&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;/mute&lt;/code&gt; has been useful for me at work where I&amp;rsquo;m in many channels. However, I don&amp;rsquo;t need constant notifications whenever someone has added a post. &lt;code&gt;/mute&lt;/code&gt; has been a great tool for alleviating the tsunami of push notifications that I would have otherwise received.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;/collapse&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;If people are going nuts with &lt;code&gt;/giphy&lt;/code&gt; or posting URLs that automatically show previews, then use &lt;code&gt;/collapse&lt;/code&gt; to clean up that clutter in one giant swoop!&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;So those are my 5 Slack tips. But wait! There&amp;rsquo;s more. So here are a few bonus tips.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;up-arrow&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;I know I&amp;rsquo;ve made posts that have errors in them. You can use the up arrow key to edit your last post, or even delete it entirely. If editing, I recommend surrounding the part that was wrong with &lt;code&gt;~&lt;/code&gt; and then adding your new edit after that. This is good helps people see what has changed.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;ctrl+/&lt;/code&gt; brings up a help menu.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>Into the Nether: Linux</title>
      <link>https://quakkels.com/posts/into-the-nether-linux/</link>
      <pubDate>Wed, 12 Aug 2015 00:00:00 +0000</pubDate>
      
      <guid>https://quakkels.com/posts/into-the-nether-linux/</guid>
      <description>&lt;p&gt;&lt;img src=&#34;https://quakkels.com/images/Debian_FVWM_Green_1.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;The first movie I saw that really got me excited about computers was WarGames. The WOPR was an inanimate object that just sat there on screen. But, it was still a complete character all by itself. It reacted to the Matthew Broderick character&amp;rsquo;s commands and questions and became something more clever than just a boring piece of hardware. The fictional software running inside the WOPR and Broderick&amp;rsquo;s character&amp;rsquo;s ability to interface with it created a story that was incredibly mystical and exciting. It made computers seem exclusive. Only a few skilled people could understand them. People who had these skills were members of an exclusive club. They knew how things worked, and how to do the coolest tricks.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://quakkels.com/images/wargames.jpg&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;WarGames&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Green and blue text on black screens became a symbol of those skills. Hackers didn&amp;rsquo;t need pictures or windowed interfaces. They were the best, and therefore didn&amp;rsquo;t need any extra ornamentation. The coolest interfaces were both simple and complex. Simple because it was text, and complex because of the heavy tasks these techno elites were accomplishing. Something as simple as &amp;ldquo;knock, knock, Neo.&amp;rdquo; blew my mind the first time I saw it, not because of flashy graphics. Rather, it was because I was immersed in that fictional universe. I believed that a hacker, at a keyboard somewhere in another dimension, that was talking directly to Mr. Anderson with the text on that black screen.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://quakkels.com/images/matrix.jpg&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;The Matrix&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Around this same time I learned about real people that changed the world with their computer ninja skills. Language designers, operating system inventors, and application developers who changed how we live every day. These titans of technology all knew how to build things using a black screen and green text. So let&amp;rsquo;s follow suite, hey? Let&amp;rsquo;s swallow the red pill, drink the Cool-Aid, and nerd up!&lt;/p&gt;
&lt;h2 id=&#34;enter-linux&#34;&gt;Enter Linux&lt;/h2&gt;
&lt;p&gt;I&amp;rsquo;ve been led to believe there is a great big computing world out there with
green text in the form of Linux. The amount of time I&amp;rsquo;ve already spent on
tangents about awesome movies means that I won&amp;rsquo;t go into the history of Linux
here. If you don&amp;rsquo;t know what Linux is, you should watch &lt;a href=&#34;https://www.youtube.com/watch?v=jw8K460vx1c&amp;amp;feature=youtu.be&#34;&gt;Revolution OS&lt;/a&gt;. It&amp;rsquo;s free. Do it now.&lt;/p&gt;
&lt;h2 id=&#34;debian-linux-on-a-virtual-machine&#34;&gt;Debian Linux on a virtual machine&lt;/h2&gt;
&lt;p&gt;I knew that installing Linux would involve climbing a learning curve. This can often lead to a little frustration. My frustration started early, but interestingly it was due to proprietary technology. Not due to Linux. I work in Windows 8.1 Pro for nearly all of my day to day development work. Windows 8.1 Pro includes Microsoft&amp;rsquo;s virtualization software called Hyper-V. From what I understand, Hyper-V can be very good. But it gave me a significant headache. My efforts to install Linux were derailed when I had trouble getting my Hyper-V VM to connect to my network. This was beyond frustrating. I eventually experienced the giant annoyance of breaking my host machine&amp;rsquo;s WiFi configuration. The only way my laptop could connect to the Internet was through a wired connection. I was beyond perturbed at this point, so once I restored my laptop&amp;rsquo;s networking settings I abandoned the idea of using Hyper-V in favor of virtualization software that I am much more familiar with: &lt;a href=&#34;https://www.virtualbox.org/&#34;&gt;VirtualBox&lt;/a&gt;. VirtualBox is probably a better choice for this anyway because it runs on more operating systems than Hyper-V, and it doesn&amp;rsquo;t cost anything.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; If you have turned on Hyper-V on your Windows machine and have since decided to use different virtualization software, turn it off in the &amp;ldquo;Turn Windows Features On/Off&amp;rdquo; section of the Control Panel. If you leave it on it will compete with your new virtualization software causing unusual behavior — such as being almost completely borked.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Once VirtualBox was installed, then I needed to choose a distribution of Linux
to install. After asking around on IRC, I decided to use Debian Testing for
this endeavor. Debian has three main releases. Stable, Testing, and Development.
Stable is usually very, very stable. But, to be so stable, it sacrifices current
software in favor of older software that has been tested for a longer period of
time, as in &lt;em&gt;years&lt;/em&gt; longer. The development release is (shockingly) the version of
Debian that is in development, thus it is the least stable version and prone to
breaking. The Testing release is the &amp;ldquo;just right&amp;rdquo; flavor of Debian that strikes
a balance between age and stability. Or so I&amp;rsquo;ve been told.&lt;/p&gt;
&lt;p&gt;I had a hard time finding the download link for Debian Testing. With help from IRC, I eventually came across a &lt;a href=&#34;https://www.debian.org/releases/testing/&#34;&gt;page&lt;/a&gt; explaining that the Testing release of Debian (at this time) is code-named Stretch. I decided that the most likely link to download the release I&amp;rsquo;m looking for was on &lt;a href=&#34;https://www.debian.org/devel/debian-installer/&#34;&gt;this page&lt;/a&gt;. I chose a CD ISO image for netinst (perhaps standing for &amp;lsquo;Network Installer&amp;rsquo;) and the only reason I felt somewhat sure that I was downloading the right ISO is because &amp;ldquo;stretch&amp;rdquo; was in the file name. Seems this whole section of the Debian web site could be easily improved to be more user friendly. Maybe a site that is hard to use is just a hazing ritual people have to go through in order to join the ranks of the &amp;ldquo;green text elite&amp;rdquo; programmers. If so, okay. I&amp;rsquo;m willing to jump through a couple of hoops. Remember WarGames? That shit&amp;rsquo;s awesome.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt;  The Debian devs seem to like Toy Story.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;After the ISO finished downloading, I created a new virtual machine in VirtualBox. It got 4GB of memory and 30GB for its hard drive. I called it Luke. The next VM I spin up will probably be called Leia. I like Star Wars. Part of being a programmer is naming your stuff whatever the hell you want. Yus!&lt;/p&gt;
&lt;p&gt;Since the ISO I have is the network installer version, the networking configuration has to work, or it will not be able to get the rest of the packages it needs to finish installation. Luke was configured for Bridged networking. It should work, I won&amp;rsquo;t really know until I load the ISO as a fake CD into Luke&amp;rsquo;s fake CD drive and try to install Debian from the network. Use the network, Luke.&lt;/p&gt;
&lt;p&gt;Installing Debian was pretty easy. Being in the United States, just about all the default settings were what I wanted. Really I just had to tell the installation process which timezone I wanted and to use the entire virtual hard drive for Linux. I did decide to not install any desktop or GUI. The typical desktop experience is not the goal here. Let&amp;rsquo;s start with just the essentials. A command terminal is essential. I think it&amp;rsquo;s important to use a terminal so I can feel comfortable working in most other Linux configurations. And, I should be able to SSH into a networked Linux machine to perform maintenance, programming, configuration adjustments, and any other task a programmer may want to perform.&lt;/p&gt;
&lt;h2 id=&#34;its-installed-now-what&#34;&gt;It&amp;rsquo;s installed. Now what?&lt;/h2&gt;
&lt;p&gt;After it finished booting up, Debian presented a nice login screen. Really simple and uncluttered. It was nice. The green text that I like so much wasn&amp;rsquo;t there, but it had a black background. At this point I&amp;rsquo;m thinking I can probably figure out how to configure green to be the default text color. But for now, I can&amp;rsquo;t help but feel pleased with myself.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://quakkels.com/images/01loginscreen.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;So I entered my username and my password and was greeted by a really nice, simple command prompt.&lt;/p&gt;
&lt;h2 id=&#34;where-is-sudo&#34;&gt;Where is sudo?&lt;/h2&gt;
&lt;p&gt;Apparently, some pretty standard items were missing from my current Debian setup. The obvious thing that is missing is any kind of desktop environment. I skipped that on purpose, so not a problem there. However, the plan was to install a very minimal window manager called &lt;a href=&#34;http://i3wm.org/&#34;&gt;i3wm&lt;/a&gt; that looked like it would be fun to use instead of a desktop environment that was just imitating Windows and OSX. i3 promised that it was really configurable, and the screenshots on their site had green and blue text on a black background. In short, it looked like an environment I would enjoy working in. But as I started trying to install the software I ran into problems.&lt;/p&gt;
&lt;p&gt;One of the most basic operations to perform in Linux is installing software using a package manager. Windows doesn&amp;rsquo;t have a culture around package managers, so this might seem odd to you if you are coming from a Windows only world. But, in Linux world, package managers are one of the best ways to install new programs.&lt;/p&gt;
&lt;p&gt;The package manager that Debian uses is called apt-get. This allows you to install software with a command that gets entered into the terminal. So if I wanted to install a program to be my window manager (like i3wm) I could install it like this:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ apt-get install i3
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The thing is, that command only works of the user who is entering the command had permission to install software. A user like root would need to do that. The root user in Linux is like the equivalent of an Administrator account in Windows. Root has permission to install programs. However, there is a pretty big rule that you don&amp;rsquo;t usually want to log into Linux as root. It&amp;rsquo;s just safer to not be root when you use Linux. So the typical way to install software with apt-get changes to use another program called sudo. The modified command looks like this:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ sudo apt-get install i3
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The sudo command will temporarily changes your regular user&amp;rsquo;s permissions to root level so that the next command (apt-get) will be executed with elevated permissions. At least, that&amp;rsquo;s how it is supposed to be. But for me, it didn&amp;rsquo;t work!&lt;/p&gt;
&lt;p&gt;Not sure why, but for some reason my Debian instance did not have sudo installed. &lt;strike&gt;Maybe it was somehow related to me not installing a desktop environment. I don&amp;rsquo;t know for sure. But it struck me as odd.&lt;/strike&gt; &lt;a href=&#34;https://www.reddit.com/r/linux/comments/3guj67/into_the_nether_linux/cu1suqk/&#34;&gt;It seems that the reason sudo wasn&amp;rsquo;t installed is because I set a root password during installation&lt;/a&gt;. So I used a series of commands to install sudo so I could use it for all software installs going forward. Here are the commands I ran:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ su root
$ apt-get install sudo
$ sudo adduser quakkels sudo
$ su quakkels
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The su command (pronounced like soo) is the command to switch the current user to the user that is specified. Once I switched to root I was able to install sudo and add my regular user to the list of sudo-ers. Once that was completed, I switched back to my regular user account. Now I was able to install i3wm.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ sudo apt-get install i3
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;I think it worked. Excellent!!! I sat there, looking at my screen. It didn&amp;rsquo;t change. I tried a reboot thinking that it would start up with i3wm working.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ sudo reboot
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The same login screen came up as before. I logged in and then thought that maybe I need to run i3 in order to start the window manager.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ i3
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Now that definitely did not work.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ sudo i3
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;That also definitely did not work. But, thanks to some advice from IRC and &lt;a href=&#34;http://blog.erikd.org/&#34;&gt;this guy&lt;/a&gt;, I knew enough that i3 has a dependency on xorg. So let&amp;rsquo;s install that.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ sudo apt-get install xorg
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;This was all well and good. But, I still had no idea why i3 wasn&amp;rsquo;t managing my windows yet! Starting to get a little annoyed. I should be patient though. It&amp;rsquo;s all about the learning experience right now. So after some googling, I found &lt;a href=&#34;https://faq.i3wm.org/question/6126/how-do-i-start-i3/&#34;&gt;this on the i3 FAQ&lt;/a&gt;. That FAQ question described almost exactly what I was experiencing.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;From the FAQ:&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;The easiest way to get started is to edit (or create, if misisng) ~/.xinitrc. If it didn&amp;rsquo;t exist, simply put exec i3 in there. If it exists, check the bottom for some exec call, comment it out and put exec i3 instead.
Once the file is saved, run startx from the TTY. This will start an X server, read the file and then start i3.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Also, note that the character ~ represents the current user&amp;rsquo;s home directory.&lt;/p&gt;
&lt;p&gt;After following the advice in that FAQ answer, I was able to start the i3 window manager with the following command.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ startx
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;After I entered that command and pressed &amp;lsquo;enter&amp;rsquo; celebration ensued. Now I had a working i3 environment. A little google/bing/duckduckgo&amp;rsquo;ing revealed that I could open a new terminal using the keyboard shortcut alt+enter. If a user needs to launch a program that doesn&amp;rsquo;t run in a terminal, it can be started using a special prompt launched with the shortcut alt+d. Then the name of the program you want to type can be entered and launched. I quickly isntalled a few must have programs: an IRC client called irssi, and a web browser called Ice Weasel.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ sudo apt-get install irssi
$ sudo apt-get install iceweasel
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;02i3.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;but-but--i-thought-there-would-be-a-black-background&#34;&gt;But, but — I thought there would be a black background?&lt;/h2&gt;
&lt;p&gt;Things are going pretty well, so far. But I&amp;rsquo;m not going to hide that I felt a pang of disappointment when I opened a terminal in i3 and it had black text on a white background. That is unfortunate. When I use this VM I want to feel like I&amp;rsquo;m in the movies. I know that&amp;rsquo;s a totally shallow goal, but it&amp;rsquo;s still fun. And I&amp;rsquo;m a little stubborn. So I will have to figure this out sometime, but for now it is working.&lt;/p&gt;
&lt;h2 id=&#34;a-little-vm-housekeeping&#34;&gt;A little VM housekeeping&lt;/h2&gt;
&lt;p&gt;VirtualBox provides something called Guest Additions that can be installed in operating systems running in their VMs. Guest Additions are nice because it lets the guest machine interact with the host in a much more streamlined way. I installed it primarily because I wanted the Linux workspace to resize when I resized the VirtualBox window. There are a couple of websites out there that have decent instructions. The instructions I followed are &lt;a href=&#34;http://www.swiftsoftwaregroup.com/debian-wheezy-guest-windows-8-1-host-using-virtualbox/&#34;&gt;here&lt;/a&gt;. Configuring the VM and inserting the Guest Additions cd wasn&amp;rsquo;t an issue. But Linux has this concept of &amp;lsquo;mounting&amp;rsquo; a drive before you can use it. Maybe Windows and other OS&amp;rsquo;s have this concept too, but it may have been behind the scenes. I struggled with the mounting concept because it wasn&amp;rsquo;t in the step by step instructions that I followed. After pounding my head against the wall for way too long, I kind of stumbled on the &amp;lsquo;mount&amp;rsquo; command. The commands I used in Linux to install Guest Additions were these (executed in a root terminal):&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ apt-get install module-assistant
$ m-a prepare
$ mount /media/cdrom
$ sh /media/cdrom/VBoxLinuxAdditions.run
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;After a quick reboot, the desktop environment was working with Guest Additions nicely.&lt;/p&gt;
&lt;h2 id=&#34;chasing-that-black-background&#34;&gt;Chasing that black background&lt;/h2&gt;
&lt;p&gt;It was still important to me that the terminal in i3 had light text on a black (or dark) background. A simple command told me what terminal i3 used.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ echo $TERM
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;That printed out &amp;lsquo;xterm&amp;rsquo;. According to online search results, xterm is one of the older terminals that exist. And, it is configurable. So I got busy &lt;a href=&#34;http://scarygliders.net/2011/12/01/customize-xterm-the-original-and-best-terminal/&#34;&gt;configuring&lt;/a&gt; it according to my own tastes.&lt;/p&gt;
&lt;p&gt;At that point, I started getting frustrated. My Linux VM had no ~/.Xresources file, so I went ahead and created one. That wasn&amp;rsquo;t a problem. The first problem was when I tried to copy and paste from my web browser into the Nano text editor that I was using to edit the new .Xresources file. Ctrl+c and Ctrl+v weren&amp;rsquo;t working for me. To avoid that issue in the short term, I decided to just manually edit two configuration settings: the foreground and background colors. My patience was starting to wear thin.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;xterm*foreground: rgb:4f/a3/43
xterm*background: rgb:00/00/00
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;I added those configuration settings to the file, closed the terminal, and opened a new terminal. Nothing changed. At this point I really was expecting the configuration file to take effect and overwrite the default settings. But it didn&amp;rsquo;t. I sat at my desk thinking about how it should have worked. It should have worked. Every other time I changed a config file it took effect as soon as the program restarted. Sure, cache might need to be cleared too. But this is how I understood computers to work. Adding or changing configuration should result in the program&amp;rsquo;s behavior changing to match. But it didn&amp;rsquo;t happen.&lt;/p&gt;
&lt;p&gt;Reading further down the &lt;a href=&#34;http://scarygliders.net/2011/12/01/customize-xterm-the-original-and-best-terminal/&#34;&gt;instructions&lt;/a&gt; led me to a command that seemed to somehow &amp;lsquo;merge&amp;rsquo; the .Xresources file with the actual configuration. This seemed odd to me. But, okay. That&amp;rsquo;s just how this works I suppose. So I ran the command.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ xrdb -merge ~/.Xresources
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Now we&amp;rsquo;re getting somewhere! I closed the terminal and reopened it. Success! I wrote a few words and then sat back in satisfaction. I ended the day feeling great about my new Linux environment.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://quakkels.com/images/03greenonblack.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;the-next-day-losing-my-cool&#34;&gt;The next day, losing my cool&lt;/h2&gt;
&lt;p&gt;What is this crap? This is some kind of messed up shit.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://quakkels.com/images/04blackonwhite.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;The terminal colors were wrong. I changed them the day before, but the original colors were back. I checked my .Xresources config file and it hadn&amp;rsquo;t changed from the way I left it the previous day. It still had the color settings. This ticked me off. Configuration settings shouldn&amp;rsquo;t just reset themselves like this. Apparently they do in in this case though. Bad. I was beyond annoyed.&lt;/p&gt;
&lt;p&gt;Thanks to some help from this &lt;a href=&#34;http://www.linuxquestions.org/questions/slackware-14/xrdb-merge-xresources-how-can-i-get-rid-of-that-776844/#post3797806&#34;&gt;post&lt;/a&gt;,  I figured out that there is yet another step to configuring applications with .Xresources. So I added the line to my .xinitrc file and rebooted.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;xrdb -merge .Xresources
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;That did not work. Then I changed it again, and rebooted.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;xrdb -merge ~/.Xresources
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;This did not work. What the Hell, man? Let me guess. I probably need to not only configure the .Xresources configuration file with .xinitrc. I probably need to configure the .xinitrc configuration file inside some other configuration file. It&amp;rsquo;s configuration-ception!&lt;/p&gt;
&lt;p&gt;The actual fix was not that rage inducing as configuration-ception. Instead, there is a rational reason it isn&amp;rsquo;t working. Apparently, the .xinitrc is not a configuration file in the way that a typical XML or JSON file is a configuration file. The &amp;lsquo;rc&amp;rsquo; stands for &lt;a href=&#34;https://en.wikipedia.org/wiki/Run_commands&#34;&gt;run commands&lt;/a&gt;. The order of each line matters. I put the merge command at the end of the .xinitrc file. This means that the i3 window manager was starting before the .Xresources configuration file was merged in. So I updated the .xinitrc file.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;xrdb -merge ~/.Xresources
exec i3
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;It seems so simple now. I should have realized this earlier. For crying out loud, the only two lines in this file are both commands. Well, that&amp;rsquo;s hindsight for you.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Maintaining Your Vision</title>
      <link>https://quakkels.com/posts/maintaining-your-vision/</link>
      <pubDate>Mon, 03 Aug 2015 00:00:00 +0000</pubDate>
      
      <guid>https://quakkels.com/posts/maintaining-your-vision/</guid>
      <description>&lt;p&gt;Programmers are often creators. Being a creator takes vision. Vision to see the destination, and vision to see the course. The destination could be learning a new language or technology stack. The destination could be a product to be released to customers. It could be something done for personal edification. The course is determined by taking that larger goal and breaking it down to manageable steps.&lt;/p&gt;
&lt;p&gt;The trick for successfully creating something, is to maintain that vision. But often the vision becomes lost and projects end up stalled or abandoned entirely.&lt;/p&gt;
&lt;p&gt;Patience in our work as programmers may be one of the most underrated skills a programmer could possess. There have been many articles &lt;sup&gt;(&lt;a href=&#34;http://blogoscoped.com/archive/2005-08-24-n14.html&#34;&gt;1&lt;/a&gt;, &lt;a href=&#34;http://www.jerf.org/programming/lazyProgrammersGuide.html&#34;&gt;2&lt;/a&gt;)&lt;/sup&gt; written about the benefits of being a so-called &amp;ldquo;lazy programmer&amp;rdquo; which can lead to the benefits of automating common tasks. Though, the role that patience plays in persevering in a project is something that seems to get lost in the conversation.&lt;/p&gt;
&lt;p&gt;Patience is important on many levels, but two come to mind in particular. There&amp;rsquo;s the project level, and then there&amp;rsquo;s the module level.&lt;/p&gt;
&lt;p&gt;Patience is useful on the project level when you can see your ultimate goal, but there are barriers to getting it done. A type of project that I frequently undertake is learning a new programming language. It often presents itself as &amp;ldquo;I want to write X application using X language.&amp;rdquo; I can see the application in my mind. The barrier to finishing the application is the syntax and ecosystem of the language I intend to learn. Of course, right? The point of the whole project is learn those new things. This is when impatience can be a project killer because shortcuts get taken. The original goal was twofold: 1) language and 2) application. Impatience can shift that goal into becoming a singular goal based on an exciting app, rather than the dual target of learning and also building. Project level impatience is what usually causes my personal projects to languish.&lt;/p&gt;
&lt;p&gt;What I&amp;rsquo;ll call module level impatience is the kind of thing that rears its head when you&amp;rsquo;re eyeballs deep in code. The ultimate function of the feature being written becomes the focus, and the voice of impatience starts nagging about taking shortcuts to get to the finish line faster. This impatience clouds the reasoning about the individual pieces of the feature being implemented. It is the enemy of clean and maintainable code.&lt;/p&gt;
&lt;p&gt;The truth is that when we code with an impatient mindset, then the results will suffer. Patience is required to maintain the project&amp;rsquo;s vision.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Let&#39;s Scrape the Web with Python 3</title>
      <link>https://quakkels.com/posts/lets-scrape-the-web-with-python-3/</link>
      <pubDate>Sun, 10 Mar 2013 00:00:00 +0000</pubDate>
      
      <guid>https://quakkels.com/posts/lets-scrape-the-web-with-python-3/</guid>
      <description>&lt;p&gt;&lt;img src=&#34;https://quakkels.com/images/pythonWebScrapeCover.jpg&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;In the back of my mind I&amp;rsquo;ve always been intrigued by writing an application that can retrieve web pages over HTTP. It&amp;rsquo;s a fairly simple thing to do. We have a myriad of web browsers that do it for us. But there is just something about writing an application that operates independently of a browser and reaches out to touch the internet that I find fun and intriguing. So let&amp;rsquo;s do it&amp;hellip; in Python.&lt;/p&gt;
&lt;p&gt;First let&amp;rsquo;s define some specifications for this project. Basically we&amp;rsquo;re going to &amp;ldquo;scrape&amp;rdquo; Craigslist.org listings and display them in our terminal (command line). It should be able to scrape any (or nearly any) of Craigslist&amp;rsquo;s regions and categories.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Will be a command line application&lt;/li&gt;
&lt;li&gt;Will read and display posts from Craigslist.org&lt;/li&gt;
&lt;li&gt;Will be able to define desired Craigslist.org subdomain and path from the command line&lt;/li&gt;
&lt;li&gt;Will display results to the terminal&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;separating-the-web-scraper-into-pieces&#34;&gt;Separating the Web Scraper into Pieces&lt;/h2&gt;
&lt;p&gt;As I see it, there are three pieces to this application:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;The user interface which handles input and displays ouput&lt;/li&gt;
&lt;li&gt;The HTTP client which actually accesses the HTML page and gets the information therein&lt;/li&gt;
&lt;li&gt;The HTML parser which reads the HTML and collects the parts we want to keep&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Now that the application&amp;rsquo;s functionality is defined and it is broken down into pieces. We can start thinking about the project&amp;rsquo;s name and structure. Let&amp;rsquo;s just call it MyScrape and let&amp;rsquo;s structure in the following folder and files.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;MyScrape/ (the application folder)
&lt;ul&gt;
&lt;li&gt;MyHttp.py (This will be responsible for the HTTP client that gets the web pages)&lt;/li&gt;
&lt;li&gt;MyParser.py (To read the HTML and collect the good parts)&lt;/li&gt;
&lt;li&gt;MyScrape.py (This will be the executable that handles user input and displays the results from MyParser)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;the-http-client-and-python-3&#34;&gt;The HTTP Client and Python 3&lt;/h2&gt;
&lt;p&gt;Python 3 has a handly little module that we can use to make our lives easy. We&amp;rsquo;re going to import http.client into our MyHttp.py file and use it in our class.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;import http.client
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Now that we imported http.client, we can create our class to handle a page. Let&amp;rsquo;s keep things simple and just call this class Page. Page just needs to connect to a server, request a page using a path, and provide the result to the application. Here is the complete MyHttp.py file:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;&#39;&#39;&#39;GET a webpage using http.&#39;&#39;&#39;

import http.client

class Page:

    def __init__(self, servername, path):
        &#39;&#39;&#39;This initialize function sets the servername and path&#39;&#39;&#39;
        self.set_target(servername, path)

    def set_target(self, servername, path):
        &#39;&#39;&#39;This is a utility function that will reset the servername and the path&#39;&#39;&#39;
        self.servername = servername
        self.path = path

    def __get_page(self):
        &#39;&#39;&#39;This is a private function that actually goes out 
        and gets the response from the server&#39;&#39;&#39;

        server = http.client.HTTPConnection(self.servername)
        server.putrequest(&#39;GET&#39;, self.path)
        server.putheader(&#39;Accept&#39;, &#39;text/html&#39;)
        server.endheaders()

        return server.getresponse()        

    def get_as_string(self):
        &#39;&#39;&#39;This function provides the webpage as a string&#39;&#39;&#39;
        page = &#39;&#39;
        reply = self.__get_page() # gets the page

        if reply.status != 200:
            page = &#39;Error sending request {0} {1}&#39;.format(reply.status, reply.reason)
        else:
            data = reply.readlines()
            reply.close()
            for line in data:
                page += line.decode(&#39;utf-8&#39;)
        return page
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Now that we have our class, we need to make sure it works by testing it. We can do that by using the Python interpreter to execute our code for us. First, start the Python interpreter by sending the command:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ python3
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;to the shell prompt (or the command prompt if you&amp;rsquo;re on Windows). This should give you a prompt that looks like this:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;&amp;gt;&amp;gt;&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;To exit the interpreter, just enter exit() and press enter. &lt;em&gt;Note: More information about the Python interpreter can be found &lt;a href=&#34;http://docs.python.org/3.3/tutorial/interpreter.html&#34;&gt;here&lt;/a&gt; on the Python.org website&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;To test our code in the Python interpreter, first navigate to the MyScrape folder that has the MyHttp.py file in it.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ cd path/to/your/MyScrape
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Then start the interpreter and enter the following code:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;&amp;gt;&amp;gt;&amp;gt; import MyHttp
&amp;gt;&amp;gt;&amp;gt; page = MyHttp.Page(&#39;quakkels.com&#39;, &#39;&#39;)
&amp;gt;&amp;gt;&amp;gt; print(page.get_as_string())
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;You should now see the HTML source code for quakkels.com in your terminal. It works!&lt;/p&gt;
&lt;h2 id=&#34;html-parsing-and-python-3&#34;&gt;HTML Parsing and Python 3&lt;/h2&gt;
&lt;p&gt;The next part of this project we need to write is the HTML parser that allows us to identify the pieces of the Craigslist page that we want to keep. There are several different techniques for doing this including: regular expression matching (don&amp;rsquo;t use this technique), &lt;a href=&#34;https://developer.mozilla.org/en-US/docs/DOM&#34;&gt;DOM&lt;/a&gt;, and &lt;a href=&#34;http://sax.sourceforge.net/&#34;&gt;SAX&lt;/a&gt; parsing.
The DOM (Document Object Model) technique basically involves navigating an XML or HTML document through a tree of nodes. The SAX (Simple API for XML) technique does not involve navigating like the DOM technique does. Rather, it reads the file through once, sending information to the application as the file is read. This means it&amp;rsquo;s pretty quick, but because there is no navigation the application will need to keep track of the state of the document as the SAX style parser reads it. Our MyParser.py file is going to execute a SAX style parser using the html.parser module.&lt;/p&gt;
&lt;p&gt;Python 3 has a handy module called html.parser that we&amp;rsquo;ll use in our application. Our parser class is going to be designed to just read Cragslist.com listings. I&amp;rsquo;m going to name the parser class ClParser. ClParser will need to inherit from HTMLParser (which is in the html.parse module) so that we can override the methods that get executed as the file is read in a SAX manner.&lt;/p&gt;
&lt;p&gt;Here&amp;rsquo;s the complete MyParser.py file:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;&#39;&#39;&#39;
Parse html from craigslist
&#39;&#39;&#39;

from html.parser import HTMLParser

class ClParser(HTMLParser):

    # parser state
    # These variables store the current state of the parser as it reads the file
    date = &#39;&#39;           # The date for the current listing
    
    title = &#39;&#39;          # The title of the current listing
    
    link = &#39;&#39;           # The link to the current listing&#39;s details
    
    collectFor = None   # will use this to keep track of what kind of data we 
                        # are currently collecting for. valid options are:
                        # &#39;date&#39;, &#39;title&#39;, and &#39;link&#39;
    
    insideRow = False   # This flag keeps track of whether we are inside a &amp;quot;row&amp;quot;
                        # &amp;quot;rows&amp;quot; have listing information

    # parser output
    results = &#39;&#39;        # the parser&#39;s output will be stored here

    def handle_starttag(self, tag, attrs):
        &#39;&#39;&#39;This function gets called when the parser encounters a start tag&#39;&#39;&#39;
        if tag == &#39;a&#39; and self.insideRow:
            self.collectFor = &#39;title&#39;

        for key, value in attrs:

            if(self.collectFor == &#39;title&#39; 
                and key == &#39;href&#39;
                and not self.link): # and not self.link makes sure it doesn&#39;t overwrite a preexisting value
                self.link = value

            if key == &#39;class&#39;:
                if value == &#39;row&#39;:
                    self.insideRow = True
                if value == &#39;ban&#39;:
                    self.collectFor = &#39;date&#39;

    def handle_endtag(self,tag):
        &#39;&#39;&#39;This function is called when the parser encounters an end tag&#39;&#39;&#39;
        if tag == &#39;p&#39;:
            self.insideRow = False

            # is there data to output?
            if self.title + self.link:
                self.results += &amp;quot;\nDate: \t{0}\nTitle:\t{1}\nLink:\t{2}\n&amp;quot;.format(
                    self.date, 
                    self.title, 
                    self.link)
            self.__reset_row()

    def handle_data(self, data):
        &#39;&#39;&#39;This function is called when the parser encounters data inside to tags&#39;&#39;&#39;        
        if self.collectFor == &#39;date&#39;:
            self.date = data
        if self.collectFor == &#39;title&#39; and not self.title:
            self.title = data

        self.collectFor = None # when we&#39;re done collecting the data, reset this flag

    def __reset_row(self):
        &#39;&#39;&#39;This is a utility function to reset the parser&#39;s state after a row&#39;&#39;&#39;
        self.title = &#39;&#39;
        self.link = &#39;&#39;
        self.summary = &#39;&#39;
        self.collectFor = None
        self.insideRow = False
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The HTMLParser class that we are inheriting from has a feed(string argument) function that has been applied to our ClParser class. To execute our parser, we just need to make an instance of the class and call the feed(string argument) function.&lt;/p&gt;
&lt;p&gt;We can test this in the Python interpreter in the same way that we tested MyHttp. In the interpreter enter the following code:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;&amp;gt;&amp;gt;&amp;gt; import MyHttp, MyParser
&amp;gt;&amp;gt;&amp;gt; page = MyHttp.Page(&#39;milwaukee.craigslist.org&#39;, &#39;/sya/&#39;)
&amp;gt;&amp;gt;&amp;gt; parser = MyParser.ClParser()
&amp;gt;&amp;gt;&amp;gt; parser.feed(page.get_as_string())
&amp;gt;&amp;gt;&amp;gt; print(parser.results)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;This should print a list of nicely formatted Craiglist listings for computers in the Milwaukee area. We&amp;rsquo;re almost done!&lt;/p&gt;
&lt;h2 id=&#34;the-last-piece&#34;&gt;The Last Piece!&lt;/h2&gt;
&lt;p&gt;Alright, we have two of our three pieces built. The last thing to do is handle user input and display results. We&amp;rsquo;re going to implement these features in the MyScrape.py file. Here&amp;rsquo;s the whole MyScrape.py file:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;import sys, MyParser, MyHttp

# try to assign the subdomain and path values
# if the assignment fails, just use default values
try:
    subdomain, path = sys.argv[1:]
except:
    subdomain, path = &#39;milwaukee&#39;, &#39;/sya/&#39;

# instantiate the parser
parser = MyParser.ClParser()

# instantiate the page
page = MyHttp.Page(subdomain + &#39;.craigslist.org&#39;, path)

# get the page and feed it to the parser
parser.feed(page.get_as_string())

# display the results
print(&#39;################\n    Results:\n################\n&#39;, parser.results)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;There you have it. MyScrape.py is the entry point to our application. It allows the user to set a subdomain and a path when calling the script. It brings the MyHttp and MyParser modules together. and it displays results to the screen. To use this application, enter the following command in your shell or command prompt:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ python3 MyScrape.py
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&amp;hellip;or&amp;hellip;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ python3 MyScrape.py sierravista /ata/
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;You can download the entire source &lt;a href=&#34;https://quakkels.com/files/MyScrape.zip&#34;&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id=&#34;improving-the-scrape&#34;&gt;Improving the Scrape&lt;/h2&gt;
&lt;p&gt;Feel free to take this code and experiment with it. Expand on it. Make it spider sub pages. Make it return a list of dictionaries instead of a string. Save the data in a sqlite database, or to a text file. Maybe make it into a web service. Do whatever you want with it. (Keep it legal.)&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>What Happens When You Login?</title>
      <link>https://quakkels.com/posts/what-happens-when-you-login/</link>
      <pubDate>Sat, 23 Feb 2013 00:00:00 +0000</pubDate>
      
      <guid>https://quakkels.com/posts/what-happens-when-you-login/</guid>
      <description>&lt;p&gt;Your favorite website is asking you for your username and password.&lt;/p&gt;
&lt;p&gt;Username? Password? Sure, you&amp;rsquo;ve got those. [You enter your username] then [you enter your password] then [you press enter] then boom, you&amp;rsquo;re logged into the website.&lt;/p&gt;
&lt;p&gt;What actually just happened? Well, assuming that you entered correct login credentials, you can now access whatever members only area that site offers to those credentials. But before that, in the split seconds after you clicked login and before you saw your profile, the website had to verify that the credentials you entered were correct. It had to make sure that it knew the username you entered and it had to make sure that your password belonged with that username. That process is called &lt;em&gt;authentication&lt;/em&gt;.&lt;/p&gt;
&lt;h2 id=&#34;what-does-authentication-mean&#34;&gt;What Does Authentication Mean?&lt;/h2&gt;
&lt;p&gt;It is common for online applications (like websites) to want to identify their users. Take Facebook as an example. Facebook cannot operate unless it is able to reliably identify its users. So, Facebook provides a registration process for new users to create accounts. That registration asks the user to give login credentials. In Facebook&amp;rsquo;s case the credentials consist of an email address and a password. When a registered user visits Facebook, they can enter their credentials and Facebook knows who they are because they have registration information for those credentials. Being able correctly identify a returning user is called authentication. Described another way, a user with correct login credentials is authentic.&lt;/p&gt;
&lt;p&gt;Sounds pretty straightforward&amp;hellip; right?&lt;/p&gt;
&lt;p&gt;Well, no. Well, it should be. The problem is when online applications do a poor job of keeping your credentials safe.&lt;/p&gt;
&lt;h2 id=&#34;sending-your-login-credentials&#34;&gt;Sending Your Login Credentials&lt;/h2&gt;
&lt;p&gt;First of all, when you enter your username and password into a website that does not use an encrypted SSL connection, it is possible (dare I say easy?) for a hacker to read your username and password as it is sent to the website. If a website is really concerned about their user&amp;rsquo;s security then login forms should always use an SSL connection.&lt;/p&gt;
&lt;h2 id=&#34;storing-user-login-credentials&#34;&gt;Storing User Login Credentials&lt;/h2&gt;
&lt;p&gt;In order for sites to authenticate returning users, they need to store the user&amp;rsquo;s credentials. Usually the credentials are stored in a database. The most important thing to recognize about login credentials is that they are the keys to a person&amp;rsquo;s online identity. Therefore, it is extremely important to store login credentials in a very secure way. The most basic level of security is to make sure that the database is not publicly accessible. But, even if the public doesn&amp;rsquo;t have direct access to the database, there are other measures that should be taken to keep login credentials as secure as possible.&lt;/p&gt;
&lt;h2 id=&#34;a-no-good-horrible-irresponsible-wrong-wrong-wrong-way-of-storing-user-credentials&#34;&gt;A no-good, horrible, irresponsible, wrong, wrong, WRONG way of storing user credentials&lt;/h2&gt;
&lt;p&gt;Some irresponsible sites have stored credentials like this:&lt;/p&gt;
&lt;h3 id=&#34;a-bad-users-database-table&#34;&gt;A Bad Users Database Table&lt;/h3&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;First Name&lt;/th&gt;
&lt;th&gt;Last Name&lt;/th&gt;
&lt;th&gt;Username&lt;/th&gt;
&lt;th&gt;Password&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Brandon&lt;/td&gt;
&lt;td&gt;Quakkelaar&lt;/td&gt;
&lt;td&gt;bq2013&lt;/td&gt;
&lt;td&gt;guessme&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Jane&lt;/td&gt;
&lt;td&gt;Doe&lt;/td&gt;
&lt;td&gt;jdOnline&lt;/td&gt;
&lt;td&gt;password&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Bob&lt;/td&gt;
&lt;td&gt;Smith&lt;/td&gt;
&lt;td&gt;bsmith&lt;/td&gt;
&lt;td&gt;secret&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;This is dangerous for a couple of reasons. The first and most glaring reason it is dangerous is because of the passwords are stored in plain text. This means that anyone who has access to this database (such as an employee of the website) can look up Jane Doe and find her password, Thereby allowing that person to steal Jane&amp;rsquo;s identity on that site. On top of that, if Jane has used the same password on other sites (like an online banking site) she is now vulnerable to identity theft there as well.&lt;/p&gt;
&lt;h2 id=&#34;a-slightly-better-way-of-storing-user-credentials&#34;&gt;A slightly better way of storing user credentials&lt;/h2&gt;
&lt;p&gt;Some sites that are more concerned with security store credentials a bit differently. They actually encrypt user&amp;rsquo;s password before storing them in the database.&lt;/p&gt;
&lt;h3 id=&#34;users-database-table-with-encrypted-passwords&#34;&gt;Users Database Table with Encrypted Passwords&lt;/h3&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;First Name&lt;/th&gt;
&lt;th&gt;Last Name&lt;/th&gt;
&lt;th&gt;Username&lt;/th&gt;
&lt;th&gt;EncryptedPassword&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Brandon&lt;/td&gt;
&lt;td&gt;Quakkelaar&lt;/td&gt;
&lt;td&gt;bq2013&lt;/td&gt;
&lt;td&gt;hRnAQlrCPXFSGsS4cXDWh+vFLVWSlJka1YWBPTrpImI=&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Jane&lt;/td&gt;
&lt;td&gt;Doe&lt;/td&gt;
&lt;td&gt;jdOnline&lt;/td&gt;
&lt;td&gt;3ookjok1lRzkDBXTYr2PPGigEM+U7mnCJ/Uxof7nPgI=&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Bob&lt;/td&gt;
&lt;td&gt;Smith&lt;/td&gt;
&lt;td&gt;bsmith&lt;/td&gt;
&lt;td&gt;SKAbxUcdUOmqkP9TXJElrHkaZoIFwhGfzbcmy26QgN8=&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;Now the passwords are stored encrypted instead of stored as plain text. This is better, but this is still bad. The problem is that this particular encryption is reversible. This means that if an employee of the website wanted to, she could decrypt all the passwords. Not only that, but if someone gets ahold of Bob&amp;rsquo;s decrypted password, then they can hack into Bob&amp;rsquo;s account and Bob would never know about it until after something significant happens.&lt;/p&gt;
&lt;h2 id=&#34;passwords-should-be-stored-as-a-one-way-hash-with-salt&#34;&gt;Passwords should be stored as a one-way hash with salt&lt;/h2&gt;
&lt;p&gt;When a person registers on a website, the website should do at least three things to ensure security.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Send all credential information over an SSL&lt;/li&gt;
&lt;li&gt;Use a one-way hashing algorithm&lt;/li&gt;
&lt;li&gt;Use a Salt for each password&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Hashing passwords with a one-way hashing algorithm is similar to encrypting passwords. The difference is that once the password is hashed, it cannot be converted back to the original value. This is important and it is a weakness of systems that just encrypt their passwords.&lt;/p&gt;
&lt;p&gt;For example, let&amp;rsquo;s say I use the password &amp;ldquo;4mazingPa55word&amp;rdquo;. If I encrypted that password using the key &amp;ldquo;key&amp;rdquo;, then &amp;ldquo;4mazingpa55word&amp;rdquo; becomes &amp;ldquo;B0csjGFQtvfg+05Ufr6gJBiZPWe1s77krk4oSF0FlWo=&amp;rdquo;. The problem is that using that key, I can decrypt the encrypted password back to plain text. Whenever a password can be obtained in it plain text form, that is a bad thing. that means that a disgruntled employee with access to the database could decrypt passwords and log into people&amp;rsquo;s accounts &lt;strong&gt;without them ever realizing that their password has been compromised&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;The scary thing is that well known companies have been caught storing passwords in a way that allows the plain text version to be retrieved. &lt;a href=&#34;https://plus.google.com/+AmberYust/posts/NGV5xQwJywf&#34;&gt;In September of 2012, Pandora.com was caught doing this very thing&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Now, let&amp;rsquo;s consider a password stored using a one-way hash.&lt;/p&gt;
&lt;h3 id=&#34;users-database-table-with-salted-and-hashed-passwords&#34;&gt;Users Database Table with Salted and Hashed Passwords&lt;/h3&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;First Name&lt;/th&gt;
&lt;th&gt;Last Name&lt;/th&gt;
&lt;th&gt;Username&lt;/th&gt;
&lt;th&gt;Salt&lt;/th&gt;
&lt;th&gt;HashedPassword&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Brandon&lt;/td&gt;
&lt;td&gt;Quakkelaar&lt;/td&gt;
&lt;td&gt;bq2013&lt;/td&gt;
&lt;td&gt;123abc&lt;/td&gt;
&lt;td&gt;jLg+RKUYydfcFmvuAD9DxXEaevk=&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Jane&lt;/td&gt;
&lt;td&gt;Doe&lt;/td&gt;
&lt;td&gt;jdOnline&lt;/td&gt;
&lt;td&gt;qweasd&lt;/td&gt;
&lt;td&gt;IpVoLHy0+QqENEEmByVevHzoUUU=&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Bob&lt;/td&gt;
&lt;td&gt;Smith&lt;/td&gt;
&lt;td&gt;bsmith&lt;/td&gt;
&lt;td&gt;poiqwe&lt;/td&gt;
&lt;td&gt;SYMTwSQi8+XtKAAtkJvXON8IQoY=&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;This way of storing passwords is more secure than just encrypting passwords, and it&amp;rsquo;s much more secure than just storing passwords in plain text.&lt;/p&gt;
&lt;h2 id=&#34;what-is-the-salt-for&#34;&gt;What is the Salt For?&lt;/h2&gt;
&lt;p&gt;The salt is a value that is randomly generated by the website when a user registers. It is added to the user supllied password before is gets hashed. This means that if your password is a common password, the hash will be more difficult to crack because the system automatically adds a random value to it. This protects against attacks using &lt;a href=&#34;https://en.wikipedia.org/wiki/Rainbow_table&#34;&gt;Rainbow tables&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;So &lt;em&gt;please&lt;/em&gt;, if you are ever in the position to write user authentication software, please Salt and one-way hash your password over an SSL!&lt;/p&gt;
&lt;h2 id=&#34;additional-reading&#34;&gt;Additional Reading&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://plus.google.com/+AmberYust/posts/NGV5xQwJywf&#34;&gt;Pandora Password Weakness Exposed&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://codingkilledthecat.wordpress.com/2012/09/04/some-best-practices-for-web-app-authentication/&#34;&gt;Some Best Practices for Web App Authentication&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://blog.codinghorror.com/youre-probably-storing-passwords-incorrectly/&#34;&gt;You&amp;rsquo;re Probably storing Password Incorrectly&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>Learn Insertion Sort with Video Game Discs</title>
      <link>https://quakkels.com/posts/learn-insertion-sort-with-video-game-discs/</link>
      <pubDate>Sat, 09 Feb 2013 00:00:00 +0000</pubDate>
      
      <guid>https://quakkels.com/posts/learn-insertion-sort-with-video-game-discs/</guid>
      <description>&lt;p&gt;I think you could say I have an average number of video game discs. It&amp;rsquo;s not a huge number of games, but it is enough that it can be difficult to find a particular game if they&amp;rsquo;re not organized in a predictable way.&lt;/p&gt;
&lt;p&gt;Enter insertion sort. Insertion sort is in the same family as the bubble sort in that its worst case complexity is O(n2). But in practice, it is usually a faster sort.&lt;/p&gt;
&lt;p&gt;So we start with a few game discs that we want to sort. To simplify this demonstration each game is numbered.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://quakkels.com/images/insertionSort01.jpg&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;The sort begins by comparing the first two discs with each other, and ordering them appropriately. We see that the 4 is moved to before the 27.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://quakkels.com/images/insertionSort02.jpg&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;At this point, the insertion sort looks remarkably similar to the bubble sort. the interesting part will be shown soon. First we move onto the next game disc. The 42 gets compared to the 27 and stays where it is because it is already in order relative to the 27.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://quakkels.com/images/insertionSort03.jpg&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;Now comes the interesting part. The 21 is goes before the 42 and before the 27. So our insertion sort technique inserts the 21 into the correct spot.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://quakkels.com/images/insertionSort04.jpg&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;Then we get to the last game disc. An 8. This gets inserted after the 4 and before the 21.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://quakkels.com/images/insertionSort05.jpg&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;Now the entire list of game discs has been sorted. We see the process working, but now we need to translate this process into a computer algorithm.&lt;/p&gt;
&lt;h2 id=&#34;insertion-sort-example-in-javascript&#34;&gt;Insertion Sort Example in JavaScript&lt;/h2&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;// set up the array with random values
var sortMe = new Array();
var arrayLength = 5;
var i = 0;
for(; i &amp;lt; arrayLength; i++) {
    sortMe[i] = Math.floor((Math.random()*20)+1);
}

var logText = &amp;quot;&amp;quot;;
i = 0;
for(; i &amp;lt; arrayLength; i++) {
    logText += sortMe[i] + &amp;quot;, &amp;quot;;
}
console.log(&amp;quot;Starting Values: \t&amp;quot; + logText);

// begin insertion sort
i = 1;
var j, temp, k;

for(; i &amp;lt; arrayLength; i++) {
    temp = sortMe[i];
    j = i;
    while(j &amp;gt; 0 &amp;amp;&amp;amp; sortMe[j-1] &amp;gt; temp) {
        sortMe[j] = sortMe[j-1];
        j--;
    }
    sortMe[j] = temp;

    logText = &amp;quot;New Order:\t\t&amp;quot;;
    k=0;
    for(; k &amp;lt; arrayLength; k++) {
        logText += sortMe[k] + &amp;quot;, &amp;quot;;
    }
    console.log(logText);
}
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Here&amp;rsquo;s a link to the &lt;a href=&#34;https://quakkels.com/files/InsertionSort.html&#34;&gt;working example&lt;/a&gt;.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Learn Bubble Sort with Playing Cards</title>
      <link>https://quakkels.com/posts/learn-bubble-sort-with-playing-cards/</link>
      <pubDate>Tue, 22 Jan 2013 00:00:00 +0000</pubDate>
      
      <guid>https://quakkels.com/posts/learn-bubble-sort-with-playing-cards/</guid>
      <description>&lt;p&gt;Let&amp;rsquo;s say you have an unordered list of numbers and you wanted to put them in order from lowest to highest value. How would you do that? You&amp;rsquo;re probably thinking that you would just look at all the numbers, find the lowest number and put it at the beginning of your list. Then you would find the next largest number and put it in the second spot in the list, and so on until you&amp;rsquo;ve ordered the entire list of numbers. It&amp;rsquo;s simple, basic, and not very exciting. Now, let&amp;rsquo;s say that instead of ordering the list yourself, you decide it&amp;rsquo;s a better idea to write a computer program to order the list for you. Now you don&amp;rsquo;t have to deal with moving the numbers around, you just need to tell your program how to move the numbers, and then let the program handle any list you give it.&lt;/p&gt;
&lt;p&gt;So how do you write your program to order the list? One of the most basic techniques for putting lists in order is the Bubble Sort algorithm. To understand how a Bubble Sort works, let&amp;rsquo;s use it on a few random playing cards to get them in order. after we walk through the algorithm with cards, we&amp;rsquo;ll take a look at a Bubble Sort implemented in code.&lt;/p&gt;
&lt;h2 id=&#34;lets-sort-some-playing-cards&#34;&gt;Let&amp;rsquo;s Sort Some Playing Cards&lt;/h2&gt;
&lt;p&gt;The image below shows we have five cards (with unknown values) that we need to put in order using a Bubble Sort.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://quakkels.com/images/bubbleSort01.jpg&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;The first step in a Bubble Sort is to compare the first two values with each other. Here we see the first two values are an Ace (1) and a Queen (12). They are in order, so we move on to the next card.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://quakkels.com/images/bubbleSort02.jpg&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;Now we compare the Queen with nine.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://quakkels.com/images/bubbleSort03.jpg&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;Since the Queen is a larger value, it trades places with the nine, as seen below.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://quakkels.com/images/bubbleSort04.jpg&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;Now we move on to the next card value. Since the Queen is a larger value than the two, they trade places.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://quakkels.com/images/bubbleSort05.jpg&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://quakkels.com/images/bubbleSort06.jpg&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;Now, we move on to the last card in the list. The Ace is less than the Queen, so once again the cards trade places.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://quakkels.com/images/bubbleSort07.jpg&#34; alt=&#34;&#34;&gt;
&lt;img src=&#34;https://quakkels.com/images/bubbleSort08.jpg&#34; alt=&#34;&#34;&gt;
&lt;img src=&#34;https://quakkels.com/images/bubbleSort09.jpg&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;At this point, each card in this list has been compared to a neighboring card at least once. The result is that the largest value among these five cards has &amp;ldquo;bubbled&amp;rdquo; to the end of the list. But, we&amp;rsquo;re not done yet. After only one pass through we can only be sure that the last card is in the correct position. So let&amp;rsquo;s run the the cards again.&lt;/p&gt;
&lt;p&gt;Starting at the beginning with the first two cards, Ace is compared with 9. Since Ace is less than nine, there is no change in position.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://quakkels.com/images/bubbleSort10.jpg&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;The next card, the two of hearts, is less than nine. So they trade places.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://quakkels.com/images/bubbleSort11.jpg&#34; alt=&#34;&#34;&gt;
&lt;img src=&#34;https://quakkels.com/images/bubbleSort12.jpg&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;Next, nine is compared with an Ace. Since nine is greater than the Ace, they switch positions.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://quakkels.com/images/bubbleSort13.jpg&#34; alt=&#34;&#34;&gt;
&lt;img src=&#34;https://quakkels.com/images/bubbleSort14.jpg&#34; alt=&#34;&#34;&gt;
&lt;img src=&#34;https://quakkels.com/images/bubbleSort15.jpg&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;With this second pass, we can now be sure that the final two cards are correct. You should be starting to see a pattern here. We continue the process until all the cards are in order.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://quakkels.com/images/bubbleSort16.jpg&#34; alt=&#34;&#34;&gt;
&lt;img src=&#34;https://quakkels.com/images/bubbleSort17.jpg&#34; alt=&#34;&#34;&gt;
&lt;img src=&#34;https://quakkels.com/images/bubbleSort18.jpg&#34; alt=&#34;&#34;&gt;
&lt;img src=&#34;https://quakkels.com/images/bubbleSort19.jpg&#34; alt=&#34;&#34;&gt;
&lt;img src=&#34;https://quakkels.com/images/bubbleSort20.jpg&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;implement-bubble-sort-in-javascript&#34;&gt;Implement Bubble Sort in JavaScript&lt;/h2&gt;
&lt;p&gt;Now that we understand the Bubble Sort process from the playing card demonstration, let&amp;rsquo;s implement it. Let&amp;rsquo;s use JavaScript for a simple example.&lt;/p&gt;
&lt;p&gt;The script begins by creating an array that holds 5 values, and assigning random numbers to the array. Once the array is created and populated, we print the array and values to the console.&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;var sortMe = new Array();
var arrayLength = 5;
var i = 0;
for(; i &amp;lt; arrayLength; i++) {
    sortMe[i] = Math.floor((Math.random()*20)+1);
}

var logText = &amp;quot;&amp;quot;;
i = 0;
for(; i &amp;lt; arrayLength; i++) {
    logText += sortMe[i] + &amp;quot;, &amp;quot;;
}
console.log(&amp;quot;Starting Values: \t&amp;quot; + logText);
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Now we need to sort the array. The sort is done by using two loops and an if statement.&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;i = 0;
var didSwap = true;
var temp;
for(; i &amp;lt; arrayLength &amp;amp;&amp;amp; didSwap; i++) {
    didSwap = false;
    var j = 0;
    for(; j &amp;lt; (arrayLength - 1); j++) {
        if(sortMe[j] &amp;gt; sortMe[j+1]) {
            temp = sortMe[j];
            sortMe[j] = sortMe[j+1];
            sortMe[j+1] = temp;
            didSwap = true;
        }    
    }

    logText = &amp;quot;New Order:\t\t&amp;quot;;
    k=0;
    for(; k &amp;lt; arrayLength; k++) {
        logText += sortMe[k] + &amp;quot;, &amp;quot;;
    }
    console.log(logText);
}
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;When this script is executed, it will log to the console the original unmodified array, then it will print the modified array after each pass. Here are the log messages I got when I ran this code:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;Starting Values: 	7, 9, 2, 16, 4,
New Order:		7, 2, 9, 4, 16,
New Order:		2, 7, 4, 9, 16,
New Order:		2, 4, 7, 9, 16,
New Order:		2, 4, 7, 9, 16, 
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Notice that the first pass through the starting values put 16 at the end of the list (just like the playing cards example). Then each pass after that &amp;ldquo;bubbled&amp;rdquo; the next highest number up. &lt;a href=&#34;https://quakkels.com/files/BubbleSort.html&#34;&gt;Here&lt;/a&gt; is the complete example.&lt;/p&gt;
&lt;h2 id=&#34;problems-with-bubble-sort&#34;&gt;Problems with Bubble Sort&lt;/h2&gt;
&lt;p&gt;Great. We now have a way to get our computer program to put lists of numbers in order for us. It&amp;rsquo;s automatic and it works. However, there are problems with Bubble Sort. That problem is that when confronted with a worst case scenario (long, long lists with lots of numbers that need to be moved) it is slow! More numbers in the list and more numbers that need to be moved increase the complexity of the Bubble Sort. The more complex it gets, the slower it gets. Now, this is true for any sorting algorithm. The problem with the Bubble Sort is that it gets very complex very quickly.&lt;/p&gt;
&lt;p&gt;To describe the worst case complexity for an algorithm, computer science generally uses something called Big Oh Notation. The notation for the worst case Bubble Sort is O(n2). I&amp;rsquo;m not going to go into Big Oh Notation in detail here. If you&amp;rsquo;re interested in learning more about it, this &lt;a href=&#34;http://stackoverflow.com/questions/487258/what-is-a-plain-english-explanation-of-big-o-notation/487278#487278&#34;&gt;StackOverflow.com answer&lt;/a&gt; does a great job of explaing it in plain language. For the purposes if this article, it&amp;rsquo;s good to understand that Bubble Sort gets complex (and therefore slow) very quickly. There are other algorithms that do a better job of sorting numbers, but the Bubble Sort is one that is often taught to computer science students first.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Let&#39;s talk to a SQLite database with Python</title>
      <link>https://quakkels.com/posts/lets-talk-to-a-sqlite-database-with-python/</link>
      <pubDate>Sun, 20 Jan 2013 00:00:00 +0000</pubDate>
      
      <guid>https://quakkels.com/posts/lets-talk-to-a-sqlite-database-with-python/</guid>
      <description>&lt;p&gt;As I write this, it&amp;rsquo;s the weekend. My wonderful wife brought home some amazing Jet Fuel XBold Dark Roast Coffee that is sure to keep me wired for the next several hours. Now what should I do? Let&amp;rsquo;s explore Python a little more by using it to talk to a database.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://quakkels.com/images/JetFuel.png&#34; alt=&#34;Turning caffeine into code!&#34;&gt;&lt;/p&gt;
&lt;p&gt;We&amp;rsquo;re a long way from my bread and butter. My goto technologies for database interaction are .NET, C# and Entity Framework CodeFirst with SQL Server 2005/2008. These technologies lend themselves to enterprise level web and application development. They require a fair amount of software licenses and infrastructure to get rolling. In contrast, SQLite (as you may have guessed) is a very lightweight implementation of a relational database. It is completely self contained. There is no SQLite server or configuration requirements. You just make a database and boom! You&amp;rsquo;re in business. Because of this light footprint and its ease of use, it is a very common database to use in mobile applications.&lt;/p&gt;
&lt;p&gt;First, let&amp;rsquo;s create a SQLite database file. I&amp;rsquo;m going to call my database &amp;ldquo;Blog.sqlite&amp;rdquo;. You can do this from the command line with Python, or if you prefer a graphical interface, you can use a snappy little Firefox add-on called &lt;a href=&#34;https://addons.mozilla.org/en-us/firefox/addon/sqlite-manager/&#34;&gt;SQLite Manager&lt;/a&gt;. It runs inside Firefox and offers a simple interface for interacting with SQLite databases. And, since it runs in Firefox, it works on any platform that runs Firefox (E.G. MacOS, Windows, Linux).&lt;/p&gt;
&lt;p&gt;Once we have our database created, then we need to make a table. Once again, we can do this using straight SQL and Python from the command line, but I prefer to use the SQLite Manager add-on in Firefox.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://quakkels.com/images/CreatePostsTableResized.png&#34; alt=&#34;Screenshot of creating a table with SQLite Manager.&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Note that the Id field is an auto incremented integer value and a primary key.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Now, let&amp;rsquo;s dive into code. What will this application do? Well, since this project is in the spirit of exploration, the application we&amp;rsquo;re going to build won&amp;rsquo;t be very useful. Instead it will have an academic focus. Let&amp;rsquo;s just perform basic CRUD operations (Create, Read, Update, Delete) and then exit. We won&amp;rsquo;t worry about user interaction or GUI or web. This is going to just be a console app.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;em&gt;This should go without saying, but this won&amp;rsquo;t work without installing Python first. I&amp;rsquo;m using Python3.2.3. Don&amp;rsquo;t worry about downloading SQLite. There is no SQLite server, remember? If you have Python, you can use SQLite.&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;In the same folder as the Blog.sqlite database, create your Python file using your favorite text editor. I called mine sqliteConnect.py. Once you have your file, you can run it from the command line by first browsing to the folder where you saved the file, then just enter the following command:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ python3 sqliteConnect.py
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;That will run the Python script. Though, nothing will happen until we put some code in there.&lt;/p&gt;
&lt;h2 id=&#34;connecting-to-your-sqlite-database-from-python&#34;&gt;Connecting to Your SQLite Database from Python&lt;/h2&gt;
&lt;p&gt;To perform CRUD functionality, first we need to establish a connection with the database, and then create what&amp;rsquo;s known as a cursor which will allow us to execute commands.&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;import sqlite3

conn = sqlite3.connect(&#39;Blog.sqlite&#39;)
cursor = conn.cursor()
&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&#34;creating-a-record&#34;&gt;Creating a Record&lt;/h2&gt;
&lt;p&gt;Now that we have our open connection and our cursor, we can insert data into the Posts table.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;cursor.execute(&#39;insert into Posts (Headline, Body) values (?, ?)&#39;, (&#39;This is my Headline&#39;, &#39;This is the body of my blog post.&#39;))
firstPostId = cursor.lastrowid

cursor.execute(&#39;insert into Posts (Headline, Body) values (?, ?)&#39;, (&#39;Jet Fuel XBold Coffee&#39;, &#39;Jet Fuel XBold Dark Roast Coffee will make you code like a madman.&#39;))
conn.commit()
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Here, we call &lt;code&gt;cursor.execute()&lt;/code&gt; and pass it two parameters. A SQL command with placeholders for the data (the question marks), and a sequence containing the data to be inserted. Since we are hard-coding the insert, we could have just placed our data directly into the SQL. But in the real world, we could be inserting user generated input. In that case, we would want to use this parameterized technique to keep the SQL query safe and keep our database safe from SQL Injection style hacking attempts.&lt;/p&gt;
&lt;p&gt;We have explicitly inserted the data for Headline and Body while ignoring the value for the Id field. This is purposeful because when we created the Posts table, we defined Id to be an auto-incrementing integer value. This is good because it saves us from having to generate a unique identifier ourselves. However, we are going to be editing this same record later in our application. In order to be able to get the same record, we need to know the auto generated Id value.&lt;/p&gt;
&lt;p&gt;The last inserted row id is stored in &lt;code&gt;cursor.lastrowid&lt;/code&gt;. So, when our insert is complete, if we want to grab the new Id value, we just need to assign &lt;code&gt;cursor.lastrowid&lt;/code&gt; to our &lt;code&gt;firstPostId&lt;/code&gt; variable.&lt;/p&gt;
&lt;p&gt;It&amp;rsquo;s worth noting here, calling &lt;code&gt;cursor.execute()&lt;/code&gt; will execute the command on the database. But, we need to commit any changes by calling conn.commit(). If we don&amp;rsquo;t call conn.commit() before the connection is closed, then our changes will be undone as if they never happened.&lt;/p&gt;
&lt;h2 id=&#34;reading-our-new-records&#34;&gt;Reading Our New Records&lt;/h2&gt;
&lt;p&gt;Now that we have some data inserted into the database table, let&amp;rsquo;s read it out.&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;cursor.execute(&#39;select * from Posts&#39;)

print(&#39;Current records: &#39;)
for row in cursor.fetchall():
    print(&#39;\t&#39;, row)
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;We are using the same &lt;code&gt;cursor.execute()&lt;/code&gt; method to run a select query on the table. Then we can print each row by using &lt;code&gt;cursor.fetchall()&lt;/code&gt; in a for loop.&lt;/p&gt;
&lt;h2 id=&#34;update-that-first-record&#34;&gt;Update That First Record&lt;/h2&gt;
&lt;p&gt;Now, let&amp;rsquo;s make some changes to the record we inserted first. This is when the &lt;code&gt;firstPostId&lt;/code&gt; comes in handy.&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;cursor.execute(&#39;update Posts set Headline=?, Body=? where Id=?&#39;, (&#39;This is my NEW Headline&#39;, &#39;This is the NEW body of my blog post.&#39;, firstPostId))
conn.commit()

print(&#39;Records after update: &#39;)
cursor.execute(&#39;select * from Posts&#39;)
for row in cursor.fetchall():
    print(&#39;\t&#39;, row)
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Now when we print our read results, we can see that the first record has been updated with new data.&lt;/p&gt;
&lt;h2 id=&#34;delete-everything&#34;&gt;Delete Everything&lt;/h2&gt;
&lt;p&gt;You don&amp;rsquo;t have to delete everything, but that&amp;rsquo;s what I&amp;rsquo;m going to do.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;cursor.execute(&#39;delete from Posts&#39;)
conn.commit()

print(&#39;Records after delete: &#39;)
cursor.execute(&#39;select * from Posts&#39;)
for row in cursor.fetchall():
    print(&#39;\t&#39;, row)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Now, when we print our query results, we see nothing.&lt;/p&gt;
&lt;h2 id=&#34;wrapping-up-closing-down&#34;&gt;Wrapping Up, Closing Down&lt;/h2&gt;
&lt;pre&gt;&lt;code&gt;cursor.close()
conn.close()
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Since we&amp;rsquo;re done with our cursor and connection, we can close them down.&lt;/p&gt;
&lt;h2 id=&#34;complete-code&#34;&gt;Complete Code&lt;/h2&gt;
&lt;pre&gt;&lt;code&gt;import sqlite3

conn = sqlite3.connect(&#39;Blog.sqlite&#39;)
cursor = conn.cursor()

# (C)reate a new blog post
cursor.execute(&#39;insert into Posts (Headline, Body) values (?, ?)&#39;, (&#39;This is my Headline&#39;, &#39;This is the body of my blog post.&#39;))
firstPostId = cursor.lastrowid

cursor.execute(&#39;insert into Posts (Headline, Body) values (?, ?)&#39;, (&#39;Jet Fuel XBold Coffee&#39;, &#39;Jet Fuel XBold Dark Roast Coffee will make you code like a madman.&#39;))
conn.commit()

# (R)ead our new posts
cursor.execute(&#39;select * from Posts&#39;)

print(&#39;Current records: &#39;)
for row in cursor.fetchall():
    print(&#39;\t&#39;, row)

# (U)pdate the first post
cursor.execute(&#39;update Posts set Headline=?, Body=? where Id=?&#39;, (&#39;This is my NEW Headline&#39;, &#39;This is the NEW body of my blog post.&#39;, firstPostId))
conn.commit()

print(&#39;Records after update: &#39;)
cursor.execute(&#39;select * from Posts&#39;)
for row in cursor.fetchall():
    print(&#39;\t&#39;, row)

# (D)elete all the records
cursor.execute(&#39;delete from Posts&#39;)
conn.commit()

print(&#39;Records after delete: &#39;)
cursor.execute(&#39;select * from Posts&#39;)
for row in cursor.fetchall():
    print(&#39;\t&#39;, row)

cursor.close()
conn.close()&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>ASP.NET MVC Compared to Django</title>
      <link>https://quakkels.com/posts/asp-net-mvc-compared-to-dango/</link>
      <pubDate>Sun, 13 Jan 2013 00:00:00 +0000</pubDate>
      
      <guid>https://quakkels.com/posts/asp-net-mvc-compared-to-dango/</guid>
      <description>&lt;p&gt;The MVC pattern is widely used in web development today. Regardless of whether
you develop in C#, PHP, Python, Java, JavaScript, or Ruby, you won’t have any
trouble finding a popular MVC pattern for your language of choice.&lt;/p&gt;
&lt;p&gt;Being primarily a C# developer, I’ve been using ASP.NET MVC since version 1.
It’s a great framework. It can be very good at getting a project off the ground
quickly, especially when coupled with a good ORM such as NHibernate, or Entity
Framework.&lt;/p&gt;
&lt;p&gt;For a side project, I decided to set aside the familiar ASP.NET MVC framework in
favor of learning a new language and a new corresponding framework. After a
period of time spent deliberating over the virtues and drawbacks of each
language, I chose Python for the language, and Django for the framework&amp;hellip; and
there was much rejoicing.&lt;/p&gt;
&lt;p&gt;As I learned the language and read the Django docs, it became apparent to me
that the MVC pattern can be implemented in various ways. MVC is not just
whatever Microsoft says it is. The pattern (as with almost everything) is open
to a little interpretation. So I needed to come to terms with the absence of
some tools that I was used to having in ASP.NET MVC, as well as the unfamiliar
terminology in the Django framework.&lt;/p&gt;
&lt;h2 id=&#34;introducing-django-it-is-not-a-cms&#34;&gt;Introducing Django (it is not a CMS)&lt;/h2&gt;
&lt;p&gt;The first thing I would like to point out, is that Django is not a CMS. Django
is to Python as ASP.NET MVC is to C#. I was surprised to find that out. My first impression of Django was that it was like Drupal, or Wordpress. I thought it was more like a CMS than a framework.&lt;/p&gt;
&lt;p&gt;Having said that, Django’s administration scaffolding is amazing. Almost to the point that it could appear to be a pre-built CMS. Django is literally capable of generating an entire administration section that allows you to manage data in your database as defined by your MVC models. That is something that ASP.NET MVC is capable of doing to a certain degree, when an application uses Entity Framework, but they do it a little differently. ASP.NET MVC Scaffolding is completely dependant on Visual Studio’s ability to read your models and then generate code for your controllers. Though, in my experience I often have to go back and rewrite most of the generated code, and many-to-many relationships are sketchy, if they’re generated at all.&lt;/p&gt;
&lt;p&gt;That isn’t the case for Django, which has it’s own built in ORM. Django is capable of complete scaffolding of many-to-many relationships, image and file uploaders, field validation, as well as basic input fields.&lt;/p&gt;
&lt;h2 id=&#34;mvc-actually-stands-for-model-template-view&#34;&gt;MVC actually stands for Model Template View&lt;/h2&gt;
&lt;p&gt;It’s semantics, I know. Read on.&lt;/p&gt;
&lt;h2 id=&#34;django-controllers-arent-called-controllers&#34;&gt;Django Controllers Aren’t Called Controllers&lt;/h2&gt;
&lt;p&gt;To fulfill the MVC pattern, Django uses three primary divisions of code, the Model, the View, and the Template. Notice that there is no Controller.&lt;/p&gt;
&lt;p&gt;Since I come from and ASP.NET MVC background, I was expecting code divisions that are labeled Model, View, and Controller (hence MVC). But no, this is not the case in Django. This fact caused some initial confusion for me as I was learning Django, but it doesn’t need to be confusing. If you’re familiar with ASP.NET MVC, then we just need to associate the Model, View, Controller concepts to the correct labels in Django.&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th style=&#34;text-align:right&#34;&gt;&lt;/th&gt;
&lt;th&gt;Model&lt;/th&gt;
&lt;th&gt;View&lt;/th&gt;
&lt;th&gt;Controller&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:right&#34;&gt;&lt;strong&gt;ASP.NET MVC Term&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;Model&lt;/td&gt;
&lt;td&gt;View&lt;/td&gt;
&lt;td&gt;Controller&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:right&#34;&gt;&lt;strong&gt;Django Term&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;Model&lt;/td&gt;
&lt;td&gt;Template&lt;/td&gt;
&lt;td&gt;View&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2 id=&#34;djangos-views-are-not-aspnet-mvc-views&#34;&gt;Django’s Views are not ASP.NET MVC Views&lt;/h2&gt;
&lt;p&gt;When I think of Views in MVC, I think of the presentation layer which consists of markup, CSS, JavaScript, and some server-side scripting for basic display logic. That’s not what Views are in Django. Rather, Django’s Views do the equivalent job of the Controller in ASP.NET MVC.
Templates are the Real Views&lt;/p&gt;
&lt;p&gt;ASP.NET MVC uses the term &amp;lsquo;View&amp;rsquo; to describe their presentation layer. HTML markup, css styles and JavaScript come together in a View file with help from Razor. Razor is very powerful and it is easy to pick up because it allows C# syntax directly in the view file to render a complete webpage. In my experience, this can also lead to an unbalanced View that has too much logic embedded in the View file instead of in the controller.&lt;/p&gt;
&lt;p&gt;Django uses the term “Template&#39; to describe their presentation layer. It also brings HTML markup, css styles, and JavaScript together. Though, it uses it’s own template rendering system. Whereas ASP.NET has the power of Razor that leverages C# syntax, Django’s template rendering syntax is unique, and it introduces a steeper learning curve than Razor.&lt;/p&gt;
&lt;h2 id=&#34;if-youre-looking-for-partial-views-in-django&#34;&gt;If You’re Looking for Partial Views in Django&amp;hellip;&lt;/h2&gt;
&lt;p&gt;&amp;hellip;You’re probably not going to find them. There is nothing called &amp;ldquo;Partial Template&amp;rdquo; in Django, though you can accomplish similar functionality.&lt;/p&gt;
&lt;p&gt;Let’s say you have a data driven navigation bar that you want to display on all your template pages. You don’t want to write all your views to explicitly query that data, create the nav object for the template, and then have the navigation markup located in each template. Rather, you would like to just have located in your template file a reference to a &amp;ldquo;Partial View&#39; which would do all that for you and it is independent of View-specific processes. In ASP.NET, this can be accomplished with Partial Views. In Django, this can be accomplished with Template Tags. It seems to me to be more cumbersome than a Partial View concept, but that could just be because I am still relatively new to the Django framework.
Models are Pretty Much What You Would Expect&lt;/p&gt;
&lt;p&gt;Django has its own built in ORM. This allows you to define database tables, fields, validation, and relationships using Python classes. When you make changes to you Model’s classes, Django provides a simple command to sync the database:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ python manage.py syncdb
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;These Model classes are editable through Django’s excellent scaffolding in the admin area, and they are queryable from Views for displaying in templates.&lt;/p&gt;
&lt;h2 id=&#34;is-django-better-than-aspnet-mvc&#34;&gt;Is Django Better than ASP.NET MVC?&lt;/h2&gt;
&lt;p&gt;No, not really. Neither is ASP.NET better than Django. ASP.NET MVC and Django both have their weaknesses. They need to be selected based on the project specs. Also, familiarity is huge when considering what technology to use when starting a new project. I was looking for a low cost learning experience with my project, Python + Django was perfect for that. The project is now done, or perhaps more accurately described as ‘abandoned’, and I am glad that I explored it. I would probably use Django again, if the situation called for it. Though, I think first exploring other Python frameworks would be a good idea.&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>