<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Quakkels.com</title>
    <link>http://quakkels.com/index.xml</link>
    <description>Recent content on Quakkels.com</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sat, 28 Jan 2017 07:41:18 -0600</lastBuildDate>
    <atom:link href="http://quakkels.com/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Don&#39;t Take Frameworks for Granted</title>
      <link>http://quakkels.com/posts/dont-take-frameworks-for-granted/</link>
      <pubDate>Sat, 28 Jan 2017 07:41:18 -0600</pubDate>
      
      <guid>http://quakkels.com/posts/dont-take-frameworks-for-granted/</guid>
      <description>&lt;p&gt;Frameworks can help jump-start productivity on projects. But be careful.
Relying too much on frameworks could also limit yourself in the long run.&lt;/p&gt;

&lt;p&gt;Whenever the opportunity presents itself, programmers should carefully consider
whether using a framework is beneficial. It may provide immediate benefits, but
there should be no magic happening that isn&amp;rsquo;t understood by the programmer.&lt;/p&gt;

&lt;p&gt;Years ago, I learned how to make websites with C#. I had help from many books,
tutorials, and co-workers. With those resources I used the ASP.NET MVC 1
framework to build websites in a new way. However, while building my sample MVC
sites, the code I wrote was there just because that&amp;rsquo;s how it was written in a
tutorial somewhere. At the time, I had very little understanding of how the
internals worked. I didn&amp;rsquo;t understand how routing worked, or how reflection
worked, or how factories fit in, or anything about what a view engine did, or
model binding. It was all just magic that I accepted and had faith in.&lt;/p&gt;

&lt;p&gt;I was able to build a working website with C# and ASP.NET MVC, and I did it
fairly quickly. It was certainly done faster than it would have been without the
framework. This fact can&amp;rsquo;t be ignored. Learning a technology while achieving
results is important for any beginner. The experience of finishing something
is valuable for the sense of accomplishment and for the motivation to keep
going. But, it&amp;rsquo;s important to understand that once a project is finished, the
learning should not stop. Understanding the building blocks of any framework is
the foundation for every solid programmer.&lt;/p&gt;

&lt;p&gt;In my case, it was very important that I continued to build up my foundation of
understanding. That&amp;rsquo;s because projects in the real world don&amp;rsquo;t just end like
side projects could. They live on and they evolve. Real projects keep receiving
feature requests. New requirements will appear. Technology will change.
Eventually, the chosen framework might lose support, or might not keep up with
requirements. When that happens, knowledge of how the framework functions is
imperative. Without that knowledge, programmers are at the mercy of tutorial
writers and the framework creators. But with a knowledgeable foundation,
programmers are equipped to continue building and shipping their projects.&lt;/p&gt;

&lt;p&gt;The bottom line is this: frameworks can be wielded much more effectively
&lt;em&gt;after&lt;/em&gt; the programmer understands enough of the language and design concepts
so that the framework&amp;rsquo;s behavior isn&amp;rsquo;t magic anymore. Programmers equipped with
such understanding will know where to look for seams in the execution pipeline,
and they will be able to add customizations where appropriate.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Hello, I&#39;m Brandon Quakkelaar</title>
      <link>http://quakkels.com/about/</link>
      <pubDate>Fri, 27 Jan 2017 14:36:35 -0600</pubDate>
      
      <guid>http://quakkels.com/about/</guid>
      <description>

&lt;p&gt;I believe that programming is a craft. My goal is to continuously study this
craft, and to always refine my thinking and my execution while practicing
it. I have a decade of experience and even though I have come a long way since
I started, there&amp;rsquo;s always something fresh to study that I can add to my toolbox.&lt;/p&gt;

&lt;p&gt;Software development is a wonderful discipline that requires creativity,
ingenuity, and logic. It&amp;rsquo;s wonderful because a programmer can sit at a computer
and literally create new value from nothing. I get a strong sense of
satisfaction whenever I&amp;rsquo;m able to use my code to solve real world problems that
affect real people and businesses.&lt;/p&gt;

&lt;h2 id=&#34;my-projects&#34;&gt;My Projects&lt;/h2&gt;

&lt;p&gt;When I&amp;rsquo;m not working, I like to continue growing as a programmer by having
side projects. Each side project has given me new insights and experiences. You
can read more about some of my favorite projects &lt;a href=&#34;http://quakkels.com/projects&#34;&gt;here&lt;/a&gt;.&lt;/p&gt;

&lt;h2 id=&#34;my-family&#34;&gt;My Family&lt;/h2&gt;

&lt;p&gt;I am very happy to be living with my lovely wife and my
dog, in the American Midwest.&lt;/p&gt;

&lt;h2 id=&#34;my-digital-footprint&#34;&gt;My Digital Footprint&lt;/h2&gt;

&lt;p&gt;You can find me on some social network sites including:
&lt;a href=&#34;https://github.com/quakkels&#34;&gt;https://github.com/quakkels&lt;/a&gt;, and &lt;a href=&#34;https://twitter.com/quakkels&#34;&gt;https://twitter.com/quakkels&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;I launched Quakkels.com on February 5th, 2017 after blogging on a different
platform since 2013. This current version of my blog uses
&lt;a href=&#34;https://gohugo.io&#34;&gt;Hugo&lt;/a&gt;, a static site generator written in
&lt;a href=&#34;http://golang.com&#34;&gt;Go&lt;/a&gt;. I host using &lt;a href=&#34;https://pages.github.com/&#34;&gt;GitHub Pages&lt;/a&gt;.
The theme for this blog was written by myself and can be found
&lt;a href=&#34;https://github.com/quakkels/hugo-quakkels-theme&#34;&gt;on GitHub&lt;/a&gt;.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Pointing-online</title>
      <link>http://quakkels.com/projects/pointing-online/</link>
      <pubDate>Fri, 27 Jan 2017 14:36:35 -0600</pubDate>
      
      <guid>http://quakkels.com/projects/pointing-online/</guid>
      <description>&lt;p&gt;Pointing-online is a .Net Core project written in C# that was inspired by real
world needs of distributed teams practicing Agile Scrum.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Roast.it</title>
      <link>http://quakkels.com/projects/roast-it/</link>
      <pubDate>Fri, 27 Jan 2017 14:36:35 -0600</pubDate>
      
      <guid>http://quakkels.com/projects/roast-it/</guid>
      <description>&lt;p&gt;Roast.it is a simple JavaScript unit testing library designed for providing a
fast feedback loop with minimal fuss. There are no frills here. No unnecessary
dependencies. This will run unit tests for you from &lt;code&gt;npm test&lt;/code&gt;. It will not get
in your way.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>5 Slack Tricks that Changed My Life</title>
      <link>http://quakkels.com/posts/5-slack-tricks-that-changed-my-life/</link>
      <pubDate>Mon, 29 Aug 2016 00:00:00 +0000</pubDate>
      
      <guid>http://quakkels.com/posts/5-slack-tricks-that-changed-my-life/</guid>
      <description>&lt;p&gt;&lt;img src=&#34;http://quakkels.com/images/clickbait.png&#34; alt=&#34;&#34; /&gt;
&lt;em&gt;Please excuse the &amp;ldquo;click-baity&amp;rdquo; title. Sometimes I like to exaggerate.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Slack plays a significant role in my daily communication. My team at work has been using Slack as our primary mode of textual communication for over a year. It is also used by developer communities in my local area. At first, it felt a little clumsy. No more clumsy than a typical chat program. But, channels started to accumulate. The number of Direct Message feeds grew. Navigating and filtering all the conversations became more cumbersome. The tricks I will discuss here have helped me to stay nimble in Slack&amp;rsquo;s user interface. At first, I looked at Slack as a swamp of messages that I needed to wade through. But, with these small tricks, Slack has become easier to use and it even plays more of a productivity role.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;ctrl+k&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;If you are in a large Slack room with many channels, &lt;code&gt;ctrl+k&lt;/code&gt; can be a lifesaver! It gives you quick access to a list of channels that have new conversations. It also has an easy to use search feature that allows the user to navigate from their current conversation to a different channel or user. For someone like me, this is life changing. I love being able to use as much software as I can without needing to use my mouse.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;code&gt;/remind&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;At first, I thought the &lt;code&gt;/remind&lt;/code&gt; feature was a gimmick that wasn&amp;rsquo;t useful. So it took me a few months to even try it out for the first time. Once I tried it, I became dependent on it. Some of the ways to use this include:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Remind yourself to follow up with a colleague the next day.&lt;/li&gt;
&lt;li&gt;Remind yourself to start or end work on a project.&lt;/li&gt;
&lt;li&gt;Right before leaving work, you can remind yourself to run an errand on the way home.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;My favorite way to use &lt;code&gt;/remind&lt;/code&gt; is to set time-limits on periods of
concentration. Outlook does a similar thing for meetings. About 15 minutes
ahead of time, Outlook can pop up reminders that a meeting is approaching.
I like to use &lt;code&gt;/remind&lt;/code&gt; in a similar way for things that aren&amp;rsquo;t on my calendar.&lt;/p&gt;

&lt;p&gt;For example, I may need to switch concentration contexts midway through the
day. I can use &lt;code&gt;/remind me to work on XyzProject in 2 hours&lt;/code&gt;. Once the
reminder has been set, it&amp;rsquo;s easier for me to concentrate on the current
task because I don&amp;rsquo;t need to keep project &amp;lsquo;XyzProject&amp;rsquo; in the back of my mind.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;/remind&lt;/code&gt; is also useful for helping me remember the state a project was in
when I left it. For example, I can say &lt;code&gt;/remind me to bind new service 
implementations with Ninject on Monday at 8am&lt;/code&gt;. This has been a great tool
to get me working on a project right where I left off.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Star important channels&lt;/p&gt;

&lt;p&gt;This is a cool little trick the helps me group my highest priority channels together. At work, I have a handful of channels that are team specific. I like to star those so they all get prioritized at the top of the list. Then all the other channels, which are company-wide, get grouped below the starred channels. It&amp;rsquo;s the simplest thing, but works so well. Just select the channel and hover over the channel&amp;rsquo;s name at the top. Then a click-able star button will appear.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;code&gt;/mute&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;code&gt;/mute&lt;/code&gt; has been useful for me at work where I&amp;rsquo;m in many channels. However, I don&amp;rsquo;t need constant notifications whenever someone has added a post. &lt;code&gt;/mute&lt;/code&gt; has been a great tool for alleviating the tsunami of push notifications that I would have otherwise received.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;code&gt;/collapse&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;If people are going nuts with &lt;code&gt;/giphy&lt;/code&gt; or posting URLs that automatically show previews, then use &lt;code&gt;/collapse&lt;/code&gt; to clean up that clutter in one giant swoop!&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;So those are my 5 Slack tips. But wait! There&amp;rsquo;s more. So here are a few bonus tips.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;up-arrow&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;I know I&amp;rsquo;ve made posts that have errors in them. You can use the up arrow key to edit your last post, or even delete it entirely. If editing, I recommend surrounding the part that was wrong with &lt;code&gt;~&lt;/code&gt; and then adding your new edit after that. This is good helps people see what has changed.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;&lt;code&gt;ctrl+/&lt;/code&gt; brings up a help menu.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>Into the Nether: Linux</title>
      <link>http://quakkels.com/posts/into-the-nether-linux/</link>
      <pubDate>Wed, 12 Aug 2015 00:00:00 +0000</pubDate>
      
      <guid>http://quakkels.com/posts/into-the-nether-linux/</guid>
      <description>

&lt;p&gt;&lt;img src=&#34;http://quakkels.com/images/Debian_FVWM_Green_1.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;The first movie I saw that really got me excited about computers was WarGames. The WOPR was an inanimate object that just sat there on screen. But, it was still a complete character all by itself. It reacted to the Matthew Broderick character&amp;rsquo;s commands and questions and became something more clever than just a boring piece of hardware. The fictional software running inside the WOPR and Broderick&amp;rsquo;s character&amp;rsquo;s ability to interface with it created a story that was incredibly mystical and exciting. It made computers seem exclusive. Only a few skilled people could understand them. People who had these skills were members of an exclusive club. They knew how things worked, and how to do the coolest tricks.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://quakkels.com/images/wargames.jpg&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;WarGames&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Green and blue text on black screens became a symbol of those skills. Hackers didn&amp;rsquo;t need pictures or windowed interfaces. They were the best, and therefore didn&amp;rsquo;t need any extra ornamentation. The coolest interfaces were both simple and complex. Simple because it was text, and complex because of the heavy tasks these techno elites were accomplishing. Something as simple as &amp;ldquo;knock, knock, Neo.&amp;rdquo; blew my mind the first time I saw it, not because of flashy graphics. Rather, it was because I was immersed in that fictional universe. I believed that a hacker, at a keyboard somewhere in another dimension, that was talking directly to Mr. Anderson with the text on that black screen.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://quakkels.com/images/matrix.jpg&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;The Matrix&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Around this same time I learned about real people that changed the world with their computer ninja skills. Language designers, operating system inventors, and application developers who changed how we live every day. These titans of technology all knew how to build things using a black screen and green text. So let&amp;rsquo;s follow suite, hey? Let&amp;rsquo;s swallow the red pill, drink the Cool-Aid, and nerd up!&lt;/p&gt;

&lt;h2 id=&#34;enter-linux&#34;&gt;Enter Linux&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve been led to believe there is a great big computing world out there with
green text in the form of Linux. The amount of time I&amp;rsquo;ve already spent on
tangents about awesome movies means that I won&amp;rsquo;t go into the history of Linux
here. If you don&amp;rsquo;t know what Linux is, you should watch &lt;a href=&#34;https://www.youtube.com/watch?v=jw8K460vx1c&amp;amp;feature=youtu.be&#34;&gt;Revolution OS&lt;/a&gt;. It&amp;rsquo;s free. Do it now.&lt;/p&gt;

&lt;h2 id=&#34;debian-linux-on-a-virtual-machine&#34;&gt;Debian Linux on a virtual machine&lt;/h2&gt;

&lt;p&gt;I knew that installing Linux would involve climbing a learning curve. This can often lead to a little frustration. My frustration started early, but interestingly it was due to proprietary technology. Not due to Linux. I work in Windows 8.1 Pro for nearly all of my day to day development work. Windows 8.1 Pro includes Microsoft&amp;rsquo;s virtualization software called Hyper-V. From what I understand, Hyper-V can be very good. But it gave me a significant headache. My efforts to install Linux were derailed when I had trouble getting my Hyper-V VM to connect to my network. This was beyond frustrating. I eventually experienced the giant annoyance of breaking my host machine&amp;rsquo;s WiFi configuration. The only way my laptop could connect to the Internet was through a wired connection. I was beyond perturbed at this point, so once I restored my laptop&amp;rsquo;s networking settings I abandoned the idea of using Hyper-V in favor of virtualization software that I am much more familiar with: &lt;a href=&#34;https://www.virtualbox.org/&#34;&gt;VirtualBox&lt;/a&gt;. VirtualBox is probably a better choice for this anyway because it runs on more operating systems than Hyper-V, and it doesn&amp;rsquo;t cost anything.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; If you have turned on Hyper-V on your Windows machine and have since decided to use different virtualization software, turn it off in the &amp;ldquo;Turn Windows Features On/Off&amp;rdquo; section of the Control Panel. If you leave it on it will compete with your new virtualization software causing unusual behavior — such as being almost completely borked.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Once VirtualBox was installed, then I needed to choose a distribution of Linux
to install. After asking around on IRC, I decided to use Debian Testing for
this endeavor. Debian has three main releases. Stable, Testing, and Development.
Stable is usually very, very stable. But, to be so stable, it sacrifices current
software in favor of older software that has been tested for a longer period of
time, as in &lt;em&gt;years&lt;/em&gt; longer. The development release is (shockingly) the version of
Debian that is in development, thus it is the least stable version and prone to
breaking. The Testing release is the &amp;ldquo;just right&amp;rdquo; flavor of Debian that strikes
a balance between age and stability. Or so I&amp;rsquo;ve been told.&lt;/p&gt;

&lt;p&gt;I had a hard time finding the download link for Debian Testing. With help from IRC, I eventually came across a &lt;a href=&#34;https://www.debian.org/releases/testing/&#34;&gt;page&lt;/a&gt; explaining that the Testing release of Debian (at this time) is code-named Stretch. I decided that the most likely link to download the release I&amp;rsquo;m looking for was on &lt;a href=&#34;https://www.debian.org/devel/debian-installer/&#34;&gt;this page&lt;/a&gt;. I chose a CD ISO image for netinst (perhaps standing for &amp;lsquo;Network Installer&amp;rsquo;) and the only reason I felt somewhat sure that I was downloading the right ISO is because &amp;ldquo;stretch&amp;rdquo; was in the file name. Seems this whole section of the Debian web site could be easily improved to be more user friendly. Maybe a site that is hard to use is just a hazing ritual people have to go through in order to join the ranks of the &amp;ldquo;green text elite&amp;rdquo; programmers. If so, okay. I&amp;rsquo;m willing to jump through a couple of hoops. Remember WarGames? That shit&amp;rsquo;s awesome.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt;  The Debian devs seem to like Toy Story.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;After the ISO finished downloading, I created a new virtual machine in VirtualBox. It got 4GB of memory and 30GB for its hard drive. I called it Luke. The next VM I spin up will probably be called Leia. I like Star Wars. Part of being a programmer is naming your stuff whatever the hell you want. Yus!&lt;/p&gt;

&lt;p&gt;Since the ISO I have is the network installer version, the networking configuration has to work, or it will not be able to get the rest of the packages it needs to finish installation. Luke was configured for Bridged networking. It should work, I won&amp;rsquo;t really know until I load the ISO as a fake CD into Luke&amp;rsquo;s fake CD drive and try to install Debian from the network. Use the network, Luke.&lt;/p&gt;

&lt;p&gt;Installing Debian was pretty easy. Being in the United States, just about all the default settings were what I wanted. Really I just had to tell the installation process which timezone I wanted and to use the entire virtual hard drive for Linux. I did decide to not install any desktop or GUI. The typical desktop experience is not the goal here. Let&amp;rsquo;s start with just the essentials. A command terminal is essential. I think it&amp;rsquo;s important to use a terminal so I can feel comfortable working in most other Linux configurations. And, I should be able to SSH into a networked Linux machine to perform maintenance, programming, configuration adjustments, and any other task a programmer may want to perform.&lt;/p&gt;

&lt;h2 id=&#34;it-s-installed-now-what&#34;&gt;It&amp;rsquo;s installed. Now what?&lt;/h2&gt;

&lt;p&gt;After it finished booting up, Debian presented a nice login screen. Really simple and uncluttered. It was nice. The green text that I like so much wasn&amp;rsquo;t there, but it had a black background. At this point I&amp;rsquo;m thinking I can probably figure out how to configure green to be the default text color. But for now, I can&amp;rsquo;t help but feel pleased with myself.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://quakkels.com/images/01loginscreen.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;So I entered my username and my password and was greeted by a really nice, simple command prompt.&lt;/p&gt;

&lt;h2 id=&#34;where-is-sudo&#34;&gt;Where is sudo?&lt;/h2&gt;

&lt;p&gt;Apparently, some pretty standard items were missing from my current Debian setup. The obvious thing that is missing is any kind of desktop environment. I skipped that on purpose, so not a problem there. However, the plan was to install a very minimal window manager called &lt;a href=&#34;http://i3wm.org/&#34;&gt;i3wm&lt;/a&gt; that looked like it would be fun to use instead of a desktop environment that was just imitating Windows and OSX. i3 promised that it was really configurable, and the screenshots on their site had green and blue text on a black background. In short, it looked like an environment I would enjoy working in. But as I started trying to install the software I ran into problems.&lt;/p&gt;

&lt;p&gt;One of the most basic operations to perform in Linux is installing software using a package manager. Windows doesn&amp;rsquo;t have a culture around package managers, so this might seem odd to you if you are coming from a Windows only world. But, in Linux world, package managers are one of the best ways to install new programs.&lt;/p&gt;

&lt;p&gt;The package manager that Debian uses is called apt-get. This allows you to install software with a command that gets entered into the terminal. So if I wanted to install a program to be my window manager (like i3wm) I could install it like this:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ apt-get install i3
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;The thing is, that command only works of the user who is entering the command had permission to install software. A user like root would need to do that. The root user in Linux is like the equivalent of an Administrator account in Windows. Root has permission to install programs. However, there is a pretty big rule that you don&amp;rsquo;t usually want to log into Linux as root. It&amp;rsquo;s just safer to not be root when you use Linux. So the typical way to install software with apt-get changes to use another program called sudo. The modified command looks like this:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ sudo apt-get install i3
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;The sudo command will temporarily changes your regular user&amp;rsquo;s permissions to root level so that the next command (apt-get) will be executed with elevated permissions. At least, that&amp;rsquo;s how it is supposed to be. But for me, it didn&amp;rsquo;t work!&lt;/p&gt;

&lt;p&gt;Not sure why, but for some reason my Debian instance did not have sudo installed. &lt;strike&gt;Maybe it was somehow related to me not installing a desktop environment. I don&amp;rsquo;t know for sure. But it struck me as odd.&lt;/strike&gt; &lt;a href=&#34;https://www.reddit.com/r/linux/comments/3guj67/into_the_nether_linux/cu1suqk/&#34;&gt;It seems that the reason sudo wasn&amp;rsquo;t installed is because I set a root password during installation&lt;/a&gt;. So I used a series of commands to install sudo so I could use it for all software installs going forward. Here are the commands I ran:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ su root
$ apt-get install sudo
$ sudo adduser quakkels sudo
$ su quakkels
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;The su command (pronounced like soo) is the command to switch the current user to the user that is specified. Once I switched to root I was able to install sudo and add my regular user to the list of sudo-ers. Once that was completed, I switched back to my regular user account. Now I was able to install i3wm.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ sudo apt-get install i3
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;I think it worked. Excellent!!! I sat there, looking at my screen. It didn&amp;rsquo;t change. I tried a reboot thinking that it would start up with i3wm working.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ sudo reboot
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;The same login screen came up as before. I logged in and then thought that maybe I need to run i3 in order to start the window manager.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ i3
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Now that definitely did not work.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ sudo i3
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;That also definitely did not work. But, thanks to some advice from IRC and &lt;a href=&#34;http://blog.erikd.org/&#34;&gt;this guy&lt;/a&gt;, I knew enough that i3 has a dependency on xorg. So let&amp;rsquo;s install that.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ sudo apt-get install xorg
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;This was all well and good. But, I still had no idea why i3 wasn&amp;rsquo;t managing my windows yet! Starting to get a little annoyed. I should be patient though. It&amp;rsquo;s all about the learning experience right now. So after some googling, I found &lt;a href=&#34;https://faq.i3wm.org/question/6126/how-do-i-start-i3/&#34;&gt;this on the i3 FAQ&lt;/a&gt;. That FAQ question described almost exactly what I was experiencing.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;From the FAQ:&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;The easiest way to get started is to edit (or create, if misisng) ~/.xinitrc. If it didn&amp;rsquo;t exist, simply put exec i3 in there. If it exists, check the bottom for some exec call, comment it out and put exec i3 instead.
Once the file is saved, run startx from the TTY. This will start an X server, read the file and then start i3.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Also, note that the character ~ represents the current user&amp;rsquo;s home directory.&lt;/p&gt;

&lt;p&gt;After following the advice in that FAQ answer, I was able to start the i3 window manager with the following command.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ startx
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;After I entered that command and pressed &amp;lsquo;enter&amp;rsquo; celebration ensued. Now I had a working i3 environment. A little google/bing/duckduckgo&amp;rsquo;ing revealed that I could open a new terminal using the keyboard shortcut alt+enter. If a user needs to launch a program that doesn&amp;rsquo;t run in a terminal, it can be started using a special prompt launched with the shortcut alt+d. Then the name of the program you want to type can be entered and launched. I quickly isntalled a few must have programs: an IRC client called irssi, and a web browser called Ice Weasel.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ sudo apt-get install irssi
$ sudo apt-get install iceweasel
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;img src=&#34;02i3.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;h2 id=&#34;but-but-i-thought-there-would-be-a-black-background&#34;&gt;But, but — I thought there would be a black background?&lt;/h2&gt;

&lt;p&gt;Things are going pretty well, so far. But I&amp;rsquo;m not going to hide that I felt a pang of disappointment when I opened a terminal in i3 and it had black text on a white background. That is unfortunate. When I use this VM I want to feel like I&amp;rsquo;m in the movies. I know that&amp;rsquo;s a totally shallow goal, but it&amp;rsquo;s still fun. And I&amp;rsquo;m a little stubborn. So I will have to figure this out sometime, but for now it is working.&lt;/p&gt;

&lt;h2 id=&#34;a-little-vm-housekeeping&#34;&gt;A little VM housekeeping&lt;/h2&gt;

&lt;p&gt;VirtualBox provides something called Guest Additions that can be installed in operating systems running in their VMs. Guest Additions are nice because it lets the guest machine interact with the host in a much more streamlined way. I installed it primarily because I wanted the Linux workspace to resize when I resized the VirtualBox window. There are a couple of websites out there that have decent instructions. The instructions I followed are &lt;a href=&#34;http://www.swiftsoftwaregroup.com/debian-wheezy-guest-windows-8-1-host-using-virtualbox/&#34;&gt;here&lt;/a&gt;. Configuring the VM and inserting the Guest Additions cd wasn&amp;rsquo;t an issue. But Linux has this concept of &amp;lsquo;mounting&amp;rsquo; a drive before you can use it. Maybe Windows and other OS&amp;rsquo;s have this concept too, but it may have been behind the scenes. I struggled with the mounting concept because it wasn&amp;rsquo;t in the step by step instructions that I followed. After pounding my head against the wall for way too long, I kind of stumbled on the &amp;lsquo;mount&amp;rsquo; command. The commands I used in Linux to install Guest Additions were these (executed in a root terminal):&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ apt-get install module-assistant
$ m-a prepare
$ mount /media/cdrom
$ sh /media/cdrom/VBoxLinuxAdditions.run
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;After a quick reboot, the desktop environment was working with Guest Additions nicely.&lt;/p&gt;

&lt;h2 id=&#34;chasing-that-black-background&#34;&gt;Chasing that black background&lt;/h2&gt;

&lt;p&gt;It was still important to me that the terminal in i3 had light text on a black (or dark) background. A simple command told me what terminal i3 used.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ echo $TERM
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;That printed out &amp;lsquo;xterm&amp;rsquo;. According to online search results, xterm is one of the older terminals that exist. And, it is configurable. So I got busy &lt;a href=&#34;http://scarygliders.net/2011/12/01/customize-xterm-the-original-and-best-terminal/&#34;&gt;configuring&lt;/a&gt; it according to my own tastes.&lt;/p&gt;

&lt;p&gt;At that point, I started getting frustrated. My Linux VM had no ~/.Xresources file, so I went ahead and created one. That wasn&amp;rsquo;t a problem. The first problem was when I tried to copy and paste from my web browser into the Nano text editor that I was using to edit the new .Xresources file. Ctrl+c and Ctrl+v weren&amp;rsquo;t working for me. To avoid that issue in the short term, I decided to just manually edit two configuration settings: the foreground and background colors. My patience was starting to wear thin.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;xterm*foreground: rgb:4f/a3/43
xterm*background: rgb:00/00/00
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;I added those configuration settings to the file, closed the terminal, and opened a new terminal. Nothing changed. At this point I really was expecting the configuration file to take effect and overwrite the default settings. But it didn&amp;rsquo;t. I sat at my desk thinking about how it should have worked. It should have worked. Every other time I changed a config file it took effect as soon as the program restarted. Sure, cache might need to be cleared too. But this is how I understood computers to work. Adding or changing configuration should result in the program&amp;rsquo;s behavior changing to match. But it didn&amp;rsquo;t happen.&lt;/p&gt;

&lt;p&gt;Reading further down the &lt;a href=&#34;http://scarygliders.net/2011/12/01/customize-xterm-the-original-and-best-terminal/&#34;&gt;instructions&lt;/a&gt; led me to a command that seemed to somehow &amp;lsquo;merge&amp;rsquo; the .Xresources file with the actual configuration. This seemed odd to me. But, okay. That&amp;rsquo;s just how this works I suppose. So I ran the command.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ xrdb -merge ~/.Xresources
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Now we&amp;rsquo;re getting somewhere! I closed the terminal and reopened it. Success! I wrote a few words and then sat back in satisfaction. I ended the day feeling great about my new Linux environment.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://quakkels.com/images/03greenonblack.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;h2 id=&#34;the-next-day-losing-my-cool&#34;&gt;The next day, losing my cool&lt;/h2&gt;

&lt;p&gt;What is this crap? This is some kind of messed up shit.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://quakkels.com/images/04blackonwhite.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;The terminal colors were wrong. I changed them the day before, but the original colors were back. I checked my .Xresources config file and it hadn&amp;rsquo;t changed from the way I left it the previous day. It still had the color settings. This ticked me off. Configuration settings shouldn&amp;rsquo;t just reset themselves like this. Apparently they do in in this case though. Bad. I was beyond annoyed.&lt;/p&gt;

&lt;p&gt;Thanks to some help from this &lt;a href=&#34;http://www.linuxquestions.org/questions/slackware-14/xrdb-merge-xresources-how-can-i-get-rid-of-that-776844/#post3797806&#34;&gt;post&lt;/a&gt;,  I figured out that there is yet another step to configuring applications with .Xresources. So I added the line to my .xinitrc file and rebooted.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;xrdb -merge .Xresources
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;That did not work. Then I changed it again, and rebooted.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;xrdb -merge ~/.Xresources
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;This did not work. What the Hell, man? Let me guess. I probably need to not only configure the .Xresources configuration file with .xinitrc. I probably need to configure the .xinitrc configuration file inside some other configuration file. It&amp;rsquo;s configuration-ception!&lt;/p&gt;

&lt;p&gt;The actual fix was not that rage inducing as configuration-ception. Instead, there is a rational reason it isn&amp;rsquo;t working. Apparently, the .xinitrc is not a configuration file in the way that a typical XML or JSON file is a configuration file. The &amp;lsquo;rc&amp;rsquo; stands for &lt;a href=&#34;https://en.wikipedia.org/wiki/Run_commands&#34;&gt;run commands&lt;/a&gt;. The order of each line matters. I put the merge command at the end of the .xinitrc file. This means that the i3 window manager was starting before the .Xresources configuration file was merged in. So I updated the .xinitrc file.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;xrdb -merge ~/.Xresources
exec i3
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;It seems so simple now. I should have realized this earlier. For crying out loud, the only two lines in this file are both commands. Well, that&amp;rsquo;s hindsight for you.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Maintaining Your Vision</title>
      <link>http://quakkels.com/posts/maintaining-your-vision/</link>
      <pubDate>Mon, 03 Aug 2015 00:00:00 +0000</pubDate>
      
      <guid>http://quakkels.com/posts/maintaining-your-vision/</guid>
      <description>&lt;p&gt;Programmers are often creators. Being a creator takes vision. Vision to see the destination, and vision to see the course. The destination could be learning a new language or technology stack. The destination could be a product to be released to customers. It could be something done for personal edification. The course is determined by taking that larger goal and breaking it down to manageable steps.&lt;/p&gt;

&lt;p&gt;The trick for successfully creating something, is to maintain that vision. But often the vision becomes lost and projects end up stalled or abandoned entirely.&lt;/p&gt;

&lt;p&gt;Patience in our work as programmers may be one of the most underrated skills a programmer could possess. There have been many articles &lt;sup&gt;(&lt;a href=&#34;http://blogoscoped.com/archive/2005-08-24-n14.html&#34;&gt;1&lt;/a&gt;, &lt;a href=&#34;http://www.jerf.org/programming/lazyProgrammersGuide.html&#34;&gt;2&lt;/a&gt;)&lt;/sup&gt; written about the benefits of being a so-called &amp;ldquo;lazy programmer&amp;rdquo; which can lead to the benefits of automating common tasks. Though, the role that patience plays in persevering in a project is something that seems to get lost in the conversation.&lt;/p&gt;

&lt;p&gt;Patience is important on many levels, but two come to mind in particular. There&amp;rsquo;s the project level, and then there&amp;rsquo;s the module level.&lt;/p&gt;

&lt;p&gt;Patience is useful on the project level when you can see your ultimate goal, but there are barriers to getting it done. A type of project that I frequently undertake is learning a new programming language. It often presents itself as &amp;ldquo;I want to write X application using X language.&amp;rdquo; I can see the application in my mind. The barrier to finishing the application is the syntax and ecosystem of the language I intend to learn. Of course, right? The point of the whole project is learn those new things. This is when impatience can be a project killer because shortcuts get taken. The original goal was twofold: 1) language and 2) application. Impatience can shift that goal into becoming a singular goal based on an exciting app, rather than the dual target of learning and also building. Project level impatience is what usually causes my personal projects to languish.&lt;/p&gt;

&lt;p&gt;What I&amp;rsquo;ll call module level impatience is the kind of thing that rears its head when you&amp;rsquo;re eyeballs deep in code. The ultimate function of the feature being written becomes the focus, and the voice of impatience starts nagging about taking shortcuts to get to the finish line faster. This impatience clouds the reasoning about the individual pieces of the feature being implemented. It is the enemy of clean and maintainable code.&lt;/p&gt;

&lt;p&gt;The truth is that when we code with an impatient mindset, then the results will suffer. Patience is required to maintain the project&amp;rsquo;s vision.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Let&#39;s Scrape the Web with Python 3</title>
      <link>http://quakkels.com/posts/lets-scrape-the-web-with-python-3/</link>
      <pubDate>Sun, 10 Mar 2013 00:00:00 +0000</pubDate>
      
      <guid>http://quakkels.com/posts/lets-scrape-the-web-with-python-3/</guid>
      <description>

&lt;p&gt;&lt;img src=&#34;http://quakkels.com/images/pythonWebScrapeCover.jpg&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;In the back of my mind I&amp;rsquo;ve always been intrigued by writing an application that can retrieve web pages over HTTP. It&amp;rsquo;s a fairly simple thing to do. We have a myriad of web browsers that do it for us. But there is just something about writing an application that operates independently of a browser and reaches out to touch the internet that I find fun and intriguing. So let&amp;rsquo;s do it&amp;hellip; in Python.&lt;/p&gt;

&lt;p&gt;First let&amp;rsquo;s define some specifications for this project. Basically we&amp;rsquo;re going to &amp;ldquo;scrape&amp;rdquo; Craigslist.org listings and display them in our terminal (command line). It should be able to scrape any (or nearly any) of Craigslist&amp;rsquo;s regions and categories.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Will be a command line application&lt;/li&gt;
&lt;li&gt;Will read and display posts from Craigslist.org&lt;/li&gt;
&lt;li&gt;Will be able to define desired Craigslist.org subdomain and path from the command line&lt;/li&gt;
&lt;li&gt;Will display results to the terminal&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;separating-the-web-scraper-into-pieces&#34;&gt;Separating the Web Scraper into Pieces&lt;/h2&gt;

&lt;p&gt;As I see it, there are three pieces to this application:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;The user interface which handles input and displays ouput&lt;/li&gt;
&lt;li&gt;The HTTP client which actually accesses the HTML page and gets the information therein&lt;/li&gt;
&lt;li&gt;The HTML parser which reads the HTML and collects the parts we want to keep&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Now that the application&amp;rsquo;s functionality is defined and it is broken down into pieces. We can start thinking about the project&amp;rsquo;s name and structure. Let&amp;rsquo;s just call it MyScrape and let&amp;rsquo;s structure in the following folder and files.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;MyScrape/ (the application folder)

&lt;ul&gt;
&lt;li&gt;MyHttp.py (This will be responsible for the HTTP client that gets the web pages)&lt;/li&gt;
&lt;li&gt;MyParser.py (To read the HTML and collect the good parts)&lt;/li&gt;
&lt;li&gt;MyScrape.py (This will be the executable that handles user input and displays the results from MyParser)&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;the-http-client-and-python-3&#34;&gt;The HTTP Client and Python 3&lt;/h2&gt;

&lt;p&gt;Python 3 has a handly little module that we can use to make our lives easy. We&amp;rsquo;re going to import http.client into our MyHttp.py file and use it in our class.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;import http.client
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Now that we imported http.client, we can create our class to handle a page. Let&amp;rsquo;s keep things simple and just call this class Page. Page just needs to connect to a server, request a page using a path, and provide the result to the application. Here is the complete MyHttp.py file:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;&#39;&#39;&#39;GET a webpage using http.&#39;&#39;&#39;

import http.client

class Page:

    def __init__(self, servername, path):
        &#39;&#39;&#39;This initialize function sets the servername and path&#39;&#39;&#39;
        self.set_target(servername, path)

    def set_target(self, servername, path):
        &#39;&#39;&#39;This is a utility function that will reset the servername and the path&#39;&#39;&#39;
        self.servername = servername
        self.path = path

    def __get_page(self):
        &#39;&#39;&#39;This is a private function that actually goes out 
        and gets the response from the server&#39;&#39;&#39;

        server = http.client.HTTPConnection(self.servername)
        server.putrequest(&#39;GET&#39;, self.path)
        server.putheader(&#39;Accept&#39;, &#39;text/html&#39;)
        server.endheaders()

        return server.getresponse()        

    def get_as_string(self):
        &#39;&#39;&#39;This function provides the webpage as a string&#39;&#39;&#39;
        page = &#39;&#39;
        reply = self.__get_page() # gets the page

        if reply.status != 200:
            page = &#39;Error sending request {0} {1}&#39;.format(reply.status, reply.reason)
        else:
            data = reply.readlines()
            reply.close()
            for line in data:
                page += line.decode(&#39;utf-8&#39;)
        return page
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Now that we have our class, we need to make sure it works by testing it. We can do that by using the Python interpreter to execute our code for us. First, start the Python interpreter by sending the command:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ python3
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;to the shell prompt (or the command prompt if you&amp;rsquo;re on Windows). This should give you a prompt that looks like this:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;&amp;gt;&amp;gt;&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;To exit the interpreter, just enter exit() and press enter. &lt;em&gt;Note: More information about the Python interpreter can be found &lt;a href=&#34;http://docs.python.org/3.3/tutorial/interpreter.html&#34;&gt;here&lt;/a&gt; on the Python.org website&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;To test our code in the Python interpreter, first navigate to the MyScrape folder that has the MyHttp.py file in it.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ cd path/to/your/MyScrape
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Then start the interpreter and enter the following code:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;&amp;gt;&amp;gt;&amp;gt; import MyHttp
&amp;gt;&amp;gt;&amp;gt; page = MyHttp.Page(&#39;quakkels.com&#39;, &#39;&#39;)
&amp;gt;&amp;gt;&amp;gt; print(page.get_as_string())
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;You should now see the HTML source code for quakkels.com in your terminal. It works!&lt;/p&gt;

&lt;h2 id=&#34;html-parsing-and-python-3&#34;&gt;HTML Parsing and Python 3&lt;/h2&gt;

&lt;p&gt;The next part of this project we need to write is the HTML parser that allows us to identify the pieces of the Craigslist page that we want to keep. There are several different techniques for doing this including: regular expression matching (don&amp;rsquo;t use this technique), &lt;a href=&#34;https://developer.mozilla.org/en-US/docs/DOM&#34;&gt;DOM&lt;/a&gt;, and &lt;a href=&#34;http://sax.sourceforge.net/&#34;&gt;SAX&lt;/a&gt; parsing.
The DOM (Document Object Model) technique basically involves navigating an XML or HTML document through a tree of nodes. The SAX (Simple API for XML) technique does not involve navigating like the DOM technique does. Rather, it reads the file through once, sending information to the application as the file is read. This means it&amp;rsquo;s pretty quick, but because there is no navigation the application will need to keep track of the state of the document as the SAX style parser reads it. Our MyParser.py file is going to execute a SAX style parser using the html.parser module.&lt;/p&gt;

&lt;p&gt;Python 3 has a handy module called html.parser that we&amp;rsquo;ll use in our application. Our parser class is going to be designed to just read Cragslist.com listings. I&amp;rsquo;m going to name the parser class ClParser. ClParser will need to inherit from HTMLParser (which is in the html.parse module) so that we can override the methods that get executed as the file is read in a SAX manner.&lt;/p&gt;

&lt;p&gt;Here&amp;rsquo;s the complete MyParser.py file:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;&#39;&#39;&#39;
Parse html from craigslist
&#39;&#39;&#39;

from html.parser import HTMLParser

class ClParser(HTMLParser):

    # parser state
    # These variables store the current state of the parser as it reads the file
    date = &#39;&#39;           # The date for the current listing

    title = &#39;&#39;          # The title of the current listing

    link = &#39;&#39;           # The link to the current listing&#39;s details

    collectFor = None   # will use this to keep track of what kind of data we 
                        # are currently collecting for. valid options are:
                        # &#39;date&#39;, &#39;title&#39;, and &#39;link&#39;

    insideRow = False   # This flag keeps track of whether we are inside a &amp;quot;row&amp;quot;
                        # &amp;quot;rows&amp;quot; have listing information

    # parser output
    results = &#39;&#39;        # the parser&#39;s output will be stored here

    def handle_starttag(self, tag, attrs):
        &#39;&#39;&#39;This function gets called when the parser encounters a start tag&#39;&#39;&#39;
        if tag == &#39;a&#39; and self.insideRow:
            self.collectFor = &#39;title&#39;

        for key, value in attrs:

            if(self.collectFor == &#39;title&#39; 
                and key == &#39;href&#39;
                and not self.link): # and not self.link makes sure it doesn&#39;t overwrite a preexisting value
                self.link = value

            if key == &#39;class&#39;:
                if value == &#39;row&#39;:
                    self.insideRow = True
                if value == &#39;ban&#39;:
                    self.collectFor = &#39;date&#39;

    def handle_endtag(self,tag):
        &#39;&#39;&#39;This function is called when the parser encounters an end tag&#39;&#39;&#39;
        if tag == &#39;p&#39;:
            self.insideRow = False

            # is there data to output?
            if self.title + self.link:
                self.results += &amp;quot;\nDate: \t{0}\nTitle:\t{1}\nLink:\t{2}\n&amp;quot;.format(
                    self.date, 
                    self.title, 
                    self.link)
            self.__reset_row()

    def handle_data(self, data):
        &#39;&#39;&#39;This function is called when the parser encounters data inside to tags&#39;&#39;&#39;        
        if self.collectFor == &#39;date&#39;:
            self.date = data
        if self.collectFor == &#39;title&#39; and not self.title:
            self.title = data

        self.collectFor = None # when we&#39;re done collecting the data, reset this flag

    def __reset_row(self):
        &#39;&#39;&#39;This is a utility function to reset the parser&#39;s state after a row&#39;&#39;&#39;
        self.title = &#39;&#39;
        self.link = &#39;&#39;
        self.summary = &#39;&#39;
        self.collectFor = None
        self.insideRow = False
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;The HTMLParser class that we are inheriting from has a feed(string argument) function that has been applied to our ClParser class. To execute our parser, we just need to make an instance of the class and call the feed(string argument) function.&lt;/p&gt;

&lt;p&gt;We can test this in the Python interpreter in the same way that we tested MyHttp. In the interpreter enter the following code:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;&amp;gt;&amp;gt;&amp;gt; import MyHttp, MyParser
&amp;gt;&amp;gt;&amp;gt; page = MyHttp.Page(&#39;milwaukee.craigslist.org&#39;, &#39;/sya/&#39;)
&amp;gt;&amp;gt;&amp;gt; parser = MyParser.ClParser()
&amp;gt;&amp;gt;&amp;gt; parser.feed(page.get_as_string())
&amp;gt;&amp;gt;&amp;gt; print(parser.results)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;This should print a list of nicely formatted Craiglist listings for computers in the Milwaukee area. We&amp;rsquo;re almost done!&lt;/p&gt;

&lt;h2 id=&#34;the-last-piece&#34;&gt;The Last Piece!&lt;/h2&gt;

&lt;p&gt;Alright, we have two of our three pieces built. The last thing to do is handle user input and display results. We&amp;rsquo;re going to implement these features in the MyScrape.py file. Here&amp;rsquo;s the whole MyScrape.py file:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;import sys, MyParser, MyHttp

# try to assign the subdomain and path values
# if the assignment fails, just use default values
try:
    subdomain, path = sys.argv[1:]
except:
    subdomain, path = &#39;milwaukee&#39;, &#39;/sya/&#39;

# instantiate the parser
parser = MyParser.ClParser()

# instantiate the page
page = MyHttp.Page(subdomain + &#39;.craigslist.org&#39;, path)

# get the page and feed it to the parser
parser.feed(page.get_as_string())

# display the results
print(&#39;################\n    Results:\n################\n&#39;, parser.results)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;There you have it. MyScrape.py is the entry point to our application. It allows the user to set a subdomain and a path when calling the script. It brings the MyHttp and MyParser modules together. and it displays results to the screen. To use this application, enter the following command in your shell or command prompt:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ python3 MyScrape.py
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&amp;hellip;or&amp;hellip;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ python3 MyScrape.py sierravista /ata/
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;You can download the entire source &lt;a href=&#34;http://quakkels.com/files/MyScrape.zip&#34;&gt;here&lt;/a&gt;.&lt;/p&gt;

&lt;h2 id=&#34;improving-the-scrape&#34;&gt;Improving the Scrape&lt;/h2&gt;

&lt;p&gt;Feel free to take this code and experiment with it. Expand on it. Make it spider sub pages. Make it return a list of dictionaries instead of a string. Save the data in a sqlite database, or to a text file. Maybe make it into a web service. Do whatever you want with it. (Keep it legal.)&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>What Happens When You Login?</title>
      <link>http://quakkels.com/posts/what-happens-when-you-login/</link>
      <pubDate>Sat, 23 Feb 2013 00:00:00 +0000</pubDate>
      
      <guid>http://quakkels.com/posts/what-happens-when-you-login/</guid>
      <description>

&lt;p&gt;Your favorite website is asking you for your username and password.&lt;/p&gt;

&lt;p&gt;Username? Password? Sure, you&amp;rsquo;ve got those. [You enter your username] then [you enter your password] then [you press enter] then boom, you&amp;rsquo;re logged into the website.&lt;/p&gt;

&lt;p&gt;What actually just happened? Well, assuming that you entered correct login credentials, you can now access whatever members only area that site offers to those credentials. But before that, in the split seconds after you clicked login and before you saw your profile, the website had to verify that the credentials you entered were correct. It had to make sure that it knew the username you entered and it had to make sure that your password belonged with that username. That process is called &lt;em&gt;authentication&lt;/em&gt;.&lt;/p&gt;

&lt;h2 id=&#34;what-does-authentication-mean&#34;&gt;What Does Authentication Mean?&lt;/h2&gt;

&lt;p&gt;It is common for online applications (like websites) to want to identify their users. Take Facebook as an example. Facebook cannot operate unless it is able to reliably identify its users. So, Facebook provides a registration process for new users to create accounts. That registration asks the user to give login credentials. In Facebook&amp;rsquo;s case the credentials consist of an email address and a password. When a registered user visits Facebook, they can enter their credentials and Facebook knows who they are because they have registration information for those credentials. Being able correctly identify a returning user is called authentication. Described another way, a user with correct login credentials is authentic.&lt;/p&gt;

&lt;p&gt;Sounds pretty straightforward&amp;hellip; right?&lt;/p&gt;

&lt;p&gt;Well, no. Well, it should be. The problem is when online applications do a poor job of keeping your credentials safe.&lt;/p&gt;

&lt;h2 id=&#34;sending-your-login-credentials&#34;&gt;Sending Your Login Credentials&lt;/h2&gt;

&lt;p&gt;First of all, when you enter your username and password into a website that does not use an encrypted SSL connection, it is possible (dare I say easy?) for a hacker to read your username and password as it is sent to the website. If a website is really concerned about their user&amp;rsquo;s security then login forms should always use an SSL connection.&lt;/p&gt;

&lt;h2 id=&#34;storing-user-login-credentials&#34;&gt;Storing User Login Credentials&lt;/h2&gt;

&lt;p&gt;In order for sites to authenticate returning users, they need to store the user&amp;rsquo;s credentials. Usually the credentials are stored in a database. The most important thing to recognize about login credentials is that they are the keys to a person&amp;rsquo;s online identity. Therefore, it is extremely important to store login credentials in a very secure way. The most basic level of security is to make sure that the database is not publicly accessible. But, even if the public doesn&amp;rsquo;t have direct access to the database, there are other measures that should be taken to keep login credentials as secure as possible.&lt;/p&gt;

&lt;h2 id=&#34;a-no-good-horrible-irresponsible-wrong-wrong-wrong-way-of-storing-user-credentials&#34;&gt;A no-good, horrible, irresponsible, wrong, wrong, WRONG way of storing user credentials&lt;/h2&gt;

&lt;p&gt;Some irresponsible sites have stored credentials like this:&lt;/p&gt;

&lt;h3 id=&#34;a-bad-users-database-table&#34;&gt;A Bad Users Database Table&lt;/h3&gt;

&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;First Name&lt;/th&gt;
&lt;th&gt;Last Name&lt;/th&gt;
&lt;th&gt;Username&lt;/th&gt;
&lt;th&gt;Password&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Brandon&lt;/td&gt;
&lt;td&gt;Quakkelaar&lt;/td&gt;
&lt;td&gt;bq2013&lt;/td&gt;
&lt;td&gt;guessme&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;Jane&lt;/td&gt;
&lt;td&gt;Doe&lt;/td&gt;
&lt;td&gt;jdOnline&lt;/td&gt;
&lt;td&gt;password&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;Bob&lt;/td&gt;
&lt;td&gt;Smith&lt;/td&gt;
&lt;td&gt;bsmith&lt;/td&gt;
&lt;td&gt;secret&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;This is dangerous for a couple of reasons. The first and most glaring reason it is dangerous is because of the passwords are stored in plain text. This means that anyone who has access to this database (such as an employee of the website) can look up Jane Doe and find her password, Thereby allowing that person to steal Jane&amp;rsquo;s identity on that site. On top of that, if Jane has used the same password on other sites (like an online banking site) she is now vulnerable to identity theft there as well.&lt;/p&gt;

&lt;h2 id=&#34;a-slightly-better-way-of-storing-user-credentials&#34;&gt;A slightly better way of storing user credentials&lt;/h2&gt;

&lt;p&gt;Some sites that are more concerned with security store credentials a bit differently. They actually encrypt user&amp;rsquo;s password before storing them in the database.&lt;/p&gt;

&lt;h3 id=&#34;users-database-table-with-encrypted-passwords&#34;&gt;Users Database Table with Encrypted Passwords&lt;/h3&gt;

&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;First Name&lt;/th&gt;
&lt;th&gt;Last Name&lt;/th&gt;
&lt;th&gt;Username&lt;/th&gt;
&lt;th&gt;EncryptedPassword&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Brandon&lt;/td&gt;
&lt;td&gt;Quakkelaar&lt;/td&gt;
&lt;td&gt;bq2013&lt;/td&gt;
&lt;td&gt;hRnAQlrCPXFSGsS4cXDWh+vFLVWSlJka1YWBPTrpImI=&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;Jane&lt;/td&gt;
&lt;td&gt;Doe&lt;/td&gt;
&lt;td&gt;jdOnline&lt;/td&gt;
&lt;td&gt;3ookjok1lRzkDBXTYr2PPGigEM+U7mnCJ/Uxof7nPgI=&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;Bob&lt;/td&gt;
&lt;td&gt;Smith&lt;/td&gt;
&lt;td&gt;bsmith&lt;/td&gt;
&lt;td&gt;SKAbxUcdUOmqkP9TXJElrHkaZoIFwhGfzbcmy26QgN8=&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;Now the passwords are stored encrypted instead of stored as plain text. This is better, but this is still bad. The problem is that this particular encryption is reversible. This means that if an employee of the website wanted to, she could decrypt all the passwords. Not only that, but if someone gets ahold of Bob&amp;rsquo;s decrypted password, then they can hack into Bob&amp;rsquo;s account and Bob would never know about it until after something significant happens.&lt;/p&gt;

&lt;h2 id=&#34;passwords-should-be-stored-as-a-one-way-hash-with-salt&#34;&gt;Passwords should be stored as a one-way hash with salt&lt;/h2&gt;

&lt;p&gt;When a person registers on a website, the website should do at least three things to ensure security.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Send all credential information over an SSL&lt;/li&gt;
&lt;li&gt;Use a one-way hashing algorithm&lt;/li&gt;
&lt;li&gt;Use a Salt for each password&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Hashing passwords with a one-way hashing algorithm is similar to encrypting passwords. The difference is that once the password is hashed, it cannot be converted back to the original value. This is important and it is a weakness of systems that just encrypt their passwords.&lt;/p&gt;

&lt;p&gt;For example, let&amp;rsquo;s say I use the password &amp;ldquo;4mazingPa55word&amp;rdquo;. If I encrypted that password using the key &amp;ldquo;key&amp;rdquo;, then &amp;ldquo;4mazingpa55word&amp;rdquo; becomes &amp;ldquo;B0csjGFQtvfg+05Ufr6gJBiZPWe1s77krk4oSF0FlWo=&amp;rdquo;. The problem is that using that key, I can decrypt the encrypted password back to plain text. Whenever a password can be obtained in it plain text form, that is a bad thing. that means that a disgruntled employee with access to the database could decrypt passwords and log into people&amp;rsquo;s accounts &lt;strong&gt;without them ever realizing that their password has been compromised&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;The scary thing is that well known companies have been caught storing passwords in a way that allows the plain text version to be retrieved. &lt;a href=&#34;https://plus.google.com/+AmberYust/posts/NGV5xQwJywf&#34;&gt;In September of 2012, Pandora.com was caught doing this very thing&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Now, let&amp;rsquo;s consider a password stored using a one-way hash.&lt;/p&gt;

&lt;h3 id=&#34;users-database-table-with-salted-and-hashed-passwords&#34;&gt;Users Database Table with Salted and Hashed Passwords&lt;/h3&gt;

&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;First Name&lt;/th&gt;
&lt;th&gt;Last Name&lt;/th&gt;
&lt;th&gt;Username&lt;/th&gt;
&lt;th&gt;Salt&lt;/th&gt;
&lt;th&gt;HashedPassword&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Brandon&lt;/td&gt;
&lt;td&gt;Quakkelaar&lt;/td&gt;
&lt;td&gt;bq2013&lt;/td&gt;
&lt;td&gt;123abc&lt;/td&gt;
&lt;td&gt;jLg+RKUYydfcFmvuAD9DxXEaevk=&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;Jane&lt;/td&gt;
&lt;td&gt;Doe&lt;/td&gt;
&lt;td&gt;jdOnline&lt;/td&gt;
&lt;td&gt;qweasd&lt;/td&gt;
&lt;td&gt;IpVoLHy0+QqENEEmByVevHzoUUU=&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;Bob&lt;/td&gt;
&lt;td&gt;Smith&lt;/td&gt;
&lt;td&gt;bsmith&lt;/td&gt;
&lt;td&gt;poiqwe&lt;/td&gt;
&lt;td&gt;SYMTwSQi8+XtKAAtkJvXON8IQoY=&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;This way of storing passwords is more secure than just encrypting passwords, and it&amp;rsquo;s much more secure than just storing passwords in plain text.&lt;/p&gt;

&lt;h2 id=&#34;what-is-the-salt-for&#34;&gt;What is the Salt For?&lt;/h2&gt;

&lt;p&gt;The salt is a value that is randomly generated by the website when a user registers. It is added to the user supllied password before is gets hashed. This means that if your password is a common password, the hash will be more difficult to crack because the system automatically adds a random value to it. This protects against attacks using &lt;a href=&#34;https://en.wikipedia.org/wiki/Rainbow_table&#34;&gt;Rainbow tables&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;So &lt;em&gt;please&lt;/em&gt;, if you are ever in the position to write user authentication software, please Salt and one-way hash your password over an SSL!&lt;/p&gt;

&lt;h2 id=&#34;additional-reading&#34;&gt;Additional Reading&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://plus.google.com/+AmberYust/posts/NGV5xQwJywf&#34;&gt;Pandora Password Weakness Exposed&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://codingkilledthecat.wordpress.com/2012/09/04/some-best-practices-for-web-app-authentication/&#34;&gt;Some Best Practices for Web App Authentication&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://blog.codinghorror.com/youre-probably-storing-passwords-incorrectly/&#34;&gt;You&amp;rsquo;re Probably storing Password Incorrectly&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>Learn Insertion Sort with Video Game Discs</title>
      <link>http://quakkels.com/posts/learn-insertion-sort-with-video-game-discs/</link>
      <pubDate>Sat, 09 Feb 2013 00:00:00 +0000</pubDate>
      
      <guid>http://quakkels.com/posts/learn-insertion-sort-with-video-game-discs/</guid>
      <description>

&lt;p&gt;I think you could say I have an average number of video game discs. It&amp;rsquo;s not a huge number of games, but it is enough that it can be difficult to find a particular game if they&amp;rsquo;re not organized in a predictable way.&lt;/p&gt;

&lt;p&gt;Enter insertion sort. Insertion sort is in the same family as the bubble sort in that its worst case complexity is O(n2). But in practice, it is usually a faster sort.&lt;/p&gt;

&lt;p&gt;So we start with a few game discs that we want to sort. To simplify this demonstration each game is numbered.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://quakkels.com/images/insertionSort01.jpg&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;The sort begins by comparing the first two discs with each other, and ordering them appropriately. We see that the 4 is moved to before the 27.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://quakkels.com/images/insertionSort02.jpg&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;At this point, the insertion sort looks remarkably similar to the bubble sort. the interesting part will be shown soon. First we move onto the next game disc. The 42 gets compared to the 27 and stays where it is because it is already in order relative to the 27.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://quakkels.com/images/insertionSort03.jpg&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;Now comes the interesting part. The 21 is goes before the 42 and before the 27. So our insertion sort technique inserts the 21 into the correct spot.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://quakkels.com/images/insertionSort04.jpg&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;Then we get to the last game disc. An 8. This gets inserted after the 4 and before the 21.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://quakkels.com/images/insertionSort05.jpg&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;Now the entire list of game discs has been sorted. We see the process working, but now we need to translate this process into a computer algorithm.&lt;/p&gt;

&lt;h2 id=&#34;insertion-sort-example-in-javascript&#34;&gt;Insertion Sort Example in JavaScript&lt;/h2&gt;

&lt;pre&gt;&lt;code&gt;// set up the array with random values
var sortMe = new Array();
var arrayLength = 5;
var i = 0;
for(; i &amp;lt; arrayLength; i++) {
    sortMe[i] = Math.floor((Math.random()*20)+1);
}

var logText = &amp;quot;&amp;quot;;
i = 0;
for(; i &amp;lt; arrayLength; i++) {
    logText += sortMe[i] + &amp;quot;, &amp;quot;;
}
console.log(&amp;quot;Starting Values: \t&amp;quot; + logText);

// begin insertion sort
i = 1;
var j, temp, k;

for(; i &amp;lt; arrayLength; i++) {
    temp = sortMe[i];
    j = i;
    while(j &amp;gt; 0 &amp;amp;&amp;amp; sortMe[j-1] &amp;gt; temp) {
        sortMe[j] = sortMe[j-1];
        j--;
    }
    sortMe[j] = temp;

    logText = &amp;quot;New Order:\t\t&amp;quot;;
    k=0;
    for(; k &amp;lt; arrayLength; k++) {
        logText += sortMe[k] + &amp;quot;, &amp;quot;;
    }
    console.log(logText);
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Here&amp;rsquo;s a link to the &lt;a href=&#34;http://quakkels.com/files/InsertionSort.html&#34;&gt;working example&lt;/a&gt;.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Learn Bubble Sort with Playing Cards</title>
      <link>http://quakkels.com/posts/learn-bubble-sort-with-playing-cards/</link>
      <pubDate>Tue, 22 Jan 2013 00:00:00 +0000</pubDate>
      
      <guid>http://quakkels.com/posts/learn-bubble-sort-with-playing-cards/</guid>
      <description>

&lt;p&gt;Let&amp;rsquo;s say you have an unordered list of numbers and you wanted to put them in order from lowest to highest value. How would you do that? You&amp;rsquo;re probably thinking that you would just look at all the numbers, find the lowest number and put it at the beginning of your list. Then you would find the next largest number and put it in the second spot in the list, and so on until you&amp;rsquo;ve ordered the entire list of numbers. It&amp;rsquo;s simple, basic, and not very exciting. Now, let&amp;rsquo;s say that instead of ordering the list yourself, you decide it&amp;rsquo;s a better idea to write a computer program to order the list for you. Now you don&amp;rsquo;t have to deal with moving the numbers around, you just need to tell your program how to move the numbers, and then let the program handle any list you give it.&lt;/p&gt;

&lt;p&gt;So how do you write your program to order the list? One of the most basic techniques for putting lists in order is the Bubble Sort algorithm. To understand how a Bubble Sort works, let&amp;rsquo;s use it on a few random playing cards to get them in order. after we walk through the algorithm with cards, we&amp;rsquo;ll take a look at a Bubble Sort implemented in code.&lt;/p&gt;

&lt;h2 id=&#34;let-s-sort-some-playing-cards&#34;&gt;Let&amp;rsquo;s Sort Some Playing Cards&lt;/h2&gt;

&lt;p&gt;The image below shows we have five cards (with unknown values) that we need to put in order using a Bubble Sort.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://quakkels.com/images/bubbleSort01.jpg&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;The first step in a Bubble Sort is to compare the first two values with each other. Here we see the first two values are an Ace (1) and a Queen (12). They are in order, so we move on to the next card.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://quakkels.com/images/bubbleSort02.jpg&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;Now we compare the Queen with nine.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://quakkels.com/images/bubbleSort03.jpg&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;Since the Queen is a larger value, it trades places with the nine, as seen below.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://quakkels.com/images/bubbleSort04.jpg&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;Now we move on to the next card value. Since the Queen is a larger value than the two, they trade places.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://quakkels.com/images/bubbleSort05.jpg&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://quakkels.com/images/bubbleSort06.jpg&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;Now, we move on to the last card in the list. The Ace is less than the Queen, so once again the cards trade places.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://quakkels.com/images/bubbleSort07.jpg&#34; alt=&#34;&#34; /&gt;
&lt;img src=&#34;http://quakkels.com/images/bubbleSort08.jpg&#34; alt=&#34;&#34; /&gt;
&lt;img src=&#34;http://quakkels.com/images/bubbleSort09.jpg&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;At this point, each card in this list has been compared to a neighboring card at least once. The result is that the largest value among these five cards has &amp;ldquo;bubbled&amp;rdquo; to the end of the list. But, we&amp;rsquo;re not done yet. After only one pass through we can only be sure that the last card is in the correct position. So let&amp;rsquo;s run the the cards again.&lt;/p&gt;

&lt;p&gt;Starting at the beginning with the first two cards, Ace is compared with 9. Since Ace is less than nine, there is no change in position.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://quakkels.com/images/bubbleSort10.jpg&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;The next card, the two of hearts, is less than nine. So they trade places.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://quakkels.com/images/bubbleSort11.jpg&#34; alt=&#34;&#34; /&gt;
&lt;img src=&#34;http://quakkels.com/images/bubbleSort12.jpg&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;Next, nine is compared with an Ace. Since nine is greater than the Ace, they switch positions.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://quakkels.com/images/bubbleSort13.jpg&#34; alt=&#34;&#34; /&gt;
&lt;img src=&#34;http://quakkels.com/images/bubbleSort14.jpg&#34; alt=&#34;&#34; /&gt;
&lt;img src=&#34;http://quakkels.com/images/bubbleSort15.jpg&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;With this second pass, we can now be sure that the final two cards are correct. You should be starting to see a pattern here. We continue the process until all the cards are in order.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://quakkels.com/images/bubbleSort16.jpg&#34; alt=&#34;&#34; /&gt;
&lt;img src=&#34;http://quakkels.com/images/bubbleSort17.jpg&#34; alt=&#34;&#34; /&gt;
&lt;img src=&#34;http://quakkels.com/images/bubbleSort18.jpg&#34; alt=&#34;&#34; /&gt;
&lt;img src=&#34;http://quakkels.com/images/bubbleSort19.jpg&#34; alt=&#34;&#34; /&gt;
&lt;img src=&#34;http://quakkels.com/images/bubbleSort20.jpg&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;h2 id=&#34;implement-bubble-sort-in-javascript&#34;&gt;Implement Bubble Sort in JavaScript&lt;/h2&gt;

&lt;p&gt;Now that we understand the Bubble Sort process from the playing card demonstration, let&amp;rsquo;s implement it. Let&amp;rsquo;s use JavaScript for a simple example.&lt;/p&gt;

&lt;p&gt;The script begins by creating an array that holds 5 values, and assigning random numbers to the array. Once the array is created and populated, we print the array and values to the console.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;var sortMe = new Array();
var arrayLength = 5;
var i = 0;
for(; i &amp;lt; arrayLength; i++) {
    sortMe[i] = Math.floor((Math.random()*20)+1);
}

var logText = &amp;quot;&amp;quot;;
i = 0;
for(; i &amp;lt; arrayLength; i++) {
    logText += sortMe[i] + &amp;quot;, &amp;quot;;
}
console.log(&amp;quot;Starting Values: \t&amp;quot; + logText);
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Now we need to sort the array. The sort is done by using two loops and an if statement.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;i = 0;
var didSwap = true;
var temp;
for(; i &amp;lt; arrayLength &amp;amp;&amp;amp; didSwap; i++) {
    didSwap = false;
    var j = 0;
    for(; j &amp;lt; (arrayLength - 1); j++) {
        if(sortMe[j] &amp;gt; sortMe[j+1]) {
            temp = sortMe[j];
            sortMe[j] = sortMe[j+1];
            sortMe[j+1] = temp;
            didSwap = true;
        }    
    }

    logText = &amp;quot;New Order:\t\t&amp;quot;;
    k=0;
    for(; k &amp;lt; arrayLength; k++) {
        logText += sortMe[k] + &amp;quot;, &amp;quot;;
    }
    console.log(logText);
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;When this script is executed, it will log to the console the original unmodified array, then it will print the modified array after each pass. Here are the log messages I got when I ran this code:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;Starting Values:    7, 9, 2, 16, 4,
New Order:      7, 2, 9, 4, 16,
New Order:      2, 7, 4, 9, 16,
New Order:      2, 4, 7, 9, 16,
New Order:      2, 4, 7, 9, 16, 
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Notice that the first pass through the starting values put 16 at the end of the list (just like the playing cards example). Then each pass after that &amp;ldquo;bubbled&amp;rdquo; the next highest number up. &lt;a href=&#34;http://quakkels.com/files/BubbleSort.html&#34;&gt;Here&lt;/a&gt; is the complete example.&lt;/p&gt;

&lt;h2 id=&#34;problems-with-bubble-sort&#34;&gt;Problems with Bubble Sort&lt;/h2&gt;

&lt;p&gt;Great. We now have a way to get our computer program to put lists of numbers in order for us. It&amp;rsquo;s automatic and it works. However, there are problems with Bubble Sort. That problem is that when confronted with a worst case scenario (long, long lists with lots of numbers that need to be moved) it is slow! More numbers in the list and more numbers that need to be moved increase the complexity of the Bubble Sort. The more complex it gets, the slower it gets. Now, this is true for any sorting algorithm. The problem with the Bubble Sort is that it gets very complex very quickly.&lt;/p&gt;

&lt;p&gt;To describe the worst case complexity for an algorithm, computer science generally uses something called Big Oh Notation. The notation for the worst case Bubble Sort is O(n2). I&amp;rsquo;m not going to go into Big Oh Notation in detail here. If you&amp;rsquo;re interested in learning more about it, this &lt;a href=&#34;http://stackoverflow.com/questions/487258/what-is-a-plain-english-explanation-of-big-o-notation/487278#487278&#34;&gt;StackOverflow.com answer&lt;/a&gt; does a great job of explaing it in plain language. For the purposes if this article, it&amp;rsquo;s good to understand that Bubble Sort gets complex (and therefore slow) very quickly. There are other algorithms that do a better job of sorting numbers, but the Bubble Sort is one that is often taught to computer science students first.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Let&#39;s talk to a SQLite database with Python</title>
      <link>http://quakkels.com/posts/lets-talk-to-a-sqlite-database-with-python/</link>
      <pubDate>Sun, 20 Jan 2013 00:00:00 +0000</pubDate>
      
      <guid>http://quakkels.com/posts/lets-talk-to-a-sqlite-database-with-python/</guid>
      <description>

&lt;p&gt;As I write this, it&amp;rsquo;s the weekend. My wonderful wife brought home some amazing Jet Fuel XBold Dark Roast Coffee that is sure to keep me wired for the next several hours. Now what should I do? Let&amp;rsquo;s explore Python a little more by using it to talk to a database.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://quakkels.com/images/JetFuel.png&#34; alt=&#34;Turning caffeine into code!&#34; /&gt;&lt;/p&gt;

&lt;p&gt;We&amp;rsquo;re a long way from my bread and butter. My goto technologies for database interaction are .NET, C# and Entity Framework CodeFirst with SQL Server &lt;sup&gt;2005&lt;/sup&gt;&amp;frasl;&lt;sub&gt;2008&lt;/sub&gt;. These technologies lend themselves to enterprise level web and application development. They require a fair amount of software licenses and infrastructure to get rolling. In contrast, SQLite (as you may have guessed) is a very lightweight implementation of a relational database. It is completely self contained. There is no SQLite server or configuration requirements. You just make a database and boom! You&amp;rsquo;re in business. Because of this light footprint and its ease of use, it is a very common database to use in mobile applications.&lt;/p&gt;

&lt;p&gt;First, let&amp;rsquo;s create a SQLite database file. I&amp;rsquo;m going to call my database &amp;ldquo;Blog.sqlite&amp;rdquo;. You can do this from the command line with Python, or if you prefer a graphical interface, you can use a snappy little Firefox add-on called &lt;a href=&#34;https://addons.mozilla.org/en-us/firefox/addon/sqlite-manager/&#34;&gt;SQLite Manager&lt;/a&gt;. It runs inside Firefox and offers a simple interface for interacting with SQLite databases. And, since it runs in Firefox, it works on any platform that runs Firefox (E.G. MacOS, Windows, Linux).&lt;/p&gt;

&lt;p&gt;Once we have our database created, then we need to make a table. Once again, we can do this using straight SQL and Python from the command line, but I prefer to use the SQLite Manager add-on in Firefox.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://quakkels.com/images/CreatePostsTableResized.png&#34; alt=&#34;Screenshot of creating a table with SQLite Manager.&#34; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Note that the Id field is an auto incremented integer value and a primary key.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Now, let&amp;rsquo;s dive into code. What will this application do? Well, since this project is in the spirit of exploration, the application we&amp;rsquo;re going to build won&amp;rsquo;t be very useful. Instead it will have an academic focus. Let&amp;rsquo;s just perform basic CRUD operations (Create, Read, Update, Delete) and then exit. We won&amp;rsquo;t worry about user interaction or GUI or web. This is going to just be a console app.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;em&gt;This should go without saying, but this won&amp;rsquo;t work without installing Python first. I&amp;rsquo;m using Python3.2.3. Don&amp;rsquo;t worry about downloading SQLite. There is no SQLite server, remember? If you have Python, you can use SQLite.&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;In the same folder as the Blog.sqlite database, create your Python file using your favorite text editor. I called mine sqliteConnect.py. Once you have your file, you can run it from the command line by first browsing to the folder where you saved the file, then just enter the following command:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ python3 sqliteConnect.py
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;That will run the Python script. Though, nothing will happen until we put some code in there.&lt;/p&gt;

&lt;h2 id=&#34;connecting-to-your-sqlite-database-from-python&#34;&gt;Connecting to Your SQLite Database from Python&lt;/h2&gt;

&lt;p&gt;To perform CRUD functionality, first we need to establish a connection with the database, and then create what&amp;rsquo;s known as a cursor which will allow us to execute commands.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;import sqlite3

conn = sqlite3.connect(&#39;Blog.sqlite&#39;)
cursor = conn.cursor()
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;creating-a-record&#34;&gt;Creating a Record&lt;/h2&gt;

&lt;p&gt;Now that we have our open connection and our cursor, we can insert data into the Posts table.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;cursor.execute(&#39;insert into Posts (Headline, Body) values (?, ?)&#39;, (&#39;This is my Headline&#39;, &#39;This is the body of my blog post.&#39;))
firstPostId = cursor.lastrowid

cursor.execute(&#39;insert into Posts (Headline, Body) values (?, ?)&#39;, (&#39;Jet Fuel XBold Coffee&#39;, &#39;Jet Fuel XBold Dark Roast Coffee will make you code like a madman.&#39;))
conn.commit()
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Here, we call &lt;code&gt;cursor.execute()&lt;/code&gt; and pass it two parameters. A SQL command with placeholders for the data (the question marks), and a sequence containing the data to be inserted. Since we are hard-coding the insert, we could have just placed our data directly into the SQL. But in the real world, we could be inserting user generated input. In that case, we would want to use this parameterized technique to keep the SQL query safe and keep our database safe from SQL Injection style hacking attempts.&lt;/p&gt;

&lt;p&gt;We have explicitly inserted the data for Headline and Body while ignoring the value for the Id field. This is purposeful because when we created the Posts table, we defined Id to be an auto-incrementing integer value. This is good because it saves us from having to generate a unique identifier ourselves. However, we are going to be editing this same record later in our application. In order to be able to get the same record, we need to know the auto generated Id value.&lt;/p&gt;

&lt;p&gt;The last inserted row id is stored in &lt;code&gt;cursor.lastrowid&lt;/code&gt;. So, when our insert is complete, if we want to grab the new Id value, we just need to assign &lt;code&gt;cursor.lastrowid&lt;/code&gt; to our &lt;code&gt;firstPostId&lt;/code&gt; variable.&lt;/p&gt;

&lt;p&gt;It&amp;rsquo;s worth noting here, calling &lt;code&gt;cursor.execute()&lt;/code&gt; will execute the command on the database. But, we need to commit any changes by calling conn.commit(). If we don&amp;rsquo;t call conn.commit() before the connection is closed, then our changes will be undone as if they never happened.&lt;/p&gt;

&lt;h2 id=&#34;reading-our-new-records&#34;&gt;Reading Our New Records&lt;/h2&gt;

&lt;p&gt;Now that we have some data inserted into the database table, let&amp;rsquo;s read it out.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;cursor.execute(&#39;select * from Posts&#39;)

print(&#39;Current records: &#39;)
for row in cursor.fetchall():
    print(&#39;\t&#39;, row)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;We are using the same &lt;code&gt;cursor.execute()&lt;/code&gt; method to run a select query on the table. Then we can print each row by using &lt;code&gt;cursor.fetchall()&lt;/code&gt; in a for loop.&lt;/p&gt;

&lt;h2 id=&#34;update-that-first-record&#34;&gt;Update That First Record&lt;/h2&gt;

&lt;p&gt;Now, let&amp;rsquo;s make some changes to the record we inserted first. This is when the &lt;code&gt;firstPostId&lt;/code&gt; comes in handy.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;cursor.execute(&#39;update Posts set Headline=?, Body=? where Id=?&#39;, (&#39;This is my NEW Headline&#39;, &#39;This is the NEW body of my blog post.&#39;, firstPostId))
conn.commit()

print(&#39;Records after update: &#39;)
cursor.execute(&#39;select * from Posts&#39;)
for row in cursor.fetchall():
    print(&#39;\t&#39;, row)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Now when we print our read results, we can see that the first record has been updated with new data.&lt;/p&gt;

&lt;h2 id=&#34;delete-everything&#34;&gt;Delete Everything&lt;/h2&gt;

&lt;p&gt;You don&amp;rsquo;t have to delete everything, but that&amp;rsquo;s what I&amp;rsquo;m going to do.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;cursor.close()
conn.close()
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Now, when we print our query results, we see nothing.&lt;/p&gt;

&lt;h2 id=&#34;wrapping-up-closing-down&#34;&gt;Wrapping Up, Closing Down&lt;/h2&gt;

&lt;pre&gt;&lt;code&gt;cursor.close()
conn.close()
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Since we&amp;rsquo;re done with our cursor and connection, we can close them down.&lt;/p&gt;

&lt;h2 id=&#34;complete-code&#34;&gt;Complete Code&lt;/h2&gt;

&lt;pre&gt;&lt;code&gt;import sqlite3

conn = sqlite3.connect(&#39;Blog.sqlite&#39;)
cursor = conn.cursor()

# (C)reate a new blog post
cursor.execute(&#39;insert into Posts (Headline, Body) values (?, ?)&#39;, (&#39;This is my Headline&#39;, &#39;This is the body of my blog post.&#39;))
firstPostId = cursor.lastrowid

cursor.execute(&#39;insert into Posts (Headline, Body) values (?, ?)&#39;, (&#39;Jet Fuel XBold Coffee&#39;, &#39;Jet Fuel XBold Dark Roast Coffee will make you code like a madman.&#39;))
conn.commit()

# (R)ead our new posts
cursor.execute(&#39;select * from Posts&#39;)

print(&#39;Current records: &#39;)
for row in cursor.fetchall():
    print(&#39;\t&#39;, row)

# (U)pdate the first post
cursor.execute(&#39;update Posts set Headline=?, Body=? where Id=?&#39;, (&#39;This is my NEW Headline&#39;, &#39;This is the NEW body of my blog post.&#39;, firstPostId))
conn.commit()

print(&#39;Records after update: &#39;)
cursor.execute(&#39;select * from Posts&#39;)
for row in cursor.fetchall():
    print(&#39;\t&#39;, row)

# (D)elete all the records
cursor.execute(&#39;delete from Posts&#39;)

print(&#39;Records after delete: &#39;)
cursor.execute(&#39;select * from Posts&#39;)
for row in cursor.fetchall():
    print(&#39;\t&#39;, row)

conn.commit()
cursor.close()
conn.close()
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>ASP.NET MVC Compared to Django</title>
      <link>http://quakkels.com/posts/asp-net-mvc-compared-to-dango/</link>
      <pubDate>Sun, 13 Jan 2013 00:00:00 +0000</pubDate>
      
      <guid>http://quakkels.com/posts/asp-net-mvc-compared-to-dango/</guid>
      <description>

&lt;p&gt;The MVC pattern is widely used in web development today. Regardless of whether
you develop in C#, PHP, Python, Java, JavaScript, or Ruby, you won’t have any
trouble finding a popular MVC pattern for your language of choice.&lt;/p&gt;

&lt;p&gt;Being primarily a C# developer, I’ve been using ASP.NET MVC since version 1.
It’s a great framework. It can be very good at getting a project off the ground
quickly, especially when coupled with a good ORM such as NHibernate, or Entity
Framework.&lt;/p&gt;

&lt;p&gt;For a side project, I decided to set aside the familiar ASP.NET MVC framework in
favor of learning a new language and a new corresponding framework. After a
period of time spent deliberating over the virtues and drawbacks of each
language, I chose Python for the language, and Django for the framework&amp;hellip; and
there was much rejoicing.&lt;/p&gt;

&lt;p&gt;As I learned the language and read the Django docs, it became apparent to me
that the MVC pattern can be implemented in various ways. MVC is not just
whatever Microsoft says it is. The pattern (as with almost everything) is open
to a little interpretation. So I needed to come to terms with the absence of
some tools that I was used to having in ASP.NET MVC, as well as the unfamiliar
terminology in the Django framework.&lt;/p&gt;

&lt;h2 id=&#34;introducing-django-it-is-not-a-cms&#34;&gt;Introducing Django (it is not a CMS)&lt;/h2&gt;

&lt;p&gt;The first thing I would like to point out, is that Django is not a CMS. Django
is to Python as ASP.NET MVC is to C#. I was surprised to find that out. My first impression of Django was that it was like Drupal, or Wordpress. I thought it was more like a CMS than a framework.&lt;/p&gt;

&lt;p&gt;Having said that, Django’s administration scaffolding is amazing. Almost to the point that it could appear to be a pre-built CMS. Django is literally capable of generating an entire administration section that allows you to manage data in your database as defined by your MVC models. That is something that ASP.NET MVC is capable of doing to a certain degree, when an application uses Entity Framework, but they do it a little differently. ASP.NET MVC Scaffolding is completely dependant on Visual Studio’s ability to read your models and then generate code for your controllers. Though, in my experience I often have to go back and rewrite most of the generated code, and many-to-many relationships are sketchy, if they’re generated at all.&lt;/p&gt;

&lt;p&gt;That isn’t the case for Django, which has it’s own built in ORM. Django is capable of complete scaffolding of many-to-many relationships, image and file uploaders, field validation, as well as basic input fields.&lt;/p&gt;

&lt;h2 id=&#34;mvc-actually-stands-for-model-template-view&#34;&gt;MVC actually stands for Model Template View&lt;/h2&gt;

&lt;p&gt;It’s semantics, I know. Read on.&lt;/p&gt;

&lt;h2 id=&#34;django-controllers-aren-t-called-controllers&#34;&gt;Django Controllers Aren’t Called Controllers&lt;/h2&gt;

&lt;p&gt;To fulfill the MVC pattern, Django uses three primary divisions of code, the Model, the View, and the Template. Notice that there is no Controller.&lt;/p&gt;

&lt;p&gt;Since I come from and ASP.NET MVC background, I was expecting code divisions that are labeled Model, View, and Controller (hence MVC). But no, this is not the case in Django. This fact caused some initial confusion for me as I was learning Django, but it doesn’t need to be confusing. If you’re familiar with ASP.NET MVC, then we just need to associate the Model, View, Controller concepts to the correct labels in Django.&lt;/p&gt;

&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th align=&#34;right&#34;&gt;&lt;/th&gt;
&lt;th&gt;Model&lt;/th&gt;
&lt;th&gt;View&lt;/th&gt;
&lt;th&gt;Controller&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
&lt;tr&gt;
&lt;td align=&#34;right&#34;&gt;&lt;strong&gt;ASP.NET MVC Term&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;Model&lt;/td&gt;
&lt;td&gt;View&lt;/td&gt;
&lt;td&gt;Controller&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td align=&#34;right&#34;&gt;&lt;strong&gt;Django Term&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;Model&lt;/td&gt;
&lt;td&gt;Template&lt;/td&gt;
&lt;td&gt;View&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

&lt;h2 id=&#34;django-s-views-are-not-asp-net-mvc-views&#34;&gt;Django’s Views are not ASP.NET MVC Views&lt;/h2&gt;

&lt;p&gt;When I think of Views in MVC, I think of the presentation layer which consists of markup, CSS, JavaScript, and some server-side scripting for basic display logic. That’s not what Views are in Django. Rather, Django’s Views do the equivalent job of the Controller in ASP.NET MVC.
Templates are the Real Views&lt;/p&gt;

&lt;p&gt;ASP.NET MVC uses the term &amp;lsquo;View&amp;rsquo; to describe their presentation layer. HTML markup, css styles and JavaScript come together in a View file with help from Razor. Razor is very powerful and it is easy to pick up because it allows C# syntax directly in the view file to render a complete webpage. In my experience, this can also lead to an unbalanced View that has too much logic embedded in the View file instead of in the controller.&lt;/p&gt;

&lt;p&gt;Django uses the term “Template&amp;rsquo; to describe their presentation layer. It also brings HTML markup, css styles, and JavaScript together. Though, it uses it’s own template rendering system. Whereas ASP.NET has the power of Razor that leverages C# syntax, Django’s template rendering syntax is unique, and it introduces a steeper learning curve than Razor.&lt;/p&gt;

&lt;h2 id=&#34;if-you-re-looking-for-partial-views-in-django&#34;&gt;If You’re Looking for Partial Views in Django&amp;hellip;&lt;/h2&gt;

&lt;p&gt;&amp;hellip;You’re probably not going to find them. There is nothing called &amp;ldquo;Partial Template&amp;rdquo; in Django, though you can accomplish similar functionality.&lt;/p&gt;

&lt;p&gt;Let’s say you have a data driven navigation bar that you want to display on all your template pages. You don’t want to write all your views to explicitly query that data, create the nav object for the template, and then have the navigation markup located in each template. Rather, you would like to just have located in your template file a reference to a &amp;ldquo;Partial View&amp;rsquo; which would do all that for you and it is independent of View-specific processes. In ASP.NET, this can be accomplished with Partial Views. In Django, this can be accomplished with Template Tags. It seems to me to be more cumbersome than a Partial View concept, but that could just be because I am still relatively new to the Django framework.
Models are Pretty Much What You Would Expect&lt;/p&gt;

&lt;p&gt;Django has its own built in ORM. This allows you to define database tables, fields, validation, and relationships using Python classes. When you make changes to you Model’s classes, Django provides a simple command to sync the database:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ python manage.py syncdb
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;These Model classes are editable through Django’s excellent scaffolding in the admin area, and they are queryable from Views for displaying in templates.&lt;/p&gt;

&lt;h2 id=&#34;is-django-better-than-asp-net-mvc&#34;&gt;Is Django Better than ASP.NET MVC?&lt;/h2&gt;

&lt;p&gt;No, not really. Neither is ASP.NET better than Django. ASP.NET MVC and Django both have their weaknesses. They need to be selected based on the project specs. Also, familiarity is huge when considering what technology to use when starting a new project. I was looking for a low cost learning experience with my project, Python + Django was perfect for that. The project is now done, or perhaps more accurately described as ‘abandoned’, and I am glad that I explored it. I would probably use Django again, if the situation called for it. Though, I think first exploring other Python frameworks would be a good idea.&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>